{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "BalanceQueryForZeroAddress"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__AlreadyBanned"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Banning__CannotBanOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Banning__CannotBanSelf"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__InvalidTokenId"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__NotBanned"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Dispatcher__InvalidCaller"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Dispatcher__InvalidValue"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Dispatcher__TransactionAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ERC5643__DurationZero"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC5643__InvalidTokenId"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ERC5643__NotApprovedOrOwner"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC5643__SubscriptionNotRenewable"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_NodeAlreadyVoted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_NodeNotFound"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionCheckAlreadyCompleted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionCheckAlreadyRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionNotRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__InvalidValue"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__NotAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__NotMember"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__ValueAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__AlreadyMember"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__Banned"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InsufficientAllowance"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InsufficientPayment"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidCurrency"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidDuration"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidFeeRecipient"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidFreeAllocation"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidLimit"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidMaxSupply"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidPayment"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidPrice"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidPricingModule"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidTokenId"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__InvalidTransactionType"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__MaxSupplyReached"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__NotExpired"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Membership__PriceTooLow"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintERC2309QuantityExceedsLimit"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintZeroQuantity"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnerQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnershipNotInitializedForExtraData"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__InvalidPartnerFee"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "PartnerRegistry__InvalidRecipient"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__NotPartnerAccount"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__PartnerAlreadyRegistered"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__PartnerNotActive"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__PartnerNotRegistered"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "PartnerRegistry__RegistryFeeNotPaid"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Pausable__NotPaused"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Pausable__Paused"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Prepay__InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Prepay__InvalidAmount"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Prepay__InvalidMembership"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Prepay__InvalidSupplyAmount"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Reentrancy"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Referrals__InvalidBasisPoints"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Referrals__InvalidBpsFee"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Referrals__InvalidRecipient"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Referrals__InvalidReferralCode"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Referrals__ReferralAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__EntitlementAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__EntitlementDoesNotExist"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__InvalidEntitlementAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__InvalidPermission"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__PermissionAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__PermissionDoesNotExist"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Roles__RoleDoesNotExist"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferFromIncorrectOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToNonERC721ReceiverImplementer"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "URIQueryForNonexistentToken"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "approved",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ApprovalForAll",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "moderator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Banned",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fromTokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "toTokenId",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ConsecutiveTransfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "defaultBpsFee",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DefaultBpsFeeUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32",
            "indexed": true
          },
          {
            "internalType": "enum IEntitlementGatedBase.NodeVoteStatus",
            "name": "result",
            "type": "uint8",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "EntitlementCheckResultPosted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "maxBpsFee",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "MaxBpsFeeUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "MaxPartnerFeeSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "currency",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipCurrencyUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipFeeRecipientUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "allocation",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipFreeAllocationUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "limit",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipLimitUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "price",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipPriceUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipTokenIssued",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "MembershipTokenRejected",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "MembershipWithdrawal",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PartnerRegistered",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PartnerRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PartnerUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Paused",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "updater",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "bytes32",
            "name": "channelId",
            "type": "bytes32",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PermissionsAddedToChannelRole",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "updater",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "bytes32",
            "name": "channelId",
            "type": "bytes32",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PermissionsRemovedFromChannelRole",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "updater",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "bytes32",
            "name": "channelId",
            "type": "bytes32",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PermissionsUpdatedForChannelRole",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "supply",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Prepay__Prepaid",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "referralCode",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "basisPoints",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ReferralRegistered",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "referralCode",
            "type": "bytes32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ReferralRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "referralCode",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "basisPoints",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ReferralUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "RegistryFeeSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "creator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "RoleCreated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "remover",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "RoleRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "updater",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "RoleUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint64",
            "name": "expiration",
            "type": "uint64",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SubscriptionUpdate",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "moderator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Unbanned",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Unpaused",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "expiresAt",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipCurrency",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipDuration",
        "outputs": [
          {
            "internalType": "uint64",
            "name": "",
            "type": "uint64"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipFreeAllocation",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipImage",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipLimit",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipPricingModule",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipRenewalPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getProtocolFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getSpaceFactory",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "joinSpace"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address"
          },
          {
            "internalType": "struct IMembershipBase.ReferralTypes",
            "name": "referral",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "partner",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "userReferral",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "referralCode",
                "type": "string"
              }
            ]
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "joinSpaceWithReferral"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "renewMembership"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "revenue",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newAllocation",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipFreeAllocation"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "newImage",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipImage"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newLimit",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipLimit"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "newPrice",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipPrice"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "pricingModule",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipPricingModule"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "withdraw"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "expiresAt(uint256)": {
          "params": {
            "tokenId": "The token id of the membership"
          }
        },
        "getMembershipCurrency()": {
          "returns": {
            "_0": "The membership currency"
          }
        },
        "getMembershipDuration()": {
          "returns": {
            "_0": "The membership duration"
          }
        },
        "getMembershipFreeAllocation()": {
          "returns": {
            "_0": "The membership free allocation"
          }
        },
        "getMembershipImage()": {
          "returns": {
            "_0": "The membership image"
          }
        },
        "getMembershipLimit()": {
          "returns": {
            "_0": "The membership limit"
          }
        },
        "getMembershipPrice()": {
          "returns": {
            "_0": "The membership price"
          }
        },
        "getMembershipPricingModule()": {
          "returns": {
            "_0": "The membership pricing module"
          }
        },
        "getMembershipRenewalPrice(uint256)": {
          "params": {
            "tokenId": "The token id of the membership"
          },
          "returns": {
            "_0": "The membership renewal price"
          }
        },
        "getProtocolFee()": {
          "returns": {
            "_0": "The protocol fee"
          }
        },
        "getSpaceFactory()": {
          "returns": {
            "_0": "The space factory"
          }
        },
        "joinSpace(address)": {
          "params": {
            "receiver": "The address of the receiver"
          }
        },
        "joinSpaceWithReferral(address,(address,address,string))": {
          "params": {
            "receiver": "The address of the receiver",
            "referral": "The referral data"
          }
        },
        "renewMembership(uint256)": {
          "params": {
            "tokenId": "The token id of the membership"
          }
        },
        "revenue()": {
          "returns": {
            "_0": "The current balance of funds held by the space"
          }
        },
        "setMembershipFreeAllocation(uint256)": {
          "params": {
            "newAllocation": "The new membership free allocation"
          }
        },
        "setMembershipLimit(uint256)": {
          "params": {
            "newLimit": "The new membership limit"
          }
        },
        "setMembershipPrice(uint256)": {
          "params": {
            "newPrice": "The new membership price"
          }
        },
        "setMembershipPricingModule(address)": {
          "params": {
            "pricingModule": "The new pricing module"
          }
        },
        "withdraw(address)": {
          "params": {
            "receiver": "The address to receive the withdrawn funds"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "expiresAt(uint256)": {
          "notice": "Return the expiration date of a membership"
        },
        "getMembershipCurrency()": {
          "notice": "Get the membership currency"
        },
        "getMembershipDuration()": {
          "notice": "Get the membership duration"
        },
        "getMembershipFreeAllocation()": {
          "notice": "Get the membership free allocation"
        },
        "getMembershipImage()": {
          "notice": "Get the membership image"
        },
        "getMembershipLimit()": {
          "notice": "Get the membership limit"
        },
        "getMembershipPrice()": {
          "notice": "Get the membership price"
        },
        "getMembershipPricingModule()": {
          "notice": "Get the membership pricing module"
        },
        "getMembershipRenewalPrice(uint256)": {
          "notice": "Get the membership renewal price"
        },
        "getProtocolFee()": {
          "notice": "Get the protocol fee"
        },
        "getSpaceFactory()": {
          "notice": "Get the space factory"
        },
        "joinSpace(address)": {
          "notice": "Join a space"
        },
        "joinSpaceWithReferral(address,(address,address,string))": {
          "notice": "Join a space with a referral"
        },
        "renewMembership(uint256)": {
          "notice": "Renew a space membership"
        },
        "revenue()": {
          "notice": "Get the current balance of funds held by the space"
        },
        "setMembershipFreeAllocation(uint256)": {
          "notice": "Set the membership free allocation"
        },
        "setMembershipLimit(uint256)": {
          "notice": "Set the membership limit"
        },
        "setMembershipPrice(uint256)": {
          "notice": "Set the membership price"
        },
        "setMembershipPricingModule(address)": {
          "notice": "Set the membership pricing module"
        },
        "withdraw(address)": {
          "notice": "Withdraws the balance of the contract"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/spaces/facets/membership/MembershipFacet.sol": "MembershipFacet"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/airdrop/points/CheckIn.sol": {
      "keccak256": "0x10d34b8a6fcb2ab6ae4745a6aaac478cb7856df6b8b7c5f2fda4096a24247a4f",
      "urls": [
        "bzz-raw://3c6c52b784e76b81cdcfa86545a9390e628394dcd949c160a7fca8194750b915",
        "dweb:/ipfs/QmXUz1XR61ztZLDe4FxLJg6oqohzbyjPZXsvq4cibwV4jU"
      ],
      "license": "MIT"
    },
    "contracts/src/airdrop/points/ITownsPoints.sol": {
      "keccak256": "0xf507ad2a91ab58166c2e850b93085320bc483e12a3fe2aef808c0b254a0b656e",
      "urls": [
        "bzz-raw://5dc159159e4cbe755e18661831ce80a4ca183a43edc21a01504585e73e595ebc",
        "dweb:/ipfs/QmUELy6xZ8fpcpYfV1VV7oGbF5UAButoYteUNMX1ZAUsj7"
      ],
      "license": "MIT"
    },
    "contracts/src/airdrop/points/TownsPoints.sol": {
      "keccak256": "0x946df87486a5c9dc357d1ed6dd66a5910b058e3f39ee1406772788751cfc5adf",
      "urls": [
        "bzz-raw://418a07b0b0cddc9780b72a4efdf8af04210770ab0ecc504e8ec97beff58fe6f3",
        "dweb:/ipfs/QmPKzX3Ep18KZ7LqXKummvb2Jkvc1Weperpp8e6wBKckNU"
      ],
      "license": "MIT"
    },
    "contracts/src/airdrop/points/TownsPointsStorage.sol": {
      "keccak256": "0x7ea8ca73f728347c6872c229975632d0ea5a60cfde533d4ddb7c4bd0f37091a0",
      "urls": [
        "bzz-raw://bc87378a8ac74719ac4f96ad6245a544e0d5b81bb3a0d5674e90e46720f3e37e",
        "dweb:/ipfs/QmeRjXzUvsicS7g5xAcz9XKTbcyK38p5B7j4m389Bs6MrG"
      ],
      "license": "MIT"
    },
    "contracts/src/base/registry/facets/checker/IEntitlementChecker.sol": {
      "keccak256": "0xbeb7bfa236f19172b29eac53be03a3b377de3524b2d836192b0c64ebe708c204",
      "urls": [
        "bzz-raw://3d5a103a2b7b6be1ffa6662db6081763bcd210216fefc25307b835c555e0cf4d",
        "dweb:/ipfs/QmUCvhZdZpVnyJuZVgd2qGduTf11384TmmBJb2RaEBHxhh"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol": {
      "keccak256": "0x21d3c281732e54c93520a4f2cc72cc5af38c517f2a150ee67aa84704a3d78627",
      "urls": [
        "bzz-raw://52ce7c061da0142a4d775bb85896410d363d4a28c0275d3171a70872344fc9a4",
        "dweb:/ipfs/Qmdwgs3TaC4b83JVn6RG5pJJdCrxb74ZMRqZbYSe5DuqZf"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol": {
      "keccak256": "0x68cbff071e6a6a6b91b675af567616799435676fbbbebf4f9226e1226d6128b2",
      "urls": [
        "bzz-raw://2e2c7aee6ef32477733a50ba667cc510c8c165b9a9e146609b1f800acd0e4832",
        "dweb:/ipfs/QmcWAz74x3AR6kpzWdyPWw3iLQ1yHBT3ZVoK6jT7T3LwXq"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/IERC5643.sol": {
      "keccak256": "0x82dfa9b4063600f22326a66626284bc1d2dfad2efd89e5057c820d182298f224",
      "urls": [
        "bzz-raw://7ab9fc298c8239a7469c1a55d052eb904620e31e5183904b5928cb48f27f1615",
        "dweb:/ipfs/QmUn3WWo3s6xDYQosaAURbartVnWAbfUffLjNWR5jrbLjU"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
      "keccak256": "0x27b65225578e0cd90b90ab4ce91c4dfe621b43a58df227d3fdb0494c8f317d62",
      "urls": [
        "bzz-raw://70db26d8735dd6b7e7a847712603f793728521ebd05ad8640d6068b395dce3ba",
        "dweb:/ipfs/QmYeC1EM3XQWgHjQKpT41TksDFcCzr4Sz8JPRdagFms7mE"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
      "keccak256": "0x1f85619c07524883b96fd2f3ca92ea3e2343466c0832cc03f6eb1cbb828896f4",
      "urls": [
        "bzz-raw://06adf57b874d40a123eb3e7bf89cd7f49d29a93c142b26336263529ccd692e04",
        "dweb:/ipfs/QmQAhsfGRBPuBcSE1mqocTvutK9c4NfJPsbN4XQXtbsLey"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
      "keccak256": "0xb57dee608d37c98c32ac38fa3c84e77f5962cf39a0697815ad209edf55593782",
      "urls": [
        "bzz-raw://092750f101ae80c5bace9fd53ae87547a0aac6109cd58290609acd2ef489ce9d",
        "dweb:/ipfs/QmREM18vUEQmcmnTSyR4XxHB9Ykqomc9RuCFZcWNiovgbz"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/architect/IArchitect.sol": {
      "keccak256": "0x5d790cabaad08df5dda57b8055dbf21ed103bd10ad0e4d684a0e690f9c240a24",
      "urls": [
        "bzz-raw://8ff954eb61db93e8b7b58d542f73d75b2e9ee856896a07d436bbc8101b4e9aea",
        "dweb:/ipfs/QmdgzSC3JooGsWA6BTgyXQU7YA6byFFLuVkyZqs7mEgRCm"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/architect/pricing/IPricingModules.sol": {
      "keccak256": "0xa45fcd2bb5037c0b9b80bb02a3a4bd00fa99598a8d9e0a5ee2dff7a04c670171",
      "urls": [
        "bzz-raw://15f95100f32791a9aa2e3cc47fb9cd58542e9250834bfc38756012cc4baaa786",
        "dweb:/ipfs/QmYGPF6HQLoq5bCgMYW1AyT2Vz1H12Lt8LDdmzTadN5Ppm"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/partner/IPartnerRegistry.sol": {
      "keccak256": "0x1fe0cb9bee78697a459c596df3d69809decda8b0176bcba47bfd7b4c3db4440f",
      "urls": [
        "bzz-raw://4a0ffc7ccacc24be9dd81545fb6bf2d2b63698c6ac0c54def86aac1513d04dcf",
        "dweb:/ipfs/QmRRSWiMV9XyZZdhHR9jo3FdVqHYAB63Egpq8jiabTJdrp"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/platform/requirements/IPlatformRequirements.sol": {
      "keccak256": "0xd1c61d42973382822d0b8256b5d308ad693dfa59240864cce0bec1bd4208e4c6",
      "urls": [
        "bzz-raw://bff6d50557810f7aa9de451f6ac2b279fe5983eefc0b38ef8be7ebb2ffde0f86",
        "dweb:/ipfs/QmS6DXYXtPTfePgtrUxH1vmPycsVoumBQRJZugjGButowT"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/registry/IImplementationRegistry.sol": {
      "keccak256": "0xb447f7654cd152c29718c95983b62e390a59658d7d1a22b97f79d0aee9fb5de7",
      "urls": [
        "bzz-raw://756a9a38364c01937088ba927f09af2726d2df207eea4e0e2842e3fc66ccd32c",
        "dweb:/ipfs/QmbxBRXgtkEQsGtxq1uSM6vX38FkjPq6tpodCdtBmdEmXA"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/wallet-link/IWalletLink.sol": {
      "keccak256": "0x5ed1537dfea0969be2cef70cfd3858695fa7c736a1df677db6c85c0180a0ea0c",
      "urls": [
        "bzz-raw://0305e0d8ba95c608fd848ce99c288bf80892cc61bc01d53bf8d6f79a4a6a550d",
        "dweb:/ipfs/QmQoBXVdpRraU2BcA1Usw5HZB7e6cdnHvNyVhETKRUg4XC"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/IEntitlement.sol": {
      "keccak256": "0x81712a4b9127000ba341966d99395917dcb4b1305eadeddd1e1ad4e562587fdd",
      "urls": [
        "bzz-raw://df0fcc9d7ed7489786684f5fa8375b277146969021f96f6a9feb81cb39176eca",
        "dweb:/ipfs/QmbxXXeXe6AzXUL8cSoABMx2E2QbRAK2uJXd8TRnDuKSJ8"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/rule/IRuleEntitlement.sol": {
      "keccak256": "0x362d73e7b5a9626ffb3c76ebd7c41cae6240ce0a8d2ec401df345814a39b303b",
      "urls": [
        "bzz-raw://c750b186885d1af5cda10755c8443629b270d18b221c1054a7e9344adbea7ce4",
        "dweb:/ipfs/QmcwkJjGj8PGy43KRRh2c4ggcjBVD65XDsoq8H5LozTeN2"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/user/IUserEntitlement.sol": {
      "keccak256": "0x573a718650f7088b84fe0bc6ec0b85c354c58c842691c66b2e682912455161c9",
      "urls": [
        "bzz-raw://5b41f88dd0e806b3f61b72f340dbdc53710827b1c8de9bcba6ba11fd1f8ae25a",
        "dweb:/ipfs/QmZZtrWAgx3aLFA2dXuoHtujBqEuxAkHZkMP4FdmEAcQRx"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/Entitled.sol": {
      "keccak256": "0x407444b484c8951ee61c5665c18876ce798c8e28b9aa9d4599b4a027d892870c",
      "urls": [
        "bzz-raw://78692dc68fe28f7d1bd3deea97534f3f4ef92e17cf443cad12c74989370ca689",
        "dweb:/ipfs/QmWRDxd6jZjA1DR7N15pNZtqa5P7mHnB1wQSBHfSabCnSd"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/Permissions.sol": {
      "keccak256": "0x0b7ad76893a8b11877f161bf8d6180230190572f8a171ff5b124570be468976e",
      "urls": [
        "bzz-raw://d21a0dd820441b95a17a5f6681a4a68fdf180fe90aaaa0f3e9e5800b2a247634",
        "dweb:/ipfs/QmRVHasadqCqDSZRaRrddJXR23wkbVs9LQ6WcPxfDFH37x"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/BanningBase.sol": {
      "keccak256": "0x38c44494221f96568f3efb540a8a6c7af141de95f25caf26df6e8a8333f31249",
      "urls": [
        "bzz-raw://cf1f509347cab5090655ff8272443d18f9716fea5ef27cd86269ccbd2570aa7e",
        "dweb:/ipfs/QmbF8StzLRGnVvVXWYBowvdULoPPqQkU5hZR548cnRzuVs"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/BanningStorage.sol": {
      "keccak256": "0xcfbf5c113056e569abf23158853ff4877744b22a4bf2bf49a282d04dab23ab17",
      "urls": [
        "bzz-raw://4f825e97ca65c9cd3bd5885d2fa8b8e5f8f0dcbe227dec064abbbab645685fbe",
        "dweb:/ipfs/QmXAMntxrjzeNUKh9WcyHvzDmnV89vrJ9PkKRceqxJSxZp"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/IBanning.sol": {
      "keccak256": "0x350ec182a95a86a41335979cd7212132858c5cfcd366602b2f6cd0ec0694b63e",
      "urls": [
        "bzz-raw://ecb4ad0c5a1086c38448b3e279733f33edc0cc39648368e5cb43dfff139ff7e8",
        "dweb:/ipfs/QmWYfYE8Haqk9kBRxmLijfQSfqbfxf7LB3wQ24d3pG5PE3"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/channels/ChannelService.sol": {
      "keccak256": "0xd99752d8c031a33e075b257fe1863a269d470c8ad18052cdca6faeb5370d2169",
      "urls": [
        "bzz-raw://45bdecec56344c7cd8dceb7a47d5c66cd5b2c4e1eb006ed8b222a198e9f41f55",
        "dweb:/ipfs/QmSFhLzHvYsYj3Py976SQDqzfSz3nnsyYc7hWBp61WPdjK"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/channels/ChannelStorage.sol": {
      "keccak256": "0xeb4174513a652b1571b3a92cbefa80e9d450144e8d07bfb29c863d7d9de9313c",
      "urls": [
        "bzz-raw://6c3b73c84a2b4a56fcc8bd1fbaa0a8896a2dfc62a7fde07b13c6d8b05dcf8fe6",
        "dweb:/ipfs/QmRPukfmps5ESAR5saLNLJp6GEg1nNCTq5qChGeAjgtLV4"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/delegation/WalletLinkProxyBase.sol": {
      "keccak256": "0xffef403556b46744bd1833e5df57b02eb79e010841b16610e1740bc0dac929b2",
      "urls": [
        "bzz-raw://1afa30929e8c6b0c69528d328774c98789825a8de53e5945a1e95092bee2ad08",
        "dweb:/ipfs/QmTbCqLJTBHgcMuFwWSTbrgR7uaASJqwqYuku4YkGzTWW1"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/delegation/WalletLinkProxyStorage.sol": {
      "keccak256": "0x9667e475b9ad9f1130583840c9b0594a7512f7edd33163b926b3db21f70d9909",
      "urls": [
        "bzz-raw://d6271ce56258b1e9150378872d250cfaeb4501b5d0288e8f19f02096114c687f",
        "dweb:/ipfs/QmXSBA2CpLL9BdvZb994JYStgB9fJfsHwgcke6gsD3zybW"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/dispatcher/DispatcherBase.sol": {
      "keccak256": "0xd38bbf0e7de9af52f640f1a7af44f907ab230c68fd5731a30cb2957f7d508fbc",
      "urls": [
        "bzz-raw://d7537729ca5991c9b9d86417868e7c559c057840e2db29e14dbc8ff61f6e8ac9",
        "dweb:/ipfs/QmeMMMxpqEC1D5reauz5Q8hKc6Lx84Rxt2aQj3SL2fRfvs"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/dispatcher/DispatcherStorage.sol": {
      "keccak256": "0x0173a174a8241b5fee8610af734f25e92f311e4a66ad08d21c5897cc8895d543",
      "urls": [
        "bzz-raw://a25813aa9421f1dca29a7013f7d8be1d37d53d97791633c3c822ccb8fb42758a",
        "dweb:/ipfs/QmXHKAa6G8pEm3tUsVukLzgZDuEAcsKJwpjkKhR4pRwf5v"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/dispatcher/IDispatcher.sol": {
      "keccak256": "0xe619f5b6c184d7cb894aa3463309a411fb46ef80c3d4fa5199fb619ec1443e33",
      "urls": [
        "bzz-raw://d6a49ac3d978c21a7b27e871a4db7ec9bf82029d5bdd585c1a20b0d240293872",
        "dweb:/ipfs/QmadJaz3dx5qcykfnZa1W52WqEo8d83v3SA5X5UiyxUie1"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManagerService.sol": {
      "keccak256": "0x85433740dc34b5a8c76e512f168e5eec3c03b9ed8683ce0c0acb5368150d5c3d",
      "urls": [
        "bzz-raw://10706ddceeecee6b1d429175430f3439c25e59070ad3cf5918cf9795c113f501",
        "dweb:/ipfs/QmRS5ag8k4GSatGkWMKVvCBfxo2HPgh917UndkaF4VKCWa"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManagerStorage.sol": {
      "keccak256": "0x932608993bef144e63002ddef41a5c3cd3e800b49f7b18e0614da4912800d22d",
      "urls": [
        "bzz-raw://97e1e32435b60f4697a98679884b36c6912cc31a942bf2c92af6590c58c64ca9",
        "dweb:/ipfs/QmNWcuZvzPqgQk2cLsmq7T71oMZGh22Mx1BwKz6Sj1cMAu"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/EntitlementGatedBase.sol": {
      "keccak256": "0x6fa36ab7f0810731842c0599e7bc538325a40eeaee0ca0d1060e076834274045",
      "urls": [
        "bzz-raw://a85b75d335ce8f88cbf4428b5af56312820688ae1e3d1d3697a6b57c4d0330df",
        "dweb:/ipfs/QmXCwsVZcPU9NUgZHEpZS3f7vAPWy1kgfHUfUUcQAbfNf4"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/EntitlementGatedStorage.sol": {
      "keccak256": "0xb058672a61d2742e8232232cc66f052443d82beb8b2cdc681f10c23a49351b84",
      "urls": [
        "bzz-raw://f39d39a3bd3e39c2f6a5b21b82a7339176c163d82335f901a64c57dd73ffa5a3",
        "dweb:/ipfs/QmP8RmYv79xX8hLmrvjfceW9mdRYCYxMaxpywRpR281tMo"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/IEntitlementGated.sol": {
      "keccak256": "0x948de1018f7f78366263a40e0f8269e10941216bd03a9996edb24a6230959e74",
      "urls": [
        "bzz-raw://dc985539ce639f39fd68723acca6424a78deac6cec3693c9d8e1084a487c83ec",
        "dweb:/ipfs/QmQujX5rmDwhJZurp11FTiPLb7ev9swLTtdkagA8wydZiT"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/IMembership.sol": {
      "keccak256": "0xbbba6bf5f9e7075719c89910e88b9b17a9b8814da8b7a37c6d48d8335ebde9a7",
      "urls": [
        "bzz-raw://44476a805573fd5d9fb3e6da0a21dfade23ffd0d785103f1a5cb49a354dd4c55",
        "dweb:/ipfs/QmQTxP1bJuiXVPTprKTL8w5XNXrZCxYVtF6HTkFk8ovssD"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/MembershipBase.sol": {
      "keccak256": "0x7de2e6eb87601c5cf86f38ca75f53315f219752bca3f8893c03be06b114cf3b8",
      "urls": [
        "bzz-raw://63346e971ba0dd2bb309d381284a0249dd7a5ca500ad9cb07685478dd148eaf2",
        "dweb:/ipfs/QmWMLZuopNrxzmSyeWcMQCGf74Btqs8dAGTt2AQarcpHoC"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/MembershipFacet.sol": {
      "keccak256": "0xb3c93b5835b47a7e265401604913762b5415592d7dc41ce1f4164a8a5335544f",
      "urls": [
        "bzz-raw://be4b1e53b768365f5698eef3f744f747d0f7df3dcdf170bcf4e807b7464b781d",
        "dweb:/ipfs/QmZCZAZMoXCgVRHSHZSLALcxxmJaCgWFhvuQh9WDg9vu8G"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/MembershipStorage.sol": {
      "keccak256": "0x901e36addd71ab233a40af5185e6070be44b5aa7b1487dab3b0f9dc75d05e972",
      "urls": [
        "bzz-raw://017f70c4ed3fdc4cbef99380339b07f161ea01797acd0181d9d802e407f4b6cd",
        "dweb:/ipfs/QmeJNCJwAPU7VCyfNJSeTxf56dBVXNoJxYV4NN6AhtxsCa"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/join/MembershipJoin.sol": {
      "keccak256": "0x3c8b34517a8912a9951a6ec7a6ae15074d75d40eb1485a5ab690271b8945d53e",
      "urls": [
        "bzz-raw://6196d6690aa9d58a53ab303917eacd4a70c8e124908e9a18cdbef628029c24ce",
        "dweb:/ipfs/Qmes1T9LiYYyRZF6iHUVYFJ6WetECv5CduYa9oVdXcHgN7"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/pricing/IMembershipPricing.sol": {
      "keccak256": "0x9e3b6766b92d0e48b4b23a024f9622923f30d90f6f8673ded81e423171ec30c4",
      "urls": [
        "bzz-raw://e6f76b6045a8c6eeb24d6a9a42f82495cb1cb125dd90921d16a949b00a6f52dc",
        "dweb:/ipfs/QmPbRy4sAabTkEnZBoubzPqH2ycPevEzcEJ4NYJsCWmTFF"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/ISpaceOwner.sol": {
      "keccak256": "0x7baa36238144aae1068d9df8b28c6741cbcf1f26e53c0e429fc62c351623c1f4",
      "urls": [
        "bzz-raw://4d702b63539e714f343482f80de3f342d7870647cbeb01b42abab7dc9805683a",
        "dweb:/ipfs/QmcTDjumaJfXvAoyT6G38meixc7omy6MUuX33FrRuc8hNw"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/prepay/IPrepay.sol": {
      "keccak256": "0x4cc23cd204f20bd4a094d9292aaa494f73478d27c8f59e646454cbba11d781fa",
      "urls": [
        "bzz-raw://4f54c224f56396ac03335c95c4808acbeec6366f0c475d29edb2461cd53bcd15",
        "dweb:/ipfs/QmdDKUR8VVXJuR5Fj29SZxvR9GwxXeNQ6rtAT3TxX8VjwT"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/prepay/PrepayBase.sol": {
      "keccak256": "0x07fbb598088d52ff90a2dc5c3fea344823ae240f39b104f8db8a0b3953752ba3",
      "urls": [
        "bzz-raw://d34b9a5703ac33b27f91049a81f106bdf327ac57f4ac5886e21f3782104a5084",
        "dweb:/ipfs/QmR8ds7bpXxSLZX6QNhVRVYY8Fk2xHVFNqcAD1fY38kERs"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/prepay/PrepayStorage.sol": {
      "keccak256": "0x5daebdd10dafc3bc3552064a2fecd4a2639226b1af240351dd2e005a7ab270b4",
      "urls": [
        "bzz-raw://06cf75e08e360a74822cd846728c5d9f8440698bb43d29a8bcab3c0cebbec336",
        "dweb:/ipfs/QmZ4UfwTNqQg88A7mHmXM3ZExjTJQhPf3qvFLGzcVaGwwG"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/proxy/ISpaceProxyInitializer.sol": {
      "keccak256": "0x7455a7d2fa9c1220f9004d9301c0bbab4b186a1e0baaeac62f44dc4dedbf7207",
      "urls": [
        "bzz-raw://5140ae625b81b040c9b93768812daa62fe122870264d2f47edf016b478bbd769",
        "dweb:/ipfs/QmWjZWAng8thc1BfGJxmaxnFZqJGdKfu8EfLxxRZLqsdkW"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/referrals/IReferrals.sol": {
      "keccak256": "0x58ec271dbc2fc4c179f20874f9ec97f97e5d6bad0083b2e83b0c3b11fa21a796",
      "urls": [
        "bzz-raw://6ab4e180cafd33e37039ffb004d20abe9c8b133a22cd50cfcf8898dd3177eb9a",
        "dweb:/ipfs/QmcBSq323rdgNfGue7WgcqDcZ2hceduHuBQmpDWgfChMP2"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/referrals/ReferralsBase.sol": {
      "keccak256": "0x9085aa7742524adbb7f32a320fa4a4c803ae39e4b406c7f3c41022e83c8d218e",
      "urls": [
        "bzz-raw://37fdef0cd5ddb6ba1304d43420c4141d5b92dacb52efbee6d768a1c0dc17111a",
        "dweb:/ipfs/Qmdxdzz6bAc3LrXx2PRR1BZaRcNnJ4jLPos1eFZoF6xwjR"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/referrals/ReferralsStorage.sol": {
      "keccak256": "0x92d60431a4403fb15701cacf5ce4fb01a3cdd04120fa73f3eb9fc935d1ae2cbf",
      "urls": [
        "bzz-raw://b25afae2092460be64e8ce9f146eedeabe908738ebfe16062d2ea15200b4d3f6",
        "dweb:/ipfs/QmanSxLPMpcCJjdM5rNeXLLQ7AQeZTJAbrZ3sh79LNAbmr"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/roles/IRoles.sol": {
      "keccak256": "0x8e83ae75871b3aa2f2c2885770c0c810e7cf53b4bcb06ff3d73bbcc49b7a7a65",
      "urls": [
        "bzz-raw://3995418818a37c318df894c3a64f646f9a70113b0edf54fa34dc4c5ba2f426ed",
        "dweb:/ipfs/QmSeDc6kasbA8THfZU5fS5uQbbeV3X85qauF8PapgXzgT3"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/roles/RolesBase.sol": {
      "keccak256": "0xc847fa3ca60c268fc9ae30160b22092757e336d00e899f4002a68558eaf4c5f1",
      "urls": [
        "bzz-raw://65284c01e6bae841b51f0a53161d9e88c46b207b8eefdf98cd3c582f2312963e",
        "dweb:/ipfs/QmNcxd1hKiyYmKfVjjbwEHrydRJFLQYpjgeC6jMUosbcsY"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/roles/RolesStorage.sol": {
      "keccak256": "0xb7cd94235e366821c3dbdaa7dda9f66c6a0f55ced761a0cafc0de0ee2af41385",
      "urls": [
        "bzz-raw://f667b95874e4299f93064815001f7f1170e3268e677bb969c70e909f0086d53f",
        "dweb:/ipfs/QmRpEpYsMN4C3yB9ujW3MRa8VxwQRoFHP1qoyFEko7W575"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/StringSet.sol": {
      "keccak256": "0x2b9880e846f275864e847e8c7079d29a02c4a060c5a9d580fb153ff0e7b49ff6",
      "urls": [
        "bzz-raw://df9c170f28318746eab23befba1318735652c7d198e273a322a0ff2702680605",
        "dweb:/ipfs/QmanQQi9YiPHb9Cn4wpfQ9VYUi7UZ9iQibLL6V46JPibLu"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/Validator.sol": {
      "keccak256": "0x902f8ae6b6ec4703e6a72e40411ddaf062b73eb2890cab3c893ac3828367c61f",
      "urls": [
        "bzz-raw://39e68f53191121d78a6adc94587e085fb2845206cc8f5c58bf7f4532126e6bb3",
        "dweb:/ipfs/QmPLJ9UXfvhJEPhyKpQyz2WM7oNtGgJtbFpXfM8hmZDWRG"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/interfaces/IWETH.sol": {
      "keccak256": "0xb0a9a284b02664b2ceda4ed7cc8e7dbdd39cc09292b65b97a3417ba5b1440dd0",
      "urls": [
        "bzz-raw://701edb4dbdb8ab50ed2fdb568cc0956c07184e1f4e7d63854efc158408fa72a5",
        "dweb:/ipfs/QmV58ikDDcTC92hGEuQKerfsygnPg5cwCVLuMh9R9uYXb6"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/libraries/BasisPoints.sol": {
      "keccak256": "0xfaa5790726afc20e29f2a00e67693a59ae85a045beaa95f8f58bcbcef01ed87b",
      "urls": [
        "bzz-raw://a2da5e15739fc7093ea7b935c6542f7c01d9c33843a3d1a1d8895db404f8160e",
        "dweb:/ipfs/QmYVUkSh3QX7u9rnKfqLeb9Rh8tko5Q3Gpry6KnhTRF58L"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/libraries/CurrencyTransfer.sol": {
      "keccak256": "0x0bb719b327dd2db2bf3c5737aa67142dba8794514ba54291ea55fd9466c47083",
      "urls": [
        "bzz-raw://ca5da86edc38c53c9a80bc9611d7cb72bc96b273f8eeb15e540fae9c8f6544a4",
        "dweb:/ipfs/QmSfyJpsi8Ksw3soevcB5SnmaDevTnmV5NSbQFMLtTmXLr"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/libraries/CustomRevert.sol": {
      "keccak256": "0xdf3d131cb19a367b2f2842caffe356e3b6437ff9e82f6519dd3b067630e0a059",
      "urls": [
        "bzz-raw://abaae9b8fa22a7b0f6fe0adafb4ec510f9b720ef281d98b900225c033c66f9b7",
        "dweb:/ipfs/QmNU1NRUCkXibWP7PzNyXvtrkgtpwcUEVP8uFzsWeDmBfK"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
      "keccak256": "0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b",
      "urls": [
        "bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b",
        "dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
      "keccak256": "0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7",
      "urls": [
        "bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db",
        "dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "keccak256": "0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330",
      "urls": [
        "bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf",
        "dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
      "urls": [
        "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
        "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
      "urls": [
        "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
        "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
      "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
      "urls": [
        "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
        "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
      "urls": [
        "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
        "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
      "urls": [
        "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
        "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/Facet.sol": {
      "keccak256": "0xca7529809751c8c40aebd904b776f9ff28074b5a8a2df99f5bd1b588cb4b297c",
      "urls": [
        "bzz-raw://74bf56c81fcb3064f372bf9fb5ae895fd976d1cf8fd535c4f03397bdfabeb25e",
        "dweb:/ipfs/QmRmNLBWakunagRHRLXsEZAq6b2CyWM4voFrEjQn2tRGYY"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IIntrospectionBase.sol": {
      "keccak256": "0x51e706ab1184a3a5b353b87cfee07d471b9a5ef93897022bbcd1085b39a0c762",
      "urls": [
        "bzz-raw://3df386912c5cc759faee161b7825b2014040d04bf06528e74f4d759f06f2eb19",
        "dweb:/ipfs/QmP5AnGGNY4gsV1ABJ3WaueAsAwJVQ229ZfGjGxW8rSbEL"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x35f27aa0a4b64673a2648110422f31de0c5a71c68df562eccb9c4f2a27ee6647",
      "urls": [
        "bzz-raw://2eb1f2ff2e2d7222bf8fe2cf7558a2e47925e3d4557208362b1f50e63cb43006",
        "dweb:/ipfs/QmNcJZSAEPreUy66tt5brPrauVnUb4tqvcxej5Uc4SZZWz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/IERC173.sol": {
      "keccak256": "0x187fcc652a498aa18be665689a8496daad50511e6d7d926be0a210469325cdd8",
      "urls": [
        "bzz-raw://00c489916ad6e3ef2bfeb1d5f0230022cf776caab4b1372f0bf79b839810f1a2",
        "dweb:/ipfs/QmV2h8sDoHeyZKvbKeJBk6WaS5F87QaDMCq3iEymsbrmVh"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/token/ITokenOwnable.sol": {
      "keccak256": "0x125ffc776682deecf6bbf36f4b33b762968a4e6ad182dd5a896fb92fd103b397",
      "urls": [
        "bzz-raw://bdb1d0973416722e1f7772f9f0adb2d76a262c6cb667b5c3907076f4c9b3bd37",
        "dweb:/ipfs/Qme3Xvaq4fWexPd6TAjWpqfmiQ1KCedKGXwE9nxrcv2Cw3"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/token/TokenOwnableBase.sol": {
      "keccak256": "0xca833201bb1f1d717b6fe8b849da55cfa252aa4eccce9b29c98f355ce2cd8d83",
      "urls": [
        "bzz-raw://d079c6257d5d47f0fa978e47074cfd4d7467b6eec570c1b82d4c4dddf2f0b711",
        "dweb:/ipfs/QmbaNQ6EvLF2KziX7w4fgd6txijG4aR6yh7Qa14KtWvWRZ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/token/TokenOwnableStorage.sol": {
      "keccak256": "0xb2646ac976d46fe9b135f0fe5b0ca680279a74d6491c8cc49bc9c212d39da479",
      "urls": [
        "bzz-raw://413b2dbc619e27f5b43d38c3aee457a2217ad41aece2689fa7913a6756689faf",
        "dweb:/ipfs/QmW8ToN4UN4FZognfXRgBuKqPkYPJhoQrJAU45GpZoX32F"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/pausable/IPausable.sol": {
      "keccak256": "0x3df1579165cc634718d4619e0760ea3c492b2766c2e42328208a38457e103ca1",
      "urls": [
        "bzz-raw://1c6d3f4e3a3437075fb09c4875cfbf640af5cdc50c31b64e77ff5678dc1a8684",
        "dweb:/ipfs/QmNSnSYZrtNLdQqidpGR6ujbhuxhSr6LJEQBc3pCu6MNNJ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/pausable/PausableBase.sol": {
      "keccak256": "0xc15f937b2c4844ecf4831fb7bad77c29db231a6a046bbbf4fc60a4066d138cf0",
      "urls": [
        "bzz-raw://7c787b1d900ab0442f89503a50aba744b7403bb4609c161fae8c9c11a142d6d3",
        "dweb:/ipfs/QmafDG4KCRyetPzLXVjyz4NxUafFKJ8xwGUJEnu7Y3wz8V"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/pausable/PausableStorage.sol": {
      "keccak256": "0x998397ccc66cda4d76d219cf08bdd45eb26f583e0b484670f43d3b59ed64c19f",
      "urls": [
        "bzz-raw://a153e74c68fc0e2d7aa422d3b169b712a242bbf92da316732c4efd52e31781fd",
        "dweb:/ipfs/QmVtPuvumAG5qRHinmdQn7wkEK3J4HK9gBB5LBDWbeTRNj"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/primitive/AllowanceMap.sol": {
      "keccak256": "0x12e8d3902e7206b89e54a16d1f8fb4ba4a1b819584c2baa01177b8e6de82155a",
      "urls": [
        "bzz-raw://9d0f4677070fec923c45e590abbe87fe21ec4b99d34b1ed51cdd14d9691de369",
        "dweb:/ipfs/Qmdv3b3GzPFMrEobgaBVviTnFz9xRh4BcnQumpRAWPXof1"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/primitive/BalanceMap.sol": {
      "keccak256": "0xabc75038e0fb72da4da89abac8de68dddebc96180b15f78a1c930a5c0bed2a7c",
      "urls": [
        "bzz-raw://a9d3cf8f296c283eb16485b4088586a6b195bbcdfedb9de61ddc83ed4f2139c0",
        "dweb:/ipfs/Qmar9aZpDespjEPB3KPDyzVkw4Lu5Haw4YSN6MAyc1AeAJ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/primitive/ERC20.sol": {
      "keccak256": "0x4b433d379322c68241a596b8d2d2a349d2fb9f12b2365068067a11b6bcffc60a",
      "urls": [
        "bzz-raw://d412623852c32dfa28b3b46b3bff4b1881472f9a23e54fa9ee5d1795eb6a2213",
        "dweb:/ipfs/QmY2xoZHHtWnTvHfQ49WSLgZq7JfNtCZiDFdoDsWWYgcCU"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/proxy/managed/IManagedProxy.sol": {
      "keccak256": "0xf064a056a73233ef207e7206ac910616210f6729147f29912bdb4abc69906d01",
      "urls": [
        "bzz-raw://befb3501cc4b180ed3c5b156bde2700a6de26f17e828bdb8e8ff9615268f91e1",
        "dweb:/ipfs/QmP2qGhFpySb1efhpbRBXDxzxLjVTF2UmF2KRCM8hGrsPV"
      ],
      "license": "MIT"
    },
    "node_modules/solady/src/utils/FixedPointMathLib.sol": {
      "keccak256": "0x08ab121a1074161b4470c48dadcd6ed71eeb33db1adbefe514771e03cf380fba",
      "urls": [
        "bzz-raw://b8d7a3b1dd013ee2b1f56d55b58f1d0b09ae3bcbe630e5a122f8998072c1ecad",
        "dweb:/ipfs/QmNRnBQ6me4s6xDeejdHRjn9Drb5MgcRtfwit9HbYhkJkk"
      ],
      "license": "MIT"
    },
    "node_modules/solady/src/utils/ReentrancyGuard.sol": {
      "keccak256": "0xdb28f318ec45197a6c7cc2abebed67d7cb8b965838ef962e3844423256a9ddb8",
      "urls": [
        "bzz-raw://873cd46b77a2aeb781e7a0d131e7299151323ed884c330101a51d0727e218d98",
        "dweb:/ipfs/QmddadCjyedztvdSgLZEyKWoRes2SqtpviSjhEbSNrkUoi"
      ],
      "license": "MIT"
    },
    "node_modules/solady/src/utils/SafeTransferLib.sol": {
      "keccak256": "0xde0b5b7342367347c95b39a4be48263a63334c67d9923992764038a169d4bcc3",
      "urls": [
        "bzz-raw://b4680336a9617d89cc2e89d408426cc1f1dfccb365206a036b8345b2c5240333",
        "dweb:/ipfs/QmRYXk7Z5jsHPCwMi6pjUbKFbQwrrQfYVAY69CpV46BxKH"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}