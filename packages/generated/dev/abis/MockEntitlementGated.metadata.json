{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IEntitlementChecker",
            "name": "checker",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_NodeAlreadyVoted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_NodeNotFound"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionCheckAlreadyCompleted"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionCheckAlreadyRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementGated_TransactionNotRegistered"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_NotInInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ReentrancyGuard__ReentrantCall"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32",
            "indexed": true
          },
          {
            "internalType": "enum IEntitlementGatedBase.NodeVoteStatus",
            "name": "result",
            "type": "uint8",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "EntitlementCheckResultPosted",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "contract IEntitlementChecker",
            "name": "entitlementChecker",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__EntitlementGated_init"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getCrossChainEntitlementData",
        "outputs": [
          {
            "internalType": "struct IEntitlementDataQueryableBase.EntitlementData",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "entitlementType",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "entitlementData",
                "type": "bytes"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getRuleData",
        "outputs": [
          {
            "internalType": "struct IRuleEntitlementBase.RuleData",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IRuleEntitlementBase.Operation[]",
                "name": "operations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CombinedOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "index",
                    "type": "uint8"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.CheckOperation[]",
                "name": "checkOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CheckOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.LogicalOperation[]",
                "name": "logicalOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.LogicalOperationType",
                    "name": "logOpType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "leftOperationIndex",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "rightOperationIndex",
                    "type": "uint8"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getRuleData",
        "outputs": [
          {
            "internalType": "struct IRuleEntitlementBase.RuleData",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IRuleEntitlementBase.Operation[]",
                "name": "operations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CombinedOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "index",
                    "type": "uint8"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.CheckOperation[]",
                "name": "checkOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CheckOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.LogicalOperation[]",
                "name": "logicalOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.LogicalOperationType",
                    "name": "logOpType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "leftOperationIndex",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "rightOperationIndex",
                    "type": "uint8"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getRuleDataV2",
        "outputs": [
          {
            "internalType": "struct IRuleEntitlementBase.RuleDataV2",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IRuleEntitlementBase.Operation[]",
                "name": "operations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CombinedOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "index",
                    "type": "uint8"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.CheckOperationV2[]",
                "name": "checkOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CheckOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.LogicalOperation[]",
                "name": "logicalOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.LogicalOperationType",
                    "name": "logOpType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "leftOperationIndex",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "rightOperationIndex",
                    "type": "uint8"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "transactionId",
            "type": "bytes32"
          },
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "enum IEntitlementGatedBase.NodeVoteStatus",
            "name": "result",
            "type": "uint8"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "postEntitlementCheckResult"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "roleId",
            "type": "uint256"
          },
          {
            "internalType": "struct IRuleEntitlementBase.RuleData",
            "name": "ruleData",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IRuleEntitlementBase.Operation[]",
                "name": "operations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CombinedOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "index",
                    "type": "uint8"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.CheckOperation[]",
                "name": "checkOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CheckOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "threshold",
                    "type": "uint256"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.LogicalOperation[]",
                "name": "logicalOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.LogicalOperationType",
                    "name": "logOpType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "leftOperationIndex",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "rightOperationIndex",
                    "type": "uint8"
                  }
                ]
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "requestEntitlementCheck",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256[]",
            "name": "roleIds",
            "type": "uint256[]"
          },
          {
            "internalType": "struct IRuleEntitlementBase.RuleDataV2",
            "name": "ruleData",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IRuleEntitlementBase.Operation[]",
                "name": "operations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CombinedOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "index",
                    "type": "uint8"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.CheckOperationV2[]",
                "name": "checkOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.CheckOperationType",
                    "name": "opType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint256",
                    "name": "chainId",
                    "type": "uint256"
                  },
                  {
                    "internalType": "address",
                    "name": "contractAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "bytes",
                    "name": "params",
                    "type": "bytes"
                  }
                ]
              },
              {
                "internalType": "struct IRuleEntitlementBase.LogicalOperation[]",
                "name": "logicalOperations",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "enum IRuleEntitlementBase.LogicalOperationType",
                    "name": "logOpType",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "leftOperationIndex",
                    "type": "uint8"
                  },
                  {
                    "internalType": "uint8",
                    "name": "rightOperationIndex",
                    "type": "uint8"
                  }
                ]
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "requestEntitlementCheckV2",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getRuleData(bytes32,uint256)": {
          "notice": "deprecated Use EntitlementDataQueryable.getCrossChainEntitlementData instead"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/test/mocks/MockEntitlementGated.sol": "MockEntitlementGated"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/base/registry/facets/checker/IEntitlementChecker.sol": {
      "keccak256": "0xbeb7bfa236f19172b29eac53be03a3b377de3524b2d836192b0c64ebe708c204",
      "urls": [
        "bzz-raw://3d5a103a2b7b6be1ffa6662db6081763bcd210216fefc25307b835c555e0cf4d",
        "dweb:/ipfs/QmUCvhZdZpVnyJuZVgd2qGduTf11384TmmBJb2RaEBHxhh"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/Facet.sol": {
      "keccak256": "0x931702541a5e4a2756665e53baf1b04aa0418d5a9c635e519058905e21ae0c57",
      "urls": [
        "bzz-raw://b785043acac69be2d2545bc4492b2c08b6e931a53737f8508baf3f98c8743863",
        "dweb:/ipfs/QmeLzqURWDmXHJftmMXRsywdJw96CNDB9DQmgTpG1woYvc"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IIntrospectionBase.sol": {
      "keccak256": "0x51e706ab1184a3a5b353b87cfee07d471b9a5ef93897022bbcd1085b39a0c762",
      "urls": [
        "bzz-raw://3df386912c5cc759faee161b7825b2014040d04bf06528e74f4d759f06f2eb19",
        "dweb:/ipfs/QmP5AnGGNY4gsV1ABJ3WaueAsAwJVQ229ZfGjGxW8rSbEL"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x35f27aa0a4b64673a2648110422f31de0c5a71c68df562eccb9c4f2a27ee6647",
      "urls": [
        "bzz-raw://2eb1f2ff2e2d7222bf8fe2cf7558a2e47925e3d4557208362b1f50e63cb43006",
        "dweb:/ipfs/QmNcJZSAEPreUy66tt5brPrauVnUb4tqvcxej5Uc4SZZWz"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/reentrancy/IReentrancyGuard.sol": {
      "keccak256": "0x89ad30ac5476efd023189fca20b13214fe5541ea5fff11760e00f229c62c896e",
      "urls": [
        "bzz-raw://fc04fb0c48333cb0f4b84b01e50498d60510d52495c3772f0bf632773ec47a7d",
        "dweb:/ipfs/QmQUuYriat7eRRsPUHTeD2CDEwHzYxqW6qix7xf44kWByo"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/reentrancy/ReentrancyGuard.sol": {
      "keccak256": "0xb481ee6684d1589254563cb5c318b1eb75f6f15f96baecbd5f5e42b72b7a5003",
      "urls": [
        "bzz-raw://70e1bafcd0779c6241ee7716ae2058dd6f7d5a75bb211f5bfcb9aefa434228f8",
        "dweb:/ipfs/QmSbsdGjL1be4VBjgWrk5CodWGvszXZt5HX32PxhvXTZ5Y"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/reentrancy/ReentrancyGuardStorage.sol": {
      "keccak256": "0xe4a08e5712446357756a6da7b65ae80845732dfebac180bd478caaf64dfc790e",
      "urls": [
        "bzz-raw://09f5691ae9aedbe094cc83a0e8a4272c4d6dd5f57e69fec5870b148f2d94395e",
        "dweb:/ipfs/QmTLHQWuRp1L45oRV8oWWbk4Y4MMNYW1Rp9WUJ86gzVVRv"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/registry/IImplementationRegistry.sol": {
      "keccak256": "0xb447f7654cd152c29718c95983b62e390a59658d7d1a22b97f79d0aee9fb5de7",
      "urls": [
        "bzz-raw://756a9a38364c01937088ba927f09af2726d2df207eea4e0e2842e3fc66ccd32c",
        "dweb:/ipfs/QmbxBRXgtkEQsGtxq1uSM6vX38FkjPq6tpodCdtBmdEmXA"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/IEntitlement.sol": {
      "keccak256": "0x81712a4b9127000ba341966d99395917dcb4b1305eadeddd1e1ad4e562587fdd",
      "urls": [
        "bzz-raw://df0fcc9d7ed7489786684f5fa8375b277146969021f96f6a9feb81cb39176eca",
        "dweb:/ipfs/QmbxXXeXe6AzXUL8cSoABMx2E2QbRAK2uJXd8TRnDuKSJ8"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/rule/IRuleEntitlement.sol": {
      "keccak256": "0x362d73e7b5a9626ffb3c76ebd7c41cae6240ce0a8d2ec401df345814a39b303b",
      "urls": [
        "bzz-raw://c750b186885d1af5cda10755c8443629b270d18b221c1054a7e9344adbea7ce4",
        "dweb:/ipfs/QmcwkJjGj8PGy43KRRh2c4ggcjBVD65XDsoq8H5LozTeN2"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/extensions/IEntitlementDataQueryable.sol": {
      "keccak256": "0x408fcf935d47c3696901b138edbe3f862e63227e45a80be0154a21d39d6a4030",
      "urls": [
        "bzz-raw://dab36eda141004d86570adf5daf5d011186bedea42c183eada86e4a24c3e15f3",
        "dweb:/ipfs/QmbSenMpHd3CW7LASFJmrbVZea7ueTS74NWjymEBMdpHbe"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/EntitlementGated.sol": {
      "keccak256": "0xeef97a726ad3c7b7df920121be223d8de2ad6180ad39ff2ff42bc8b06f1e5ae1",
      "urls": [
        "bzz-raw://680f050ec4d0e151e81a6d5319109f88c081c3dd7666212b3c045db9ff3a6635",
        "dweb:/ipfs/QmZH9JUJvZbevyt4yX7WBbsxRp1ipbUfGg3NktGt5paJiE"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/EntitlementGatedBase.sol": {
      "keccak256": "0x6fa36ab7f0810731842c0599e7bc538325a40eeaee0ca0d1060e076834274045",
      "urls": [
        "bzz-raw://a85b75d335ce8f88cbf4428b5af56312820688ae1e3d1d3697a6b57c4d0330df",
        "dweb:/ipfs/QmXCwsVZcPU9NUgZHEpZS3f7vAPWy1kgfHUfUUcQAbfNf4"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/EntitlementGatedStorage.sol": {
      "keccak256": "0xb058672a61d2742e8232232cc66f052443d82beb8b2cdc681f10c23a49351b84",
      "urls": [
        "bzz-raw://f39d39a3bd3e39c2f6a5b21b82a7339176c163d82335f901a64c57dd73ffa5a3",
        "dweb:/ipfs/QmP8RmYv79xX8hLmrvjfceW9mdRYCYxMaxpywRpR281tMo"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/gated/IEntitlementGated.sol": {
      "keccak256": "0x948de1018f7f78366263a40e0f8269e10941216bd03a9996edb24a6230959e74",
      "urls": [
        "bzz-raw://dc985539ce639f39fd68723acca6424a78deac6cec3693c9d8e1084a487c83ec",
        "dweb:/ipfs/QmQujX5rmDwhJZurp11FTiPLb7ev9swLTtdkagA8wydZiT"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/MembershipStorage.sol": {
      "keccak256": "0x901e36addd71ab233a40af5185e6070be44b5aa7b1487dab3b0f9dc75d05e972",
      "urls": [
        "bzz-raw://017f70c4ed3fdc4cbef99380339b07f161ea01797acd0181d9d802e407f4b6cd",
        "dweb:/ipfs/QmeJNCJwAPU7VCyfNJSeTxf56dBVXNoJxYV4NN6AhtxsCa"
      ],
      "license": "MIT"
    },
    "contracts/test/mocks/MockEntitlementGated.sol": {
      "keccak256": "0xe4386e484ec4c39a36cc9b605e0fb1f7d2025f80e66dd76131c3b5dfdc71f0fa",
      "urls": [
        "bzz-raw://bd542d236d75f28ea0b36b80cb408ea3a59413efc7ffbc3ab669149721196019",
        "dweb:/ipfs/QmWAv1BVUSvMwfc8aGbLgquw6unFzJWp42zSc4mF7n5E7N"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
      "urls": [
        "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
        "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
      "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
      "urls": [
        "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
        "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
      "urls": [
        "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
        "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}