{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "BalanceQueryForZeroAddress"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__AlreadyBanned"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Banning__CannotBanOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Banning__CannotBanSelf"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__InvalidTokenId"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "Banning__NotBanned"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ERC5643__DurationZero"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC5643__InvalidTokenId"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ERC5643__NotApprovedOrOwner"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ERC5643__SubscriptionNotRenewable"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__InvalidValue"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__NotAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__NotMember"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Entitlement__ValueAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementsService__EntitlementAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementsService__EntitlementDoesNotExist"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementsService__ImmutableEntitlement"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementsService__InvalidEntitlementAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "EntitlementsService__InvalidEntitlementInterface"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintERC2309QuantityExceedsLimit"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintZeroQuantity"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnerQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnershipNotInitializedForExtraData"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Pausable__NotPaused"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Pausable__Paused"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferFromIncorrectOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToNonERC721ReceiverImplementer"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "URIQueryForNonexistentToken"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "approved",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ApprovalForAll",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "moderator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Banned",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fromTokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "toTokenId",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ConsecutiveTransfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "entitlement",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "EntitlementModuleAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "entitlement",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "EntitlementModuleRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Paused",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint64",
            "name": "expiration",
            "type": "uint64",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SubscriptionUpdate",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "moderator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Unbanned",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Unpaused",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "entitlement",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "addEntitlementModule"
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "entitlements",
            "type": "address[]"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "addImmutableEntitlements"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "entitlement",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getEntitlement",
        "outputs": [
          {
            "internalType": "struct IEntitlementsManagerBase.Entitlement",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "moduleAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "moduleType",
                "type": "string"
              },
              {
                "internalType": "bool",
                "name": "isImmutable",
                "type": "bool"
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getEntitlements",
        "outputs": [
          {
            "internalType": "struct IEntitlementsManagerBase.Entitlement[]",
            "name": "",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "moduleAddress",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "moduleType",
                "type": "string"
              },
              {
                "internalType": "bool",
                "name": "isImmutable",
                "type": "bool"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "channelId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "permission",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isEntitledToChannel",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "user",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "permission",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isEntitledToSpace",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "entitlement",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "removeEntitlementModule"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "addEntitlementModule(address)": {
          "params": {
            "entitlement": "The entitlement to add"
          }
        },
        "addImmutableEntitlements(address[])": {
          "params": {
            "entitlements": "The entitlements to add"
          }
        },
        "getEntitlement(address)": {
          "params": {
            "entitlement": "The entitlement to get"
          },
          "returns": {
            "_0": "The entitlement module address"
          }
        },
        "getEntitlements()": {
          "returns": {
            "_0": "The entitlement modules"
          }
        },
        "isEntitledToChannel(bytes32,address,string)": {
          "params": {
            "channelId": "The channel to check",
            "permission": "The permission to check",
            "user": "The user to check"
          },
          "returns": {
            "_0": "True if the user is entitled to the permission, false otherwise"
          }
        },
        "isEntitledToSpace(address,string)": {
          "params": {
            "permission": "The permission to check",
            "user": "The user to check"
          },
          "returns": {
            "_0": "True if the user is entitled to the permission, false otherwise"
          }
        },
        "removeEntitlementModule(address)": {
          "params": {
            "entitlement": "The entitlement to remove"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "addEntitlementModule(address)": {
          "notice": "Adds an entitlement to the space"
        },
        "addImmutableEntitlements(address[])": {
          "notice": "Allows the space owner to add immutable entitlements to the space"
        },
        "getEntitlement(address)": {
          "notice": "Gets an entitlement from the space"
        },
        "getEntitlements()": {
          "notice": "Gets all entitlements from the space"
        },
        "isEntitledToChannel(bytes32,address,string)": {
          "notice": "Checks if a user is entitled to a permission in a channel"
        },
        "isEntitledToSpace(address,string)": {
          "notice": "Checks if a user is entitled to a permission in the space"
        },
        "removeEntitlementModule(address)": {
          "notice": "Removes an entitlement from the space"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=lib/@openzeppelin/",
      "@prb/math/=lib/@prb/math/src/",
      "@prb/test/=lib/@prb/test/src/",
      "account-abstraction/=lib/account-abstraction/contracts/",
      "base64/=lib/base64/",
      "ds-test/=lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "hardhat-deploy/=lib/hardhat-deploy/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/spaces/facets/entitlements/EntitlementsManager.sol": "EntitlementsManager"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/diamond/facets/introspection/IERC165.sol": {
      "keccak256": "0x486758ee326820b0dd468c6a7a90fda8d67d48d3114792c587cee0e8417b366b",
      "urls": [
        "bzz-raw://b695090abcec8c2d487d73961265030fa4f64ecd84f6d80b85c6c7d4d9142ea0",
        "dweb:/ipfs/QmQTKuV2WEoy6vTCRxL39zEqubLUf9NhoC2BGB19CiYqRq"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/IERC173.sol": {
      "keccak256": "0x677cebaa56ee33950d04ba5baef02188da026beb7cf669bdf580410cb1f1c303",
      "urls": [
        "bzz-raw://d5be56219a4ab8d9709db7ffb74c73ee1be268b8f77308ef7a72d8f2820fb30b",
        "dweb:/ipfs/QmeTuAZMwRf3uRHMtHEd7M7LvGyRAEmoCikF4Pb6dCAKXd"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/token/ITokenOwnable.sol": {
      "keccak256": "0x086fd1151d35e0b231d9d184b93b413721c6f8e96777df597146fc194d346816",
      "urls": [
        "bzz-raw://e0db5e9362bd9886c65d29a1369cf6450a18dd138f36e479c549a640459c57eb",
        "dweb:/ipfs/QmWY12UEr3DpVFhUyAjKyz9V5pAZPSKcZbNgdqXMusyNUs"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/token/TokenOwnableBase.sol": {
      "keccak256": "0xeb38d5601e3e5ea48c47722e1f7294e78ad55649961ff7605b8fdeee8f84f0e4",
      "urls": [
        "bzz-raw://399307a92513cbb97d8f753415fd520598bac64a93871e9b5ce0941275bf3beb",
        "dweb:/ipfs/QmVaPg5DkVNfBPLqg5jPaddaKBhcptHgdyLbNwwnrnN6CQ"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/token/TokenOwnableStorage.sol": {
      "keccak256": "0xb2646ac976d46fe9b135f0fe5b0ca680279a74d6491c8cc49bc9c212d39da479",
      "urls": [
        "bzz-raw://413b2dbc619e27f5b43d38c3aee457a2217ad41aece2689fa7913a6756689faf",
        "dweb:/ipfs/QmW8ToN4UN4FZognfXRgBuKqPkYPJhoQrJAU45GpZoX32F"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/pausable/IPausable.sol": {
      "keccak256": "0x3df1579165cc634718d4619e0760ea3c492b2766c2e42328208a38457e103ca1",
      "urls": [
        "bzz-raw://1c6d3f4e3a3437075fb09c4875cfbf640af5cdc50c31b64e77ff5678dc1a8684",
        "dweb:/ipfs/QmNSnSYZrtNLdQqidpGR6ujbhuxhSr6LJEQBc3pCu6MNNJ"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/pausable/PausableBase.sol": {
      "keccak256": "0xc15f937b2c4844ecf4831fb7bad77c29db231a6a046bbbf4fc60a4066d138cf0",
      "urls": [
        "bzz-raw://7c787b1d900ab0442f89503a50aba744b7403bb4609c161fae8c9c11a142d6d3",
        "dweb:/ipfs/QmafDG4KCRyetPzLXVjyz4NxUafFKJ8xwGUJEnu7Y3wz8V"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/pausable/PausableStorage.sol": {
      "keccak256": "0x998397ccc66cda4d76d219cf08bdd45eb26f583e0b484670f43d3b59ed64c19f",
      "urls": [
        "bzz-raw://a153e74c68fc0e2d7aa422d3b169b712a242bbf92da316732c4efd52e31781fd",
        "dweb:/ipfs/QmVtPuvumAG5qRHinmdQn7wkEK3J4HK9gBB5LBDWbeTRNj"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/ERC5643Base.sol": {
      "keccak256": "0x21d3c281732e54c93520a4f2cc72cc5af38c517f2a150ee67aa84704a3d78627",
      "urls": [
        "bzz-raw://52ce7c061da0142a4d775bb85896410d363d4a28c0275d3171a70872344fc9a4",
        "dweb:/ipfs/Qmdwgs3TaC4b83JVn6RG5pJJdCrxb74ZMRqZbYSe5DuqZf"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/ERC5643Storage.sol": {
      "keccak256": "0x68cbff071e6a6a6b91b675af567616799435676fbbbebf4f9226e1226d6128b2",
      "urls": [
        "bzz-raw://2e2c7aee6ef32477733a50ba667cc510c8c165b9a9e146609b1f800acd0e4832",
        "dweb:/ipfs/QmcWAz74x3AR6kpzWdyPWw3iLQ1yHBT3ZVoK6jT7T3LwXq"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC5643/IERC5643.sol": {
      "keccak256": "0x82dfa9b4063600f22326a66626284bc1d2dfad2efd89e5057c820d182298f224",
      "urls": [
        "bzz-raw://7ab9fc298c8239a7469c1a55d052eb904620e31e5183904b5928cb48f27f1615",
        "dweb:/ipfs/QmUn3WWo3s6xDYQosaAURbartVnWAbfUffLjNWR5jrbLjU"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
      "keccak256": "0x27b65225578e0cd90b90ab4ce91c4dfe621b43a58df227d3fdb0494c8f317d62",
      "urls": [
        "bzz-raw://70db26d8735dd6b7e7a847712603f793728521ebd05ad8640d6068b395dce3ba",
        "dweb:/ipfs/QmYeC1EM3XQWgHjQKpT41TksDFcCzr4Sz8JPRdagFms7mE"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
      "keccak256": "0x1f85619c07524883b96fd2f3ca92ea3e2343466c0832cc03f6eb1cbb828896f4",
      "urls": [
        "bzz-raw://06adf57b874d40a123eb3e7bf89cd7f49d29a93c142b26336263529ccd692e04",
        "dweb:/ipfs/QmQAhsfGRBPuBcSE1mqocTvutK9c4NfJPsbN4XQXtbsLey"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
      "keccak256": "0xb57dee608d37c98c32ac38fa3c84e77f5962cf39a0697815ad209edf55593782",
      "urls": [
        "bzz-raw://092750f101ae80c5bace9fd53ae87547a0aac6109cd58290609acd2ef489ce9d",
        "dweb:/ipfs/QmREM18vUEQmcmnTSyR4XxHB9Ykqomc9RuCFZcWNiovgbz"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/wallet-link/IWalletLink.sol": {
      "keccak256": "0xd5990654ce80ba51a4d30d170720113a7bd4a92ed6fc48f4698c8d15a5ea1eab",
      "urls": [
        "bzz-raw://0381e604f23647408ec878b6ef611028cb596950b1bda84b5737bace1d94fd20",
        "dweb:/ipfs/QmcVvLxnUk2bS3ULrQthy8ZxdHM5KEmeEQf6NiS5dPL5VW"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/IEntitlement.sol": {
      "keccak256": "0x81712a4b9127000ba341966d99395917dcb4b1305eadeddd1e1ad4e562587fdd",
      "urls": [
        "bzz-raw://df0fcc9d7ed7489786684f5fa8375b277146969021f96f6a9feb81cb39176eca",
        "dweb:/ipfs/QmbxXXeXe6AzXUL8cSoABMx2E2QbRAK2uJXd8TRnDuKSJ8"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/Entitled.sol": {
      "keccak256": "0x90204085688bf4dd1e1b6ca30684ee37db79210070c405406898c8a77d50bfce",
      "urls": [
        "bzz-raw://b9b194cc9977b03fbccc81529147a0fce7857893c8146927570c1ee5a28aa900",
        "dweb:/ipfs/QmZMvPPj5ZPYaRQaSraBkv3PSMeUZ4wN1tQ9EVvwW6SL4r"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/BanningBase.sol": {
      "keccak256": "0x38c44494221f96568f3efb540a8a6c7af141de95f25caf26df6e8a8333f31249",
      "urls": [
        "bzz-raw://cf1f509347cab5090655ff8272443d18f9716fea5ef27cd86269ccbd2570aa7e",
        "dweb:/ipfs/QmbF8StzLRGnVvVXWYBowvdULoPPqQkU5hZR548cnRzuVs"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/BanningStorage.sol": {
      "keccak256": "0xcfbf5c113056e569abf23158853ff4877744b22a4bf2bf49a282d04dab23ab17",
      "urls": [
        "bzz-raw://4f825e97ca65c9cd3bd5885d2fa8b8e5f8f0dcbe227dec064abbbab645685fbe",
        "dweb:/ipfs/QmXAMntxrjzeNUKh9WcyHvzDmnV89vrJ9PkKRceqxJSxZp"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/banning/IBanning.sol": {
      "keccak256": "0x350ec182a95a86a41335979cd7212132858c5cfcd366602b2f6cd0ec0694b63e",
      "urls": [
        "bzz-raw://ecb4ad0c5a1086c38448b3e279733f33edc0cc39648368e5cb43dfff139ff7e8",
        "dweb:/ipfs/QmWYfYE8Haqk9kBRxmLijfQSfqbfxf7LB3wQ24d3pG5PE3"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/delegation/WalletLinkProxyBase.sol": {
      "keccak256": "0xffef403556b46744bd1833e5df57b02eb79e010841b16610e1740bc0dac929b2",
      "urls": [
        "bzz-raw://1afa30929e8c6b0c69528d328774c98789825a8de53e5945a1e95092bee2ad08",
        "dweb:/ipfs/QmTbCqLJTBHgcMuFwWSTbrgR7uaASJqwqYuku4YkGzTWW1"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/delegation/WalletLinkProxyStorage.sol": {
      "keccak256": "0x9667e475b9ad9f1130583840c9b0594a7512f7edd33163b926b3db21f70d9909",
      "urls": [
        "bzz-raw://d6271ce56258b1e9150378872d250cfaeb4501b5d0288e8f19f02096114c687f",
        "dweb:/ipfs/QmXSBA2CpLL9BdvZb994JYStgB9fJfsHwgcke6gsD3zybW"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManager.sol": {
      "keccak256": "0x4163f353ac5ee7b67d8bacc796413bbdc1cc75e8d1842283ba4b1bc7f53fad65",
      "urls": [
        "bzz-raw://46d4a94f88a1ad6db9c7c66964a6ef96bee560c583a1cb5344b000ffb6b2045c",
        "dweb:/ipfs/QmaMEP7RrWAzsZsEow4U3iSF5vPPt9MLNViXPpigQLvSzZ"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManagerBase.sol": {
      "keccak256": "0xa6d1da36ed7a9ee87aa95111607fe41484759cc7f94bb1ee3186efae5538a9ea",
      "urls": [
        "bzz-raw://6f444867de14ecc208834036f7755fe2d415c2877b1eba526796dc4c3fb47b6f",
        "dweb:/ipfs/QmaXXW2yUEzNKaiXf3uZJHwn2vCHGmcPbCRXwGvoQWgFYP"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManagerService.sol": {
      "keccak256": "0x1c52a860e8d0c9d025cdd0e6490aa68e82f0e12450966ed182825299f10dbc54",
      "urls": [
        "bzz-raw://e82770448781ca94e9f4bf02ac981f6bebc55b2553de7bb8f977bc7335b26d11",
        "dweb:/ipfs/QmSP1gnWqnWEJwf9eFYptd2v6M8kuTa7JzNKtG6DzkzoK6"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/EntitlementsManagerStorage.sol": {
      "keccak256": "0x688692231af49bcca80f7da97be12d448b0c20a4338d259d5f654b95c5b046ca",
      "urls": [
        "bzz-raw://be9964e110363bf68fb4bbb8ff230fecf8c26e695077910ba07163db57030a8e",
        "dweb:/ipfs/QmNS3eUqCQU7H48LtW6hrB9xPGy9DrKCqh7JKWsAtje5dK"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/entitlements/IEntitlementsManager.sol": {
      "keccak256": "0x3be8ab93ad7f1417c0b0f6aa3f74dca36034464085d40fd2e94f3b31ff5be03d",
      "urls": [
        "bzz-raw://4e97436fca686896a1ffc56dd64f58997775bef504e0568c62ba4d103a99939c",
        "dweb:/ipfs/QmWn5wvuuEFDhnqXJcJVb69ndDmhUMXWdUGYKR2VBfLsEw"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/MembershipStorage.sol": {
      "keccak256": "0xe9085b2b8ec900936853d0f8d7204f11eb5db3aba8c9c72799da62817afed8c0",
      "urls": [
        "bzz-raw://3fec75bce4b207c375b54dacc0296dc11991f7cc89da0e81e13457ae2120146a",
        "dweb:/ipfs/QmXzZdw5FnTZqpskq3yLguKTRmhLRBVueMVfH6RY4HuSsa"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
      "urls": [
        "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
        "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
      "urls": [
        "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
        "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
      "urls": [
        "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
        "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}