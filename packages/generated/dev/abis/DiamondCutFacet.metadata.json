{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "AddressEmptyCode"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionAlreadyExists"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionDoesNotExist"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionFromSameFacetAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_ImmutableFacet"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidContract"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacet"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutAction"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutLength"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          },
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetRemoval"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetSelectors"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidSelector"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "FailedCall"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "type": "error",
        "name": "Initializable_AlreadyInitialized"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_NotInInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [
          {
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ],
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "init",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DiamondCut",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__DiamondCut_init"
      },
      {
        "inputs": [
          {
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ]
          },
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          },
          {
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "diamondCut"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "params": {
            "facetCuts": "Facet addresses and function selectors.",
            "init": "Address of contract or facet to execute initPayload.",
            "initPayload": "A function call, including function selector and arguments. Executed with delegatecall on init address."
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "diamondCut((address,uint8,bytes4[])[],address,bytes)": {
          "notice": "Add/replace/remove any number of functions and optionally execute a function with delegatecall"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/=node_modules/@prb/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "node_modules/@river-build/diamond/src/facets/cut/DiamondCutFacet.sol": "DiamondCutFacet"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
      "urls": [
        "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
        "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
      "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
      "urls": [
        "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
        "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
      "urls": [
        "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
        "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
      "urls": [
        "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
        "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/IDiamond.sol": {
      "keccak256": "0x5b6b56e700325f3d34da6d449ef097e3669bf1da4418ed098aa5474b08dab43a",
      "urls": [
        "bzz-raw://be7a6bd1d29b939713b4402c4f04b074df6594d998b80e33e5fe00f34731f3e8",
        "dweb:/ipfs/QmS5TGVe4eBTZmzcYQZ8S6kESLgdZcguqb1RUkomLDFycQ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/Facet.sol": {
      "keccak256": "0xca7529809751c8c40aebd904b776f9ff28074b5a8a2df99f5bd1b588cb4b297c",
      "urls": [
        "bzz-raw://74bf56c81fcb3064f372bf9fb5ae895fd976d1cf8fd535c4f03397bdfabeb25e",
        "dweb:/ipfs/QmRmNLBWakunagRHRLXsEZAq6b2CyWM4voFrEjQn2tRGYY"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/cut/DiamondCutBase.sol": {
      "keccak256": "0x2ab3fff62a5fca6e012b0f14a382808fe9668a18cd1b47acc3c9aedaba127957",
      "urls": [
        "bzz-raw://b271d00a14d43afcdcfc57caf4e97b0ff2eb97b10d6bccfa374e86fbf70b4348",
        "dweb:/ipfs/QmYg33aHTgACZ7Pvebvb2Dgo3QZv4w42vbGQ34YmJh7urU"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/cut/DiamondCutFacet.sol": {
      "keccak256": "0x88cb110521a263efc7c8e7bdd34534686e9d0761892672d1b99a3c91ecde8967",
      "urls": [
        "bzz-raw://eb862e0bcf0c42162cce67af32b1e56093acde091199b847a9baf6b389006257",
        "dweb:/ipfs/QmbYo1vra5HQXAkJu4bf4VxBZVn565BnDirqc5tyEZC4md"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/cut/DiamondCutStorage.sol": {
      "keccak256": "0xf3d1e8b2cc8b17afca792cd7c2d917a59ecaf83b2073da57d1168d5b47776ed9",
      "urls": [
        "bzz-raw://81b82022fe7fe5339d6450a92de4b8d55ea91547fad6d687287f51ff9aeb39f7",
        "dweb:/ipfs/QmdiZ5EN7qFd2RZNjxZK5Kdpt2YfxS6LD51BB93FT6yW5V"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/cut/IDiamondCut.sol": {
      "keccak256": "0x62e9eb0e7d9cd70f3d462f5034cc43865bd30e867f1a604ed2f33b05dd0e5a19",
      "urls": [
        "bzz-raw://a257f614ba3cefa45cac65657a49a898ef0024ca182d4854a0a8764625b82d1c",
        "dweb:/ipfs/QmVw4N5QHYV8125FDgmD3pyksGVgC53H7M5CGTf9CrzLQZ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IIntrospectionBase.sol": {
      "keccak256": "0x51e706ab1184a3a5b353b87cfee07d471b9a5ef93897022bbcd1085b39a0c762",
      "urls": [
        "bzz-raw://3df386912c5cc759faee161b7825b2014040d04bf06528e74f4d759f06f2eb19",
        "dweb:/ipfs/QmP5AnGGNY4gsV1ABJ3WaueAsAwJVQ229ZfGjGxW8rSbEL"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x35f27aa0a4b64673a2648110422f31de0c5a71c68df562eccb9c4f2a27ee6647",
      "urls": [
        "bzz-raw://2eb1f2ff2e2d7222bf8fe2cf7558a2e47925e3d4557208362b1f50e63cb43006",
        "dweb:/ipfs/QmNcJZSAEPreUy66tt5brPrauVnUb4tqvcxej5Uc4SZZWz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/IERC173.sol": {
      "keccak256": "0x187fcc652a498aa18be665689a8496daad50511e6d7d926be0a210469325cdd8",
      "urls": [
        "bzz-raw://00c489916ad6e3ef2bfeb1d5f0230022cf776caab4b1372f0bf79b839810f1a2",
        "dweb:/ipfs/QmV2h8sDoHeyZKvbKeJBk6WaS5F87QaDMCq3iEymsbrmVh"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}