{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "BalanceQueryForZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ECDSAInvalidSignature"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "length",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureLength"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureS"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Guardian_AlreadyDisabled"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Guardian_AlreadyEnabled"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Guardian_Enabled"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "type": "error",
        "name": "Initializable_AlreadyInitialized"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_NotInInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "currentNonce",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "InvalidAccountNonce"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintERC2309QuantityExceedsLimit"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintZeroQuantity"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnerQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnershipNotInitializedForExtraData"
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "bits",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "SafeCastOverflowedUintDowncast"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__DefaultUriNotSet"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__OnlyFactoryAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__OnlySpaceOwnerAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__SpaceNotFound"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferFromIncorrectOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToNonERC721ReceiverImplementer"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "URIQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Validator__InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Validator__InvalidStringLength"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "expiry",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "VotesExpiredSignature"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "approved",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ApprovalForAll",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fromTokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "toTokenId",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ConsecutiveTransfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "fromDelegate",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "toDelegate",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "DelegateChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "previousVotes",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newVotes",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DelegateVotesChanged",
        "anonymous": false
      },
      {
        "inputs": [],
        "type": "event",
        "name": "EIP712DomainChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "cooldown",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "GuardianDefaultCooldownUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "enabled",
            "type": "bool",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "cooldown",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "GuardianUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_tokenId",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "MetadataUpdate",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "uri",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SpaceOwner__SetDefaultUri",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "factory",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SpaceOwner__SetFactory",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "SpaceOwner__UpdateSpace",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "CLOCK_MODE",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "result",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol_",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__ERC721A_init"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "version",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__SpaceOwner_init"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "approve"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "clock",
        "outputs": [
          {
            "internalType": "uint48",
            "name": "",
            "type": "uint48"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "delegate"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expiry",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "delegateBySig"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "delegates",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "eip712Domain",
        "outputs": [
          {
            "internalType": "bytes1",
            "name": "fields",
            "type": "bytes1"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "version",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "chainId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "verifyingContract",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "salt",
            "type": "bytes32"
          },
          {
            "internalType": "uint256[]",
            "name": "extensions",
            "type": "uint256[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getDefaultUri",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getFactory",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "timepoint",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getPastTotalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "timepoint",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getPastVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getSpaceByTokenId",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getSpaceInfo",
        "outputs": [
          {
            "internalType": "struct ISpaceOwnerBase.Space",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "uri",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "createdAt",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "shortDescription",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "longDescription",
                "type": "string"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "uri",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "shortDescription",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "longDescription",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "mintSpace",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "nextTokenId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "nonces",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setApprovalForAll"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "uri",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setDefaultUri"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "factory",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFactory"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "transferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "uri",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "shortDescription",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "longDescription",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateSpaceInfo"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "CLOCK_MODE()": {
          "details": "Description of the clock"
        },
        "approve(address,uint256)": {
          "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
        },
        "balanceOf(address)": {
          "details": "Returns the number of tokens in `owner`'s account."
        },
        "clock()": {
          "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
        },
        "delegate(address)": {
          "details": "Delegates votes from the sender to `delegatee`."
        },
        "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
          "details": "Delegates votes from signer to `delegatee`."
        },
        "delegates(address)": {
          "details": "Returns the delegate that `account` has chosen."
        },
        "eip712Domain()": {
          "details": "See {EIP-5267}. _Available since v4.9._"
        },
        "getApproved(uint256)": {
          "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
        },
        "getPastTotalSupply(uint256)": {
          "details": "Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote."
        },
        "getPastVotes(address,uint256)": {
          "details": "Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block."
        },
        "getSpaceByTokenId(uint256)": {
          "params": {
            "tokenId": "The token id of the space"
          },
          "returns": {
            "_0": "space The address of the space"
          }
        },
        "getSpaceInfo(address)": {
          "params": {
            "space": "The address of the space"
          },
          "returns": {
            "_0": "space The space info"
          }
        },
        "getVotes(address)": {
          "details": "Returns the current amount of votes that `account` has."
        },
        "isApprovedForAll(address,address)": {
          "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
        },
        "mintSpace(string,string,address,string,string)": {
          "details": "Only the factory is allowed to mint spaces",
          "params": {
            "longDescription": "The long description of the space",
            "name": "The name of the space",
            "shortDescription": "The short description of the space",
            "space": "The address of the space",
            "uri": "The URI of the space"
          },
          "returns": {
            "tokenId": "The token id of the minted space"
          }
        },
        "name()": {
          "details": "Returns the token collection name."
        },
        "ownerOf(uint256)": {
          "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
        },
        "safeTransferFrom(address,address,uint256,bytes)": {
          "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
        },
        "setApprovalForAll(address,bool)": {
          "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
        },
        "symbol()": {
          "details": "Returns the token collection symbol."
        },
        "tokenURI(uint256)": {
          "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
        },
        "totalSupply()": {
          "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
        },
        "updateSpaceInfo(address,string,string,string,string)": {
          "details": "Only the space owner is allowed to update the space info",
          "params": {
            "longDescription": "The long description of the space",
            "name": "The name of the space",
            "shortDescription": "The short description of the space",
            "space": "The address of the space",
            "uri": "The URI of the space"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getDefaultUri()": {
          "notice": "Get the default URI"
        },
        "getFactory()": {
          "notice": "Get the factory address"
        },
        "getSpaceByTokenId(uint256)": {
          "notice": "Get the space address by token id"
        },
        "getSpaceInfo(address)": {
          "notice": "Get the space info"
        },
        "mintSpace(string,string,address,string,string)": {
          "notice": "Mint a space"
        },
        "nextTokenId()": {
          "notice": "Get the next token id that will be used to mint a space"
        },
        "setDefaultUri(string)": {
          "notice": "Set the default URI"
        },
        "setFactory(address)": {
          "notice": "Set the factory address that is allowed to mint spaces"
        },
        "updateSpaceInfo(address,string,string,string,string)": {
          "notice": "Update the space info"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/spaces/facets/owner/SpaceOwner.sol": "SpaceOwner"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/diamond/facets/governance/votes/Checkpoints.sol": {
      "keccak256": "0x4b98db2e67e47ec59caa78fade51e9ec6fa33ee2592e46fed09d9167ebe76c8a",
      "urls": [
        "bzz-raw://72ec6949ee33fb9c137bba362b94af699762fadd66334128d1dd0dbcd4301bc6",
        "dweb:/ipfs/QmQybe6k5K3gss4zzCPqoba6ZBZE5p8KJRoQ2RzkE91JRV"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/Votes.sol": {
      "keccak256": "0x9df4a59415c2a2d260248b6f17b5afebd359c1fc3fa3d30de28c96295a128cb0",
      "urls": [
        "bzz-raw://7bac8e7e2ba6f34aaf7eef070d727f1fb1f05dc0a06acfd84e9ac32e3bc32501",
        "dweb:/ipfs/QmeRpJPPyJzdag6FSyyPYjABFz57XhCQfDKFS72tYMJ69Q"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/VotesBase.sol": {
      "keccak256": "0xe81e2262d09986bb570783b1ede2db66ad63ec80832dd6ae7b95cfad85646ad9",
      "urls": [
        "bzz-raw://9a9cd57237f494ffe148d39bcf869a12701adbec89b5645e8fc006e52cdceefe",
        "dweb:/ipfs/QmYboWzFp5FTpv3eqEndo6GyDWtzWKoQPV8eQt4TKPcEA5"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/VotesStorage.sol": {
      "keccak256": "0x87a2f9c85f63fcfa8ce2dc14d5a9a6118b33fd7000fb988b300519dec9b89629",
      "urls": [
        "bzz-raw://daef1e04a36eb664ec08d4627a2038f3decbeac93b13a2c651b52681ef6f5f5e",
        "dweb:/ipfs/QmbV5SXhZnUW52HLEbhNhKeRXDCyPR6zAJRa98Vh3m9ptF"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol": {
      "keccak256": "0x661d83db028bcc05f041e1bc576e9e6a31d61ca1b2cadf6682c1774a2989d1ef",
      "urls": [
        "bzz-raw://e624fc220c7060456c473e821bd55d7b9e2338081c74e59d9bc7f0f6a0043465",
        "dweb:/ipfs/QmXosKFhm5facMAzgn265aRnkmWL2wwY79WKy6qohuDH2T"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
      "keccak256": "0x27b65225578e0cd90b90ab4ce91c4dfe621b43a58df227d3fdb0494c8f317d62",
      "urls": [
        "bzz-raw://70db26d8735dd6b7e7a847712603f793728521ebd05ad8640d6068b395dce3ba",
        "dweb:/ipfs/QmYeC1EM3XQWgHjQKpT41TksDFcCzr4Sz8JPRdagFms7mE"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
      "keccak256": "0x1f85619c07524883b96fd2f3ca92ea3e2343466c0832cc03f6eb1cbb828896f4",
      "urls": [
        "bzz-raw://06adf57b874d40a123eb3e7bf89cd7f49d29a93c142b26336263529ccd692e04",
        "dweb:/ipfs/QmQAhsfGRBPuBcSE1mqocTvutK9c4NfJPsbN4XQXtbsLey"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
      "keccak256": "0xb57dee608d37c98c32ac38fa3c84e77f5962cf39a0697815ad209edf55593782",
      "urls": [
        "bzz-raw://092750f101ae80c5bace9fd53ae87547a0aac6109cd58290609acd2ef489ce9d",
        "dweb:/ipfs/QmREM18vUEQmcmnTSyR4XxHB9Ykqomc9RuCFZcWNiovgbz"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/utils/Context.sol": {
      "keccak256": "0x4566c941f553d989324d4308c037fe0669062c746d6e5108ce533fcc8ffbcaac",
      "urls": [
        "bzz-raw://87908ef7e56c826210414cb25a50a3073188e96e6ac2afc2b56d0bba6abb48a7",
        "dweb:/ipfs/QmT41NMs4REQxxeuR48JUcB39UTgcaKdUvizc2XawUF5aq"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/GuardianBase.sol": {
      "keccak256": "0xa407bb80710960a4faf7cda09ef05d779887d4227c1823dc92f0910d1508039f",
      "urls": [
        "bzz-raw://075ccda5d24f69c2ad13eec21e37cb1cd3eac7faef2108179fe6a23005729957",
        "dweb:/ipfs/QmX1Q58kQtwWmwox2oA1nHJ7aoYr9cBVVzi7xdoJBfycmQ"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/GuardianStorage.sol": {
      "keccak256": "0xb6d7ae2fe80c40120223e660bf5888612f8e93c0e7dc70d6d2532d3e366f0674",
      "urls": [
        "bzz-raw://ff77c0e4ad11ae6967a46d67c38422e06e45eb4e06aa7d99d611b8e4672aae5f",
        "dweb:/ipfs/QmfZui9wfZimGa4Q93zudgdit6ZUSgTET2WCKYWB7QkpVD"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/IGuardian.sol": {
      "keccak256": "0x5688fd791b42e359f37edd7b40576e5326b360f5e922ba091eb4bd2fe6234478",
      "urls": [
        "bzz-raw://93bc1fca6f842a91ae26ac7e19b1f73515c320469b35938c5ab57414b009d206",
        "dweb:/ipfs/QmZ47oFNcHWzP3TQtRzesSz66gJZmhAndHt139nkbeoUTr"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/metadata/IMembershipMetadata.sol": {
      "keccak256": "0x880c5cb358b4a471d273ae582bb0068f679ca0adfd75cf36f21107aced4ecfcb",
      "urls": [
        "bzz-raw://6c8f64c60534a1bbf0242d1a4ee69a8b164b78dd62ea1681bf60a801d6db6c80",
        "dweb:/ipfs/QmYYaFyqzZBb6KnJ2BVft418C5m7viZAPLpxHitP8kbJZb"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/ISpaceOwner.sol": {
      "keccak256": "0xb911df0bd675db51765e301c652efde6863e7f9b56734c26229fc97d578ac5ef",
      "urls": [
        "bzz-raw://5fcbd59464b2aca01f810e14ec533101d8ea33825fbe9e242771c894883304ff",
        "dweb:/ipfs/QmfARNFQtn3upbwj5GMGBZGkktLRYQmbg2DrVHUM4hqwtn"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwner.sol": {
      "keccak256": "0x5c12a90a8968ead0ec8ef171dbe9c0c428cf55015030c2138e8ae9a3c5f1d8c5",
      "urls": [
        "bzz-raw://5d7d492d5ea7b72a492f3e28c6e2f47f82697fd663e05b0f4797a56eed8b253a",
        "dweb:/ipfs/QmRx1GAEZui8LPPSpn5rNg3SZ3Qh1v5D3P6n2DZQTiNP9v"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerBase.sol": {
      "keccak256": "0xda2b6fd176951edf729020cdb7c77131422b879262608c56ad0449b6e42747bc",
      "urls": [
        "bzz-raw://a6fec6a0163a23b97e5e11692545d1532d76b5c5c6869a38773441a8207b5a8a",
        "dweb:/ipfs/QmaSPaCfivchWPawU1FP92KojXFZQBmiDMmUNiD3yu1Dac"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerStorage.sol": {
      "keccak256": "0x150e03077204bb3bc21aae37b86f1b0513c55d07ab21cc22885f1376a1411317",
      "urls": [
        "bzz-raw://12c4b4d27e0a93ea2a85646a754ffe5b6c02029efeadceafa0bf7a745e08dd1e",
        "dweb:/ipfs/QmWHR5yFEEaPo9SdtRWj13KeJS5uSRhjYdtZRKHx6CQqaN"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerUriBase.sol": {
      "keccak256": "0xbc0f6bc661567cdc37620e295a3619aa5787a60fe6330fa6e2044314ab46fe49",
      "urls": [
        "bzz-raw://6eae9fe0a43035a47e600d7a476f314c0a9aebaa59754e851751a18b1736751f",
        "dweb:/ipfs/QmfN95VxwSkkvemoJ3w8gtzYjnehb1aocuu8zVLk6KPCBv"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/Validator.sol": {
      "keccak256": "0x902f8ae6b6ec4703e6a72e40411ddaf062b73eb2890cab3c893ac3828367c61f",
      "urls": [
        "bzz-raw://39e68f53191121d78a6adc94587e085fb2845206cc8f5c58bf7f4532126e6bb3",
        "dweb:/ipfs/QmPLJ9UXfvhJEPhyKpQyz2WM7oNtGgJtbFpXfM8hmZDWRG"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/governance/utils/IVotes.sol": {
      "keccak256": "0x5e2b397ae88fd5c68e4f6762eb9f65f65c36702eb57796495f471d024ce70947",
      "urls": [
        "bzz-raw://348fc8e291d54314bb22437b532f443d5dbfb80c8cc9591567c1af6554ccf856",
        "dweb:/ipfs/QmP8ZTyitZinxcpwAHeYHhwj7u21zPpKXSiww38V74sXC2"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC165.sol": {
      "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
      "urls": [
        "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
        "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC4906.sol": {
      "keccak256": "0x1b8691e244f6e11d987459993671db0af33e6a29f7805eac6a9925cc6b601957",
      "urls": [
        "bzz-raw://a9e2a5efc2e14e98f5fe91bbab769199b4987a40dd3b96075b04957fda2ae80f",
        "dweb:/ipfs/QmbAjrSSVBiJ6MbgF7Jkr53m674iGMZ6haWbbRrWDZJraK"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC5267.sol": {
      "keccak256": "0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92",
      "urls": [
        "bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a",
        "dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC5805.sol": {
      "keccak256": "0x4b9b89f91adbb7d3574f85394754cfb08c5b4eafca8a7061e2094a019ab8f818",
      "urls": [
        "bzz-raw://7373d5dbb8eb2381aa0883a456fac89283fcaf52f42fa805d4188f270716742a",
        "dweb:/ipfs/QmVnZDmT4ABvNhRJMaQnbCzsCA8HpyHPVaxi4fCi92LFv2"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC6372.sol": {
      "keccak256": "0xeb2857b7dafb7e0d8526dbfe794e6c047df2851c9e6ee91dc4a55f3c34af5d33",
      "urls": [
        "bzz-raw://49bf13f6c2a38a9bcc7b852d4e2b9cebb4068b832642cce61069cdb5f06bb2fb",
        "dweb:/ipfs/QmdKAJVE7rR2kENCZnEM1yKswrGii7WuE9gZpsQvnXJhwn"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/interfaces/IERC721.sol": {
      "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
      "urls": [
        "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
        "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261",
      "urls": [
        "bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11",
        "dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5",
      "urls": [
        "bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23",
        "dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
      "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
      "urls": [
        "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
        "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Panic.sol": {
      "keccak256": "0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a",
      "urls": [
        "bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a",
        "dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed",
      "urls": [
        "bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0",
        "dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84",
      "urls": [
        "bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9",
        "dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
      "keccak256": "0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575",
      "urls": [
        "bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e",
        "dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
      "urls": [
        "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
        "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea",
      "urls": [
        "bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d",
        "dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54",
      "urls": [
        "bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8",
        "dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3",
      "urls": [
        "bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03",
        "dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/Facet.sol": {
      "keccak256": "0xca7529809751c8c40aebd904b776f9ff28074b5a8a2df99f5bd1b588cb4b297c",
      "urls": [
        "bzz-raw://74bf56c81fcb3064f372bf9fb5ae895fd976d1cf8fd535c4f03397bdfabeb25e",
        "dweb:/ipfs/QmRmNLBWakunagRHRLXsEZAq6b2CyWM4voFrEjQn2tRGYY"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IIntrospectionBase.sol": {
      "keccak256": "0x51e706ab1184a3a5b353b87cfee07d471b9a5ef93897022bbcd1085b39a0c762",
      "urls": [
        "bzz-raw://3df386912c5cc759faee161b7825b2014040d04bf06528e74f4d759f06f2eb19",
        "dweb:/ipfs/QmP5AnGGNY4gsV1ABJ3WaueAsAwJVQ229ZfGjGxW8rSbEL"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x35f27aa0a4b64673a2648110422f31de0c5a71c68df562eccb9c4f2a27ee6647",
      "urls": [
        "bzz-raw://2eb1f2ff2e2d7222bf8fe2cf7558a2e47925e3d4557208362b1f50e63cb43006",
        "dweb:/ipfs/QmNcJZSAEPreUy66tt5brPrauVnUb4tqvcxej5Uc4SZZWz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/IERC173.sol": {
      "keccak256": "0x187fcc652a498aa18be665689a8496daad50511e6d7d926be0a210469325cdd8",
      "urls": [
        "bzz-raw://00c489916ad6e3ef2bfeb1d5f0230022cf776caab4b1372f0bf79b839810f1a2",
        "dweb:/ipfs/QmV2h8sDoHeyZKvbKeJBk6WaS5F87QaDMCq3iEymsbrmVh"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/utils/Nonces.sol": {
      "keccak256": "0x9217eb7e1a632747cb0b01e6a43f968e61107161b774c47e3c23ec7b2d4f73ba",
      "urls": [
        "bzz-raw://f53415ba8c68ea88c9b14c5265ea1412b8ec30162f121ca10b5ad63226662747",
        "dweb:/ipfs/QmcJ1Moezv2R3RHAsprYWbJe6Pd9754RnEZPvUkiKLN4Eu"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/utils/cryptography/EIP712.sol": {
      "keccak256": "0x70463eaed8e7b80bd62948d0f1993c181290d618b21c173f3d25857a41f78d0b",
      "urls": [
        "bzz-raw://9feb0babd6ecc782337d5b13c9e03733b7f099d4b62df28586c0340f47449d09",
        "dweb:/ipfs/QmRDSLeTC4R5mNgzeRsJmpv6ascU52vgmfRx4u3gkatfiJ"
      ],
      "license": "MIT"
    },
    "node_modules/solady/src/utils/LibBytes.sol": {
      "keccak256": "0x0ce2f2607e6408787d6f66d73f1b6d5726a96403f66e5c4edfc6d8451f96537c",
      "urls": [
        "bzz-raw://e40e21b56aca96c72bd257f3bed95a41a0450de054eae1565f3079bbd913a8b5",
        "dweb:/ipfs/QmcsCzJZn8zciFTxozK2aKjRT8egyD5fG71MBSXQVWbZ17"
      ],
      "license": "MIT"
    },
    "node_modules/solady/src/utils/LibString.sol": {
      "keccak256": "0x6c922f48e2ecc1c8fd6581b3a1c16d24ca0f30e816e9a73d4e6a194b4df03e48",
      "urls": [
        "bzz-raw://e4e942ce2188a529e84b454ee78a657de9465dc8244da081dc706d01b30e4dae",
        "dweb:/ipfs/QmX6WPTUZwNkUNKyUmJUW1jjf8Eh51Y2i1BdWyD8S16Mty"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}