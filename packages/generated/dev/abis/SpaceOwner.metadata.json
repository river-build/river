{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "AlreadyDisabled"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "AlreadyEnabled"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ApprovalQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "BalanceQueryForZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ECDSAInvalidSignature"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "length",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureLength"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "type": "error",
        "name": "ECDSAInvalidSignatureS"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "GuardianEnabled"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "type": "error",
        "name": "Initializable_AlreadyInitialized"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_NotInInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "currentNonce",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "InvalidAccountNonce"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintERC2309QuantityExceedsLimit"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "MintZeroQuantity"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "NotExternalAccount"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnerQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "OwnershipNotInitializedForExtraData"
      },
      {
        "inputs": [
          {
            "internalType": "uint8",
            "name": "bits",
            "type": "uint8"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "type": "error",
        "name": "SafeCastOverflowedUintDowncast"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__OnlyFactoryAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "SpaceOwner__OnlySpaceOwnerAllowed"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferCallerNotOwnerNorApproved"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferFromIncorrectOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToNonERC721ReceiverImplementer"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TransferToZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "URIQueryForNonexistentToken"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Validator__InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Validator__InvalidStringLength"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "approved",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Approval",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "ApprovalForAll",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fromTokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "toTokenId",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "ConsecutiveTransfer",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegator",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "fromDelegate",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "toDelegate",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "DelegateChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegate",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "previousBalance",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "newBalance",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DelegateVotesChanged",
        "anonymous": false
      },
      {
        "inputs": [],
        "type": "event",
        "name": "EIP712DomainChanged",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "bool",
            "name": "enabled",
            "type": "bool",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "cooldown",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "GuardianUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "factory",
            "type": "address",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "SpaceOwner__SetFactory",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "SpaceOwner__UpdateSpace",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Transfer",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "CLOCK_MODE",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "DOMAIN_SEPARATOR",
        "outputs": [
          {
            "internalType": "bytes32",
            "name": "result",
            "type": "bytes32"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name_",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol_",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__ERC721A_init"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "symbol",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "version",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__SpaceOwner_init"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "approve"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "clock",
        "outputs": [
          {
            "internalType": "uint48",
            "name": "",
            "type": "uint48"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "delegate"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "delegatee",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "nonce",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "expiry",
            "type": "uint256"
          },
          {
            "internalType": "uint8",
            "name": "v",
            "type": "uint8"
          },
          {
            "internalType": "bytes32",
            "name": "r",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "s",
            "type": "bytes32"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "delegateBySig"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "delegates",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "eip712Domain",
        "outputs": [
          {
            "internalType": "bytes1",
            "name": "fields",
            "type": "bytes1"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "version",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "chainId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "verifyingContract",
            "type": "address"
          },
          {
            "internalType": "bytes32",
            "name": "salt",
            "type": "bytes32"
          },
          {
            "internalType": "uint256[]",
            "name": "extensions",
            "type": "uint256[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getFactory",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "timepoint",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getPastTotalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "timepoint",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getPastVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getSpaceInfo",
        "outputs": [
          {
            "internalType": "struct ISpaceOwnerBase.Space",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "uri",
                "type": "string"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "createdAt",
                "type": "uint256"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getVotes",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "uri",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "mintSpace",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "nextTokenId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "nonces",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "result",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "_data",
            "type": "bytes"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "safeTransferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setApprovalForAll"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "factory",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFactory"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "transferFrom"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "space",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "name",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "uri",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "updateSpaceInfo"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "CLOCK_MODE()": {
          "details": "Description of the clock"
        },
        "approve(address,uint256)": {
          "details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
        },
        "balanceOf(address)": {
          "details": "Returns the number of tokens in `owner`'s account."
        },
        "clock()": {
          "details": "Clock used for flagging checkpoints. Can be overridden to implement timestamp based checkpoints (and voting)."
        },
        "delegate(address)": {
          "details": "Delegates votes from the sender to `delegatee`."
        },
        "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)": {
          "details": "Delegates votes from signer to `delegatee`."
        },
        "delegates(address)": {
          "details": "Returns the delegate that `account` has chosen."
        },
        "eip712Domain()": {
          "details": "See {EIP-5267}. _Available since v4.9._"
        },
        "getApproved(uint256)": {
          "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
        },
        "getPastTotalSupply(uint256)": {
          "details": "Returns the total supply of votes available at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block. NOTE: This value is the sum of all available votes, which is not necessarily the sum of all delegated votes. Votes that have not been delegated are still part of total supply, even though they would not participate in a vote."
        },
        "getPastVotes(address,uint256)": {
          "details": "Returns the amount of votes that `account` had at a specific moment in the past. If the `clock()` is configured to use block numbers, this will return the value at the end of the corresponding block."
        },
        "getSpaceInfo(address)": {
          "params": {
            "space": "The address of the space"
          },
          "returns": {
            "_0": "space The space info"
          }
        },
        "getVotes(address)": {
          "details": "Returns the current amount of votes that `account` has."
        },
        "isApprovedForAll(address,address)": {
          "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
        },
        "mintSpace(string,string,address)": {
          "details": "Only the factory is allowed to mint spaces",
          "params": {
            "name": "The name of the space",
            "space": "The address of the space",
            "uri": "The URI of the space"
          },
          "returns": {
            "tokenId": "The token id of the minted space"
          }
        },
        "name()": {
          "details": "Returns the token collection name."
        },
        "ownerOf(uint256)": {
          "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
        },
        "safeTransferFrom(address,address,uint256,bytes)": {
          "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
        },
        "setApprovalForAll(address,bool)": {
          "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
        },
        "symbol()": {
          "details": "Returns the token collection symbol."
        },
        "tokenURI(uint256)": {
          "details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
        },
        "totalSupply()": {
          "details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
        },
        "transferFrom(address,address,uint256)": {
          "details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
        },
        "updateSpaceInfo(address,string,string)": {
          "details": "Only the space owner is allowed to update the space info",
          "params": {
            "name": "The name of the space",
            "space": "The address of the space",
            "uri": "The URI of the space"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getFactory()": {
          "notice": "Get the factory address"
        },
        "getSpaceInfo(address)": {
          "notice": "Get the space info"
        },
        "mintSpace(string,string,address)": {
          "notice": "Mint a space"
        },
        "nextTokenId()": {
          "notice": "Get the next token id that will be used to mint a space"
        },
        "setFactory(address)": {
          "notice": "Set the factory address that is allowed to mint spaces"
        },
        "updateSpaceInfo(address,string,string)": {
          "notice": "Update the space info"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=lib/@openzeppelin/",
      "@prb/math/=lib/@prb/math/src/",
      "@prb/test/=lib/@prb/test/src/",
      "account-abstraction/=lib/account-abstraction/contracts/",
      "base64/=lib/base64/",
      "ds-test/=lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "hardhat-deploy/=lib/hardhat-deploy/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/spaces/facets/owner/SpaceOwner.sol": "SpaceOwner"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/diamond/facets/Facet.sol": {
      "keccak256": "0x931702541a5e4a2756665e53baf1b04aa0418d5a9c635e519058905e21ae0c57",
      "urls": [
        "bzz-raw://b785043acac69be2d2545bc4492b2c08b6e931a53737f8508baf3f98c8743863",
        "dweb:/ipfs/QmeLzqURWDmXHJftmMXRsywdJw96CNDB9DQmgTpG1woYvc"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/Checkpoints.sol": {
      "keccak256": "0x4b98db2e67e47ec59caa78fade51e9ec6fa33ee2592e46fed09d9167ebe76c8a",
      "urls": [
        "bzz-raw://72ec6949ee33fb9c137bba362b94af699762fadd66334128d1dd0dbcd4301bc6",
        "dweb:/ipfs/QmQybe6k5K3gss4zzCPqoba6ZBZE5p8KJRoQ2RzkE91JRV"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/IERC5805.sol": {
      "keccak256": "0x8b3b84026610f99bcac6139359305a46c537edf377e44771b904c2bd35719ee3",
      "urls": [
        "bzz-raw://49a8e7af9b47b6bbd794ccb50380b8f9e9b84561d62bcbf16843dde55bab86e6",
        "dweb:/ipfs/QmdBdYxvhwCwtqW9DfPa6Bw5PrYdzhuKQyJv4vcLsttqrV"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/IERC6372.sol": {
      "keccak256": "0xc3fa5c25bdd3db6126e04897496889e68a65749b050ae8fede0ff80e322aca86",
      "urls": [
        "bzz-raw://bcf56ae1474c9a3032f8b15b1bbbeeb50ac21c574047f846673d4aca9bf82db4",
        "dweb:/ipfs/Qmcce1zD6TBWiMLXMDsFF6bUrwtVtharjwvAbtkMmoYRgd"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/IVotes.sol": {
      "keccak256": "0xef9a51a12d9c5a331de719be078e39858739a3d5043ebc20814d1331d8a7d8c3",
      "urls": [
        "bzz-raw://8a077058f77857cd2668fc97943dd64fdfd2463b8a0e163ef9973da8bb1f593a",
        "dweb:/ipfs/QmXZavPSRakx4GHD9gDpDBWQDt1SL2hYvbARA62zVeUq2w"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/Votes.sol": {
      "keccak256": "0x583ee53b96d9ead23925281c765624a48e7a385942247c4da1ecc1052193ed67",
      "urls": [
        "bzz-raw://c5c8cc50c062867c32ad9e3d0b4ad847f22576809d9f704aa8ee72b7ab617462",
        "dweb:/ipfs/QmSayHRuL6dwMfYNBNe29Sp63oeNDoemZttLWCv1urWCZc"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/VotesBase.sol": {
      "keccak256": "0x41049b5967fcceaf40dab9bb2863a701ba5aa68fa219321773028498c61e6add",
      "urls": [
        "bzz-raw://e63ecb4168e2b2f4819e606bf2b66195b48e42bd5d22a3def701dac016160112",
        "dweb:/ipfs/QmVJxvxjkTE9cH44DRXCwGntEyPRgsVDBiw2AiCT1KNDBC"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/governance/votes/VotesStorage.sol": {
      "keccak256": "0x87a2f9c85f63fcfa8ce2dc14d5a9a6118b33fd7000fb988b300519dec9b89629",
      "urls": [
        "bzz-raw://daef1e04a36eb664ec08d4627a2038f3decbeac93b13a2c651b52681ef6f5f5e",
        "dweb:/ipfs/QmbV5SXhZnUW52HLEbhNhKeRXDCyPR6zAJRa98Vh3m9ptF"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IERC165.sol": {
      "keccak256": "0x486758ee326820b0dd468c6a7a90fda8d67d48d3114792c587cee0e8417b366b",
      "urls": [
        "bzz-raw://b695090abcec8c2d487d73961265030fa4f64ecd84f6d80b85c6c7d4d9142ea0",
        "dweb:/ipfs/QmQTKuV2WEoy6vTCRxL39zEqubLUf9NhoC2BGB19CiYqRq"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x93ac0d2f738615e69dbcfd5fa6ac5840ec48329ac92094605638bcf2abd6708f",
      "urls": [
        "bzz-raw://fbcb2cd0e47b6ef39bec6cbdeedf6e292e8849d4e25f4bb6c72ee574446b02f1",
        "dweb:/ipfs/QmcDwxFALaQBLbsGsjdttkQkE48PdKWq43XY7f34MxqZSw"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/IERC173.sol": {
      "keccak256": "0x677cebaa56ee33950d04ba5baef02188da026beb7cf669bdf580410cb1f1c303",
      "urls": [
        "bzz-raw://d5be56219a4ab8d9709db7ffb74c73ee1be268b8f77308ef7a72d8f2820fb30b",
        "dweb:/ipfs/QmeTuAZMwRf3uRHMtHEd7M7LvGyRAEmoCikF4Pb6dCAKXd"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721A.sol": {
      "keccak256": "0x831bb3c33d216c2469726e2665840bcd780bdea916e33ac53ff334b2a60e58d7",
      "urls": [
        "bzz-raw://b2ca636e3c22830ca38ce5eaa3d9945dcb80b7acab637085038cdb39236401cb",
        "dweb:/ipfs/QmeXEtdSitN9z4LNxQd1TZQJtYvNHqKfJa6VuiCyQtxgtP"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721ABase.sol": {
      "keccak256": "0x27b65225578e0cd90b90ab4ce91c4dfe621b43a58df227d3fdb0494c8f317d62",
      "urls": [
        "bzz-raw://70db26d8735dd6b7e7a847712603f793728521ebd05ad8640d6068b395dce3ba",
        "dweb:/ipfs/QmYeC1EM3XQWgHjQKpT41TksDFcCzr4Sz8JPRdagFms7mE"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/ERC721AStorage.sol": {
      "keccak256": "0x1f85619c07524883b96fd2f3ca92ea3e2343466c0832cc03f6eb1cbb828896f4",
      "urls": [
        "bzz-raw://06adf57b874d40a123eb3e7bf89cd7f49d29a93c142b26336263529ccd692e04",
        "dweb:/ipfs/QmQAhsfGRBPuBcSE1mqocTvutK9c4NfJPsbN4XQXtbsLey"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/token/ERC721A/IERC721A.sol": {
      "keccak256": "0xb57dee608d37c98c32ac38fa3c84e77f5962cf39a0697815ad209edf55593782",
      "urls": [
        "bzz-raw://092750f101ae80c5bace9fd53ae87547a0aac6109cd58290609acd2ef489ce9d",
        "dweb:/ipfs/QmREM18vUEQmcmnTSyR4XxHB9Ykqomc9RuCFZcWNiovgbz"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/utils/Context.sol": {
      "keccak256": "0x4566c941f553d989324d4308c037fe0669062c746d6e5108ce533fcc8ffbcaac",
      "urls": [
        "bzz-raw://87908ef7e56c826210414cb25a50a3073188e96e6ac2afc2b56d0bba6abb48a7",
        "dweb:/ipfs/QmT41NMs4REQxxeuR48JUcB39UTgcaKdUvizc2XawUF5aq"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/utils/Nonces.sol": {
      "keccak256": "0xba683e7b1dc9bc812c0c33ce7efb8e7505a881ee475b8ef2230af11377418732",
      "urls": [
        "bzz-raw://69408950cf9d4fb74bbf79e475d338363ca4f7a492de5827b3f93a02da443732",
        "dweb:/ipfs/QmT6nt6Dpp2stTjCDEzepf6unVE7bcetXdshPnwmJFfXaf"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/utils/cryptography/EIP712.sol": {
      "keccak256": "0xa4854e007ca8e80368e578576d65d47cb4022a7c031bc7abb4d94df5498935eb",
      "urls": [
        "bzz-raw://ed66cebd356963dd8bc33459fea266da15cb87bd4f586399dba84b525e0fcd6a",
        "dweb:/ipfs/QmXqgEnTnEusLhXXuycj73PZK1pRrw6ES4BQvEKfvKa2FR"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/utils/cryptography/IERC5267.sol": {
      "keccak256": "0x29135f4d4e9e50c65240a1837a077ba44470aadd8c9bad0f5bb1cb32d50018e7",
      "urls": [
        "bzz-raw://91eb5c894de0b09144d3b1c689f72fb26d638eb2eaa3217396ed86d41610214f",
        "dweb:/ipfs/Qmexr1dtSeFD8sbrbk3U8pp1WUL5Caq3VoeeHy6bwmxMbD"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/GuardianBase.sol": {
      "keccak256": "0xe76248dbf516fb6a32934062fac4f2b3e19f83ba1a4df04d55b55c15be0265d0",
      "urls": [
        "bzz-raw://a2059a7b6b82f2de1654ff8bca374e32fa000e613ffb706197edd09565cb7a70",
        "dweb:/ipfs/QmUFTcFy64pFTwEwtGFrkoL84eZi7zVjAp46k1sWpAfUn5"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/GuardianStorage.sol": {
      "keccak256": "0xb6d7ae2fe80c40120223e660bf5888612f8e93c0e7dc70d6d2532d3e366f0674",
      "urls": [
        "bzz-raw://ff77c0e4ad11ae6967a46d67c38422e06e45eb4e06aa7d99d611b8e4672aae5f",
        "dweb:/ipfs/QmfZui9wfZimGa4Q93zudgdit6ZUSgTET2WCKYWB7QkpVD"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/guardian/IGuardian.sol": {
      "keccak256": "0x7490883034a06f610a169e87f2bd15f5c904c87ea1eda80da63d17045b77b5bd",
      "urls": [
        "bzz-raw://44ea9689c8d31f5c31ebb470ac85f2d6be30d7698dbe4730454e19c5f72898f7",
        "dweb:/ipfs/QmUsWEQ4qFif8GghZGT8b7K52WrTbSgfjZPpPGxFzhz2kr"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/ISpaceOwner.sol": {
      "keccak256": "0xff6ef530de3398b53d22b11fa207dc10646bc8c3823b0f472903d09f2a3fff09",
      "urls": [
        "bzz-raw://36991d594ca8452a27647a48c15ab24aab39d33322d3bc0d726a8a7b33fd5ab2",
        "dweb:/ipfs/QmVSBbXi5sxPW5Skoph6qjKfzGCnCpExYBb38S4HqvhtzQ"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwner.sol": {
      "keccak256": "0xd4ae1573c079a664691dcf26c8dc9a40ea2d1ef939698b0d048c5d3e66004a7d",
      "urls": [
        "bzz-raw://29883563ce4582f629ac71050544f04ab3ff8dfa0d33ca85045c45f588b87bf3",
        "dweb:/ipfs/Qmdz5UeU5EF76bKD4L7AQMjnCqyLQarDSo814Gt6XT6pea"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerBase.sol": {
      "keccak256": "0xd0ecb2821b80216dc333473ab0144f8d551ee7c226a5994f05d95b8b98a3df64",
      "urls": [
        "bzz-raw://26493620d6dd7f1c410f0aa2193358eb9efe6e02baabaffa1341d6b9b4b60473",
        "dweb:/ipfs/Qmc32ouEvEK8mQVLqGx7m95HR2tXab5LWmJkBWyGj62rLZ"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerStorage.sol": {
      "keccak256": "0x3c840cdb978b3d927b3744284a5aaccf17fed77fa8fbe508f996defd4e96e036",
      "urls": [
        "bzz-raw://a8a1e53140a066f867b237e3c8bdd47048e54ad2ae8bcc81dc87e8a6b9615aa5",
        "dweb:/ipfs/QmVzoTNDFkNuKxU2Vx7YPxdRUjN8rG2WqVzqBwf484owa3"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/SpaceOwnerUriBase.sol": {
      "keccak256": "0xb610b4b21b8fe1624a87ce276a4257724ce22ad730aa13e4d7e73e88a95928a6",
      "urls": [
        "bzz-raw://e3c81b24d5efc63410633c807441e3b906eb7db27e769e8cc1e71fea539ed004",
        "dweb:/ipfs/QmZZ1rGuRu8v1yky2J3gHDFdgRKbYZ4oW4u8nYaSyLm7hD"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/Validator.sol": {
      "keccak256": "0x4f469950ab5fb75049aec2b55f9f78ade4bbc3a35e072acaadb2fbe9eab6fb5f",
      "urls": [
        "bzz-raw://5689fa29f227bdedd2f085799b197a3c807e08a6520b7bcc953bd4f0c286c306",
        "dweb:/ipfs/QmeVULCHP8i43FGhkMs6Y8zxJDiN59f3Pw3bRPc3QdcLCt"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
      "urls": [
        "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
        "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
      "urls": [
        "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
        "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
      "keccak256": "0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf",
      "urls": [
        "bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c",
        "dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol": {
      "keccak256": "0xba333517a3add42cd35fe877656fc3dfcc9de53baa4f3aabbd6d12a92e4ea435",
      "urls": [
        "bzz-raw://2ceacff44c0fdc81e48e0e0b1db87a2076d3c1fb497341de077bf1da9f6b406c",
        "dweb:/ipfs/QmRUo1muMRAewxrKQ7TkXUtknyRoR57AyEkoPpiuZQ8FzX"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
      "urls": [
        "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
        "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/math/Math.sol": {
      "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
      "urls": [
        "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
        "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/math/SafeCast.sol": {
      "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
      "urls": [
        "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
        "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/math/SignedMath.sol": {
      "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
      "urls": [
        "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
        "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
      ],
      "license": "MIT"
    },
    "lib/base64/base64.sol": {
      "keccak256": "0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf",
      "urls": [
        "bzz-raw://17c12e16d8d66f3af15d8787920bd41ca6c1e7517a212a6b9cebd4b6d38f36fe",
        "dweb:/ipfs/QmcXMnZUXEz6LRKsm3CSvqdPboAzmezavi8bTg2dRxM2yE"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}