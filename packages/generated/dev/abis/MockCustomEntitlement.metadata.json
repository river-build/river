{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "users",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "isEntitled",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "users",
            "type": "address[]"
          },
          {
            "internalType": "bool",
            "name": "userIsEntitled",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setEntitled"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "supportsInterface(bytes4)": {
          "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/test/mocks/MockCustomEntitlement.sol": "MockCustomEntitlement"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/spaces/entitlements/ICustomEntitlement.sol": {
      "keccak256": "0x898618a1c86c7e561c79d39e82a0d1fb9823525ac95d3efb08af779b6f6cbd5c",
      "urls": [
        "bzz-raw://f56813e903bf9dc5cd19adde95722067c100d34978c21cc1f9d9921982e5cfd6",
        "dweb:/ipfs/QmVu6zNqfbnAUzF1AmenknzNHuMMPiB2agRLGUkGqXuE4a"
      ],
      "license": "MIT"
    },
    "contracts/test/mocks/MockCustomEntitlement.sol": {
      "keccak256": "0x4dd6c3ff7f64fa4ddf3da7ae761db83d55246db42560dc1c3b79737cdabf3565",
      "urls": [
        "bzz-raw://a619b4a850a39345d46a2e528ec7290d8f733f443f21f5ed20d416ef13c69792",
        "dweb:/ipfs/QmZmfvNRyaXJkiKN3dG7GoTUB3f2aRXnnWHgaUentNABQc"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
      "urls": [
        "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
        "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}