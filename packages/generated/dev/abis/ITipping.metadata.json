{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "AmountIsZero"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "CannotTipSelf"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "CurrencyIsZero"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "ReceiverIsNotMember"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "TokenDoesNotExist"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "currency",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "receiver",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "messageId",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "channelId",
            "type": "bytes32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Tip",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "struct ITippingBase.TipRequest",
            "name": "tipRequest",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "receiver",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "tokenId",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "currency",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "amount",
                "type": "uint256"
              },
              {
                "internalType": "bytes32",
                "name": "messageId",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "channelId",
                "type": "bytes32"
              }
            ]
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "tip"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "currency",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "tipAmountByCurrency",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "tippingCurrencies",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "",
            "type": "address[]"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "currency",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "tipsByCurrencyAndTokenId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "currency",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "totalTipsByCurrency",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "tip((address,uint256,address,uint256,bytes32,bytes32))": {
          "details": "Requires sender and receiver to be members of the spaceRequires amount > 0 and valid currency addressEmits Tip event",
          "params": {
            "tipRequest": "The tip request containing token ID, currency, amount, message ID and channel ID"
          }
        },
        "tipAmountByCurrency(address)": {
          "params": {
            "currency": "The currency address to get tips for"
          },
          "returns": {
            "_0": "The total amount of tips received in the specified currency"
          }
        },
        "tippingCurrencies()": {
          "returns": {
            "_0": "An array of currency addresses"
          }
        },
        "tipsByCurrencyAndTokenId(uint256,address)": {
          "params": {
            "currency": "The currency address to get tips in",
            "tokenId": "The token ID to get tips for"
          },
          "returns": {
            "_0": "The total amount of tips received in the specified currency"
          }
        },
        "totalTipsByCurrency(address)": {
          "params": {
            "currency": "The currency address to get tips for"
          },
          "returns": {
            "_0": "The total number of tips received in the specified currency"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "tip((address,uint256,address,uint256,bytes32,bytes32))": {
          "notice": "Sends a tip to a space member"
        },
        "tipAmountByCurrency(address)": {
          "notice": "Gets the total amount of tips received in a specific currency"
        },
        "tippingCurrencies()": {
          "notice": "Gets the list of currencies that have been tipped to the space"
        },
        "tipsByCurrencyAndTokenId(uint256,address)": {
          "notice": "Gets the total tips received for a token ID in a specific currency"
        },
        "totalTipsByCurrency(address)": {
          "notice": "Gets the total number of tips received in a specific currency"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/=node_modules/@prb/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/spaces/facets/tipping/ITipping.sol": "ITipping"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/spaces/facets/tipping/ITipping.sol": {
      "keccak256": "0xaeb9f0538f72b7f6e9a004ca44fcd2890294a2e9ae640794d7f77ebb74088563",
      "urls": [
        "bzz-raw://f8b42ef93b3bbe0ac237aaeef2e1fb624fb9d81aba75f91485a48ae484f3a8eb",
        "dweb:/ipfs/QmWhZH6zUE7Tf8R9xu8JxTeWxHyV9yBgNAJFx2DoHBGuYn"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}