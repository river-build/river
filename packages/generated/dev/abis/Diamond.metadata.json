{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "struct Diamond.InitParams",
            "name": "initDiamondCut",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IDiamond.FacetCut[]",
                "name": "baseFacets",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "address",
                    "name": "facetAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "enum IDiamond.FacetCutAction",
                    "name": "action",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes4[]",
                    "name": "functionSelectors",
                    "type": "bytes4[]"
                  }
                ]
              },
              {
                "internalType": "address",
                "name": "init",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "initData",
                "type": "bytes"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "AddressEmptyCode"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionAlreadyExists"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionDoesNotExist"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionFromSameFacetAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_ImmutableFacet"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidContract"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacet"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutAction"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutLength"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          },
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetRemoval"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetSelectors"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidSelector"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Diamond_UnsupportedFunction"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "FailedInnerCall"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "type": "error",
        "name": "Initializable_AlreadyInitialized"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Proxy__ImplementationIsNotContract"
      },
      {
        "inputs": [
          {
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ],
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "init",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DiamondCut",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=lib/@openzeppelin/",
      "@prb/math/=lib/@prb/math/src/",
      "@prb/test/=lib/@prb/test/src/",
      "account-abstraction/=lib/account-abstraction/contracts/",
      "base64/=lib/base64/",
      "ds-test/=lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "hardhat-deploy/=lib/hardhat-deploy/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/diamond/Diamond.sol": "Diamond"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/diamond/Diamond.sol": {
      "keccak256": "0x40803ed4e474c40102c7efb32ffe7749a7e595bec91304521c5bcd0aa0cf2e62",
      "urls": [
        "bzz-raw://922b67995021816c250553456181b471da0560c80ba9c24af0a62afcc14d60a0",
        "dweb:/ipfs/QmWpXhrUnrjkrdpXXmy7DHCuCWmpEW8eELW8C26Q8pW9Gj"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/IDiamond.sol": {
      "keccak256": "0x5b6b56e700325f3d34da6d449ef097e3669bf1da4418ed098aa5474b08dab43a",
      "urls": [
        "bzz-raw://be7a6bd1d29b939713b4402c4f04b074df6594d998b80e33e5fe00f34731f3e8",
        "dweb:/ipfs/QmS5TGVe4eBTZmzcYQZ8S6kESLgdZcguqb1RUkomLDFycQ"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
      "keccak256": "0xa4865d4dbb8920ad70bec0802ecc135f7344ca0ec7512a8d8fc1661990af2124",
      "urls": [
        "bzz-raw://5df0690df4f3a5b301e49261445e2a9aa108f08c9600a4b4bf23a86bed415365",
        "dweb:/ipfs/QmWCP8GjAPZEbyts9EZc8AHAHvCrL8JCtRAB2Za7xspekS"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
      "keccak256": "0xf3d1e8b2cc8b17afca792cd7c2d917a59ecaf83b2073da57d1168d5b47776ed9",
      "urls": [
        "bzz-raw://81b82022fe7fe5339d6450a92de4b8d55ea91547fad6d687287f51ff9aeb39f7",
        "dweb:/ipfs/QmdiZ5EN7qFd2RZNjxZK5Kdpt2YfxS6LD51BB93FT6yW5V"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/cut/IDiamondCut.sol": {
      "keccak256": "0x707e35d7b409d4568a6266c52b8d2c323c9429e4f86b2fe13ba1502f021f434e",
      "urls": [
        "bzz-raw://5efa78699b78c935af4d3f418d747b8057163e5c73d537a8f12f97b8417d7c88",
        "dweb:/ipfs/QmWRUZLiAJrsB6bZSbWNnn9yG1NYzHvBU7KrL2KnM5ePU6"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol": {
      "keccak256": "0x9081f0cabbf82dc05defdcfc28f7c71bbc55affa28e94f004e236aaacca0f452",
      "urls": [
        "bzz-raw://2703e87d53b3f43ec9c42ae506317ad550ee004b6e62f88fd55b560abbb4ba99",
        "dweb:/ipfs/QmbwS3swzqEKVYRG9A7jwYQzTf7D874bK4nbG5Z2XVuLV1"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/loupe/IDiamondLoupe.sol": {
      "keccak256": "0xe73772581fcbdc224268f9f4eb1b35d25fb5d165516aa489329d954d95e14ec4",
      "urls": [
        "bzz-raw://9a1d7979baf04d010bfacfc6d1e2f4408ccac8f52b332be62b904d395333857d",
        "dweb:/ipfs/QmQrzuJXzjB2Fz7WDCRAfS9bnvaPHsU4DXmGhwZn3ccmfB"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/proxy/IProxy.sol": {
      "keccak256": "0x94506109e5e47fafba65c94f2d74d0c7860e5911fe90fbe3b49817afda3b2145",
      "urls": [
        "bzz-raw://969f73c692e96091ef4565e5e7f9d4114ce6d51a619a75f9b1a0703f737e4ceb",
        "dweb:/ipfs/QmbohRzHyVrD36w3b7UdM1jqpPMViSx3DVCHWuXTLkG3bM"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/proxy/Proxy.sol": {
      "keccak256": "0x9e3a60886852d03e7a09bd0daac7f524d9aebf7d26a19e6bd726ecb84404f9cd",
      "urls": [
        "bzz-raw://e469174f1f9e9a5afa47fd7e8fc0c64065704b2397eb187037a3a508da6fa90d",
        "dweb:/ipfs/QmUQwmPLvo5yJ2aGz5JGGTL1AVUPbF1gK4nBBH6M49HBrD"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
      "urls": [
        "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
        "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
      "urls": [
        "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
        "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}