{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "struct Diamond.InitParams",
            "name": "initDiamondCut",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IDiamond.FacetCut[]",
                "name": "baseFacets",
                "type": "tuple[]",
                "components": [
                  {
                    "internalType": "address",
                    "name": "facetAddress",
                    "type": "address"
                  },
                  {
                    "internalType": "enum IDiamond.FacetCutAction",
                    "name": "action",
                    "type": "uint8"
                  },
                  {
                    "internalType": "bytes4[]",
                    "name": "functionSelectors",
                    "type": "bytes4[]"
                  }
                ]
              },
              {
                "internalType": "address",
                "name": "init",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "initData",
                "type": "bytes"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "target",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "AddressEmptyCode"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionAlreadyExists"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionDoesNotExist"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_FunctionFromSameFacetAlreadyExists"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_ImmutableFacet"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "init",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidContract"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacet"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutAction"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidFacetCutLength"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          },
          {
            "internalType": "bytes4",
            "name": "selector",
            "type": "bytes4"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetRemoval"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "facet",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "DiamondCut_InvalidFacetSelectors"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "DiamondCut_InvalidSelector"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Diamond_UnsupportedFunction"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "FailedInnerCall"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "type": "error",
        "name": "Initializable_AlreadyInitialized"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Proxy__ImplementationIsNotContract"
      },
      {
        "inputs": [
          {
            "internalType": "struct IDiamond.FacetCut[]",
            "name": "facetCuts",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "address",
                "name": "facetAddress",
                "type": "address"
              },
              {
                "internalType": "enum IDiamond.FacetCutAction",
                "name": "action",
                "type": "uint8"
              },
              {
                "internalType": "bytes4[]",
                "name": "functionSelectors",
                "type": "bytes4[]"
              }
            ],
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "init",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "bytes",
            "name": "initPayload",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "DiamondCut",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [],
        "stateMutability": "payable",
        "type": "fallback"
      },
      {
        "inputs": [],
        "stateMutability": "payable",
        "type": "receive"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=lib/@openzeppelin/",
      "@prb/math/=lib/@prb/math/src/",
      "@prb/test/=lib/@prb/test/src/",
      "account-abstraction/=lib/account-abstraction/contracts/",
      "base64/=lib/base64/",
      "ds-test/=lib/ds-test/src/",
      "forge-std/=lib/forge-std/src/",
      "hardhat-deploy/=lib/hardhat-deploy/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/diamond/Diamond.sol": "Diamond"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/diamond/Diamond.sol": {
      "keccak256": "0x9e4da6928d58a8f0f62062cd4070dbcebdb716539e7a9d5cdb24588f5e20b84b",
      "urls": [
        "bzz-raw://c1db36481f741516e8bf5b6ce4eccbc8f91b6a5ee4351cb629e5c5f9b04c19f2",
        "dweb:/ipfs/QmUVbZLWr9evtBpD3q9z9V1EJrchujUUxbS4SFKTEj5pU5"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/IDiamond.sol": {
      "keccak256": "0xd4907618ad3b9847c656008815820f23a89a587e408712b450cff075625e1553",
      "urls": [
        "bzz-raw://652645a543f65b0415327a8a88398fc7835b1d6ee01df8c898f9e43867d02714",
        "dweb:/ipfs/QmPXt4Kks2o5CJKbT8U1mCryQJP6EMzzP5kdcqUFvXX7y5"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/cut/DiamondCutBase.sol": {
      "keccak256": "0x45ed391ae6aa52996ce3fc3095b0d420457fa5f58a2c5a2f9939e2b55dc8e7a6",
      "urls": [
        "bzz-raw://f6a5e87525d3c98c10ceb838124d48fdf7e687ffddbdb1647b93dc5882d91339",
        "dweb:/ipfs/Qmf137S5255pVWXpfFnrU3fdE3G6Di2VuJQueBn8SC8cpd"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/cut/DiamondCutStorage.sol": {
      "keccak256": "0xf47d0ca88515dc8714c89931c5a91c402bac3fad08388d780a0873e962386071",
      "urls": [
        "bzz-raw://04d4023a5be5140892c547bb5df4eb5906120d1eca3bf29fc562da991639c894",
        "dweb:/ipfs/QmVf28LUpAVeCz5Aiewbjt7ZzM6bixZn166aS1PVJGzSSX"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/cut/IDiamondCut.sol": {
      "keccak256": "0xa5985f00fabb7f6e5925542c9d0c955d4e7ec4f9ffe59d0fa81d75bed7ecdd55",
      "urls": [
        "bzz-raw://2ebbb450aac3c12f690d7457d04d6fc53736b36cc60dcd757e11840335103688",
        "dweb:/ipfs/QmbcjTgejYrj3m2Lj9hHpCe2wt63fmLhhN6aY8XFoScitw"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0x5dbbdca0faf75680e1c0d425d92bdb5ce16951c0f8215a668c5144c0ffdb1b01",
      "urls": [
        "bzz-raw://05e5ba4fcd6e3e1e819e786fce3473d5ef69763b127fe162b2e0906d6a904d09",
        "dweb:/ipfs/QmYPN5xeMoMBVT2B2FwJrDpwocNNsCuVosgg7vdYrrWNep"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/loupe/DiamondLoupeBase.sol": {
      "keccak256": "0xad4a6b5803d9ba9cc7aba2d52a1f5129049f05102a202522550641877e348436",
      "urls": [
        "bzz-raw://1b2ea927748e41a3a6c5ac7cd255a64b8d0eaddec1153e2bfa81b80bbdcffb4e",
        "dweb:/ipfs/QmW4hBGMrER8DFGeC8M7nGyomcazy3k8rDTUDMcRaZEs7G"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/facets/loupe/IDiamondLoupe.sol": {
      "keccak256": "0xafbe8346e6043ac3f6977e9ca43603ca3bbbfc2c2962b47024cf9aa0dcb23f7f",
      "urls": [
        "bzz-raw://7b0fd31aeddde2f351471e0fd1f5a5da20570491d5604420b283a4749838514c",
        "dweb:/ipfs/QmbuKxmTX8HC9SHNUPsraBTc6NWECwsbgmXsrpXjPqkLLi"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/proxy/IProxy.sol": {
      "keccak256": "0xb3cc38cae21021aec88e128eaec4994e926e4961d166c7e6e3a40a41c69aa105",
      "urls": [
        "bzz-raw://6da721f34f1359068ebe71ce01472403940b4e8fe87c38ff5be2d77e673520e5",
        "dweb:/ipfs/QmfNgDv5eQsLzc9bKi1EGWdxDX84Vhr2SARa7zm4pcCdpy"
      ],
      "license": "Apache-2.0"
    },
    "contracts/src/diamond/proxy/Proxy.sol": {
      "keccak256": "0xae6d6933073274683d2684fc806cffbdc157d56b181d7ea0c962c3cd7746b78d",
      "urls": [
        "bzz-raw://43378c060da21e547d10282839ff3dc690615c8993949f6a072f9ed4693ba548",
        "dweb:/ipfs/QmaT7GdtDpNBRJPLRnGEoGmZJSFNPkqHUzPde5LSYXc1q1"
      ],
      "license": "Apache-2.0"
    },
    "lib/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
      "urls": [
        "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
        "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
      ],
      "license": "MIT"
    },
    "lib/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
      "urls": [
        "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
        "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}