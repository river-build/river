{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "address[]",
            "name": "nodes",
            "type": "address[]"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "genesisMiniblockHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes",
            "name": "genesisMiniblock",
            "type": "bytes"
          }
        ],
        "name": "StreamAllocated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64"
          },
          {
            "indexed": false,
            "internalType": "string",
            "name": "reason",
            "type": "string"
          }
        ],
        "name": "StreamLastMiniblockUpdateFailed",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "isSealed",
            "type": "bool"
          }
        ],
        "name": "StreamLastMiniblockUpdated",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "isAdded",
            "type": "bool"
          }
        ],
        "name": "StreamPlacementUpdated",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address[]",
            "name": "nodes",
            "type": "address[]"
          },
          {
            "internalType": "bytes32",
            "name": "genesisMiniblockHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "genesisMiniblock",
            "type": "bytes"
          }
        ],
        "name": "allocateStream",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getAllStreamIds",
        "outputs": [
          {
            "internalType": "bytes32[]",
            "name": "",
            "type": "bytes32[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getAllStreams",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple"
              }
            ],
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "start",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stop",
            "type": "uint256"
          }
        ],
        "name": "getPaginatedStreams",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple"
              }
            ],
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]"
          },
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          }
        ],
        "name": "getStream",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "reserved0",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "flags",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "nodes",
                "type": "address[]"
              }
            ],
            "internalType": "struct Stream",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "i",
            "type": "uint256"
          }
        ],
        "name": "getStreamByIndex",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple"
              }
            ],
            "internalType": "struct StreamWithId",
            "name": "",
            "type": "tuple"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getStreamCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          }
        ],
        "name": "getStreamWithGenesis",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "reserved0",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "flags",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "nodes",
                "type": "address[]"
              }
            ],
            "internalType": "struct Stream",
            "name": "",
            "type": "tuple"
          },
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "name": "getStreamsOnNode",
        "outputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ],
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple"
              }
            ],
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "name": "placeStreamOnNode",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "name": "removeStreamFromNode",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32"
          },
          {
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "isSealed",
            "type": "bool"
          }
        ],
        "name": "setStreamLastMiniblock",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "streamId",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "prevMiniBlockHash",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "bool",
                "name": "isSealed",
                "type": "bool"
              }
            ],
            "internalType": "struct SetMiniblock[]",
            "name": "miniblocks",
            "type": "tuple[]"
          }
        ],
        "name": "setStreamLastMiniblockBatch",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "getAllStreamIds()": {
          "details": "WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
        },
        "getAllStreams()": {
          "details": "WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
        },
        "getPaginatedStreams(uint256,uint256)": {
          "details": "Recommended range is 5000 streams, returns true if on the last page."
        },
        "getStreamWithGenesis(bytes32)": {
          "returns": {
            "_0": "stream, genesisMiniblockHash, genesisMiniblock"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getAllStreamIds()": {
          "notice": "Return array containing all stream ids"
        },
        "getAllStreams()": {
          "notice": "Return array containing all streams"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/river/registry/facets/stream/StreamRegistry.sol": "StreamRegistry"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/@openzeppelin/",
      ":@prb/math/=lib/@prb/math/src/",
      ":@prb/test/=lib/@prb/test/src/",
      ":account-abstraction/=lib/account-abstraction/contracts/",
      ":base64/=lib/base64/",
      ":ds-test/=lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":hardhat-deploy/=lib/hardhat-deploy/"
    ]
  },
  "sources": {
    "contracts/src/river/registry/facets/stream/IStreamRegistry.sol": {
      "keccak256": "0x6065b337e753c34ff06f91172aa92e473fe3e7a74bfea20e30eb79f349a338c5",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://db641411b66939873b494e5914cd06955b03bdc278d784675c4e4035027f32a4",
        "dweb:/ipfs/QmRkaPZSa1stxb9XKiD6WKwEZmcaqqYXi8DQzGaZiBtKhd"
      ]
    },
    "contracts/src/river/registry/facets/stream/StreamRegistry.sol": {
      "keccak256": "0xc54bdda2a2add8c10aa260a4921eb7c6e00bedea05370bb1b0b6794dff089d53",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://a04f114efbf72b82368386acefd175c426103a3fd4fc06b1098f8aad5b22346e",
        "dweb:/ipfs/QmT8z1QQjYmZjYSFoGAJAoCU7AvZuADDzYfEUBBFXXhydX"
      ]
    },
    "contracts/src/river/registry/libraries/RegistryErrors.sol": {
      "keccak256": "0x073c3ff0f1206824f3722e2ba22fd7174f9ded4a6111e48e0641e21ed90aabfc",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://62d60cd3958fdb3762972e41aefa899e6b6ac0dac7c94689025f6ba5dc241be3",
        "dweb:/ipfs/QmRRhiC1KXDh5aPPNBEgwbg8wZ9BKWYLJ7jGD9vFzm1kWy"
      ]
    },
    "contracts/src/river/registry/libraries/RegistryStorage.sol": {
      "keccak256": "0x63c17d46ed41fb58a08d84b2159db6ab7a19a4e1e1e636129b7cdd5f3d83c51c",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://7633256f01d2ffea41292d8f0b259d6f33a61ef362026d649a3e6955f53eec4c",
        "dweb:/ipfs/QmSYCB6CWCjQMqVeSG7yqy72tr7SkPSRkfzpz6FnK33XqZ"
      ]
    },
    "lib/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
      "license": "MIT",
      "urls": [
        "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
        "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
      ]
    }
  },
  "version": 1
}