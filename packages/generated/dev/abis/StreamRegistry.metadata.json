{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "address[]",
            "name": "nodes",
            "type": "address[]",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "genesisMiniblockHash",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "bytes",
            "name": "genesisMiniblock",
            "type": "bytes",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "StreamAllocated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64",
            "indexed": false
          },
          {
            "internalType": "string",
            "name": "reason",
            "type": "string",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "StreamLastMiniblockUpdateFailed",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64",
            "indexed": false
          },
          {
            "internalType": "bool",
            "name": "isSealed",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "StreamLastMiniblockUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32",
            "indexed": false
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address",
            "indexed": false
          },
          {
            "internalType": "bool",
            "name": "isAdded",
            "type": "bool",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "StreamPlacementUpdated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address[]",
            "name": "nodes",
            "type": "address[]"
          },
          {
            "internalType": "bytes32",
            "name": "genesisMiniblockHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "genesisMiniblock",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "allocateStream"
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getAllStreamIds",
        "outputs": [
          {
            "internalType": "bytes32[]",
            "name": "",
            "type": "bytes32[]"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getAllStreams",
        "outputs": [
          {
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "start",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "stop",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getPaginatedStreams",
        "outputs": [
          {
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ]
              }
            ]
          },
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStream",
        "outputs": [
          {
            "internalType": "struct Stream",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "reserved0",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "flags",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "nodes",
                "type": "address[]"
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "i",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreamByIndex",
        "outputs": [
          {
            "internalType": "struct StreamWithId",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreamCount",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreamCountOnNode",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreamWithGenesis",
        "outputs": [
          {
            "internalType": "struct Stream",
            "name": "",
            "type": "tuple",
            "components": [
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "reserved0",
                "type": "uint64"
              },
              {
                "internalType": "uint64",
                "name": "flags",
                "type": "uint64"
              },
              {
                "internalType": "address[]",
                "name": "nodes",
                "type": "address[]"
              }
            ]
          },
          {
            "internalType": "bytes32",
            "name": "",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "",
            "type": "bytes"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32[]",
            "name": "streamIds",
            "type": "bytes32[]"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "foundCount",
            "type": "uint256"
          },
          {
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function",
        "name": "getStreamsOnNode",
        "outputs": [
          {
            "internalType": "struct StreamWithId[]",
            "name": "",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "bytes32",
                "name": "id",
                "type": "bytes32"
              },
              {
                "internalType": "struct Stream",
                "name": "stream",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "lastMiniblockHash",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint64",
                    "name": "lastMiniblockNum",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "reserved0",
                    "type": "uint64"
                  },
                  {
                    "internalType": "uint64",
                    "name": "flags",
                    "type": "uint64"
                  },
                  {
                    "internalType": "address[]",
                    "name": "nodes",
                    "type": "address[]"
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "placeStreamOnNode"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "address",
            "name": "nodeAddress",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "removeStreamFromNode"
      },
      {
        "inputs": [
          {
            "internalType": "bytes32",
            "name": "streamId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "prevMiniBlockHash",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "lastMiniblockHash",
            "type": "bytes32"
          },
          {
            "internalType": "uint64",
            "name": "lastMiniblockNum",
            "type": "uint64"
          },
          {
            "internalType": "bool",
            "name": "isSealed",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setStreamLastMiniblock"
      },
      {
        "inputs": [
          {
            "internalType": "struct SetMiniblock[]",
            "name": "miniblocks",
            "type": "tuple[]",
            "components": [
              {
                "internalType": "bytes32",
                "name": "streamId",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "prevMiniBlockHash",
                "type": "bytes32"
              },
              {
                "internalType": "bytes32",
                "name": "lastMiniblockHash",
                "type": "bytes32"
              },
              {
                "internalType": "uint64",
                "name": "lastMiniblockNum",
                "type": "uint64"
              },
              {
                "internalType": "bool",
                "name": "isSealed",
                "type": "bool"
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setStreamLastMiniblockBatch"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "getAllStreamIds()": {
          "details": "WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
        },
        "getAllStreams()": {
          "details": "WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that this function has an unbounded cost, and using it as part of a state-changing function may render the function uncallable if the map grows to a point where copying to memory consumes too much gas to fit in a block."
        },
        "getPaginatedStreams(uint256,uint256)": {
          "details": "Recommended range is 5000 streams, returns true if on the last page."
        },
        "getStreamWithGenesis(bytes32)": {
          "returns": {
            "_0": "stream, genesisMiniblockHash, genesisMiniblock"
          }
        },
        "getStreams(bytes32[])": {
          "details": "Fetch a batch of streams. Returns how many were found, and the streams found. Results may be a subset of requested streams."
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getAllStreamIds()": {
          "notice": "Return array containing all stream ids"
        },
        "getAllStreams()": {
          "notice": "Return array containing all streams"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/=node_modules/@prb/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/river/registry/facets/stream/StreamRegistry.sol": "StreamRegistry"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/river/registry/facets/stream/IStreamRegistry.sol": {
      "keccak256": "0xbb74a25365c5060ccd8d6724fa31193d0f79c453467e0dacda06bc8f3b9222f8",
      "urls": [
        "bzz-raw://052308dc6478b1e0aa998e73ad558bad6dfec7f4e7e044953ac39a6742c18392",
        "dweb:/ipfs/QmchpnD1xpQk9aEetzUQchDRg8xEEiJ58W4TtQRvr9tZcr"
      ],
      "license": "MIT"
    },
    "contracts/src/river/registry/facets/stream/StreamRegistry.sol": {
      "keccak256": "0x8fee7af1ff8be12620707bd5d2f99b0a3fe71f35a84f9a58ad4fc9cb09e95510",
      "urls": [
        "bzz-raw://75dbd976251a59928fb42fae614c0ab62e279e718611340457df60a72e48f533",
        "dweb:/ipfs/QmYPEZg8V9QUgwQ9FScopwTyms5L4fcLsiwM7pPx1NZq5s"
      ],
      "license": "MIT"
    },
    "contracts/src/river/registry/libraries/RegistryErrors.sol": {
      "keccak256": "0x411bd2bca08451c59880f46aa3ce0ac6b20a1cfa8a8836e4ce035fad57bce497",
      "urls": [
        "bzz-raw://7d8b0fff68a90994db10dd30f26f4f399027295152060b65fadaab76768f6501",
        "dweb:/ipfs/QmdJsGe2utFn1ju8YKkZpshVGNgUbfkkZP77LprQ43BcPP"
      ],
      "license": "MIT"
    },
    "contracts/src/river/registry/libraries/RegistryStorage.sol": {
      "keccak256": "0xd45a126f3a7ce156824b019adf5c2832236421da770a02c38a1fa5e789411201",
      "urls": [
        "bzz-raw://6edc5efd37e99112a4f1ed8ca56d9f4034c36540bfbe3854b098b5b03cb5c9c4",
        "dweb:/ipfs/QmZKR5pkUVUzxizh6YdDFXenssUfKnJCD15RMgh1T74AcH"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x9b161e97b8967d4bc0c08d25741889a30692cdda4b71910bf1b0e315f1962212",
      "urls": [
        "bzz-raw://821500c39d095eaa25b06f46e65f1d0e97c4c96b39227f79077dee7d9e84051f",
        "dweb:/ipfs/QmSTeGorKzSWF6HAmxo32uCZiEuKNvreQdUiX1AaYtUMTz"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}