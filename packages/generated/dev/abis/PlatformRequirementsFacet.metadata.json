{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_InInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Initializable_NotInInitializingState"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_AlreadySupported"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Introspection_NotSupported"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "type": "error",
        "name": "Ownable__NotOwner"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Ownable__ZeroAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Platform__InvalidFeeRecipient"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Platform__InvalidMembershipBps"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Platform__InvalidMembershipDuration"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Platform__InvalidMembershipMinPrice"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Platform__InvalidMembershipMintLimit"
      },
      {
        "inputs": [
          {
            "internalType": "uint32",
            "name": "version",
            "type": "uint32",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "Initialized",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceAdded",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "InterfaceRemoved",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "previousOwner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "newOwner",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "OwnershipTransferred",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "PlatformFeeRecipientSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "bps",
            "type": "uint16",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PlatformMembershipBpsSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "duration",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PlatformMembershipDurationSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PlatformMembershipFeeSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "minPrice",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PlatformMembershipMinPriceSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "limit",
            "type": "uint256",
            "indexed": false
          }
        ],
        "type": "event",
        "name": "PlatformMembershipMintLimitSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "feeRecipient",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "membershipBps",
            "type": "uint16"
          },
          {
            "internalType": "uint256",
            "name": "membershipFee",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "membershipMintLimit",
            "type": "uint256"
          },
          {
            "internalType": "uint64",
            "name": "membershipDuration",
            "type": "uint64"
          },
          {
            "internalType": "uint256",
            "name": "membershipMinPrice",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "__PlatformRequirements_init"
      },
      {
        "inputs": [],
        "stateMutability": "pure",
        "type": "function",
        "name": "getDenominator",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getFeeRecipient",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipBps",
        "outputs": [
          {
            "internalType": "uint16",
            "name": "",
            "type": "uint16"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipDuration",
        "outputs": [
          {
            "internalType": "uint64",
            "name": "",
            "type": "uint64"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipMinPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [],
        "stateMutability": "view",
        "type": "function",
        "name": "getMembershipMintLimit",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setFeeRecipient"
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "bps",
            "type": "uint16"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipBps"
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "duration",
            "type": "uint64"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipDuration"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipFee"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "minPrice",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipMinPrice"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "limit",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "setMembershipMintLimit"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "getDenominator()": {
          "details": "This is the denominator used for calculating fees",
          "returns": {
            "_0": "The denominator"
          }
        },
        "getFeeRecipient()": {
          "returns": {
            "_0": "The address of the fee recipient"
          }
        },
        "getMembershipBps()": {
          "details": "This is the basis points that will be charged for a membership",
          "returns": {
            "_0": "The membership basis points"
          }
        },
        "getMembershipDuration()": {
          "details": "This is the duration of a membership in seconds",
          "returns": {
            "_0": "The membership duration"
          }
        },
        "getMembershipFee()": {
          "details": "This is the flat fee that will be charged for a membership",
          "returns": {
            "_0": "The membership fee"
          }
        },
        "getMembershipMinPrice()": {
          "details": "This is the minimum price that can be set for a membership",
          "returns": {
            "_0": "The minimum price for a membership"
          }
        },
        "getMembershipMintLimit()": {
          "details": "This is the maximum number of free memberships that can be minted per space",
          "returns": {
            "_0": "The membership mint limit"
          }
        },
        "setFeeRecipient(address)": {
          "details": "This is the address that will receive the platform fees",
          "params": {
            "recipient": "The address of the fee recipient"
          }
        },
        "setMembershipBps(uint16)": {
          "params": {
            "bps": "The membership basis points"
          }
        },
        "setMembershipDuration(uint64)": {
          "params": {
            "duration": "The membership duration"
          }
        },
        "setMembershipFee(uint256)": {
          "params": {
            "fee": "The membership fee"
          }
        },
        "setMembershipMinPrice(uint256)": {
          "params": {
            "minPrice": "The minimum price for a membership"
          }
        },
        "setMembershipMintLimit(uint256)": {
          "params": {
            "limit": "The membership mint limit"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "getDenominator()": {
          "notice": "Get the denominator"
        },
        "getFeeRecipient()": {
          "notice": "Get the fee recipient address"
        },
        "getMembershipBps()": {
          "notice": "Get the membership basis points"
        },
        "getMembershipDuration()": {
          "notice": "Get the membership duration"
        },
        "getMembershipFee()": {
          "notice": "Get the membership flat fee"
        },
        "getMembershipMinPrice()": {
          "notice": "Get the minimum price for a membership"
        },
        "getMembershipMintLimit()": {
          "notice": "Get the membership mint limit"
        },
        "setFeeRecipient(address)": {
          "notice": "Set the fee recipient address"
        },
        "setMembershipBps(uint16)": {
          "notice": "Set the membership basis points"
        },
        "setMembershipDuration(uint64)": {
          "notice": "Set the membership duration"
        },
        "setMembershipFee(uint256)": {
          "notice": "Set the membership flat fee"
        },
        "setMembershipMinPrice(uint256)": {
          "notice": "Set the minimum price for a membership"
        },
        "setMembershipMintLimit(uint256)": {
          "notice": "Set the membership mint limit"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/factory/facets/platform/requirements/PlatformRequirementsFacet.sol": "PlatformRequirementsFacet"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/factory/facets/platform/requirements/IPlatformRequirements.sol": {
      "keccak256": "0xd1c61d42973382822d0b8256b5d308ad693dfa59240864cce0bec1bd4208e4c6",
      "urls": [
        "bzz-raw://bff6d50557810f7aa9de451f6ac2b279fe5983eefc0b38ef8be7ebb2ffde0f86",
        "dweb:/ipfs/QmS6DXYXtPTfePgtrUxH1vmPycsVoumBQRJZugjGButowT"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsBase.sol": {
      "keccak256": "0xb256841987c7f77cadf430216a6b8bbff94d3d577d90def1a5d5253aa29a661b",
      "urls": [
        "bzz-raw://302e78d305305d70ba6036525664f2f7491ec16a0ccd5cdc132c999c7d214e73",
        "dweb:/ipfs/QmbE9LomwpRdQnNwdcsFTSz3bJMHWdTmca41wmEjVPAQxT"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsFacet.sol": {
      "keccak256": "0xd5a2b1a761041f291e2f8f5ae175c392c55661b78a15d4224db210f0574f1b28",
      "urls": [
        "bzz-raw://0e373640f4fe1af74f32c129a945216dc49cdecd7f93f6eccbfad05938a8292e",
        "dweb:/ipfs/QmeanDerbhquCTmCUbWZwMedoNxacgbsFKHTaRwt9ihuKX"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsStorage.sol": {
      "keccak256": "0xf3c5696434fa3666260b4b6f5dfdd386184f513cf59d7e7bc012d87cfe56c9d6",
      "urls": [
        "bzz-raw://c0197f583dfad8dbde7e98503ad9d0ae996398caf51d8fd5cdd40aaee71feba6",
        "dweb:/ipfs/QmPN6QXdLiAxms2krCrqv9JJrmdru2kAC2C2tQUTbBkvyM"
      ],
      "license": "MIT"
    },
    "contracts/src/utils/libraries/BasisPoints.sol": {
      "keccak256": "0xfaa5790726afc20e29f2a00e67693a59ae85a045beaa95f8f58bcbcef01ed87b",
      "urls": [
        "bzz-raw://a2da5e15739fc7093ea7b935c6542f7c01d9c33843a3d1a1d8895db404f8160e",
        "dweb:/ipfs/QmYVUkSh3QX7u9rnKfqLeb9Rh8tko5Q3Gpry6KnhTRF58L"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c",
      "urls": [
        "bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e",
        "dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/Errors.sol": {
      "keccak256": "0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123",
      "urls": [
        "bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf",
        "dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"
      ],
      "license": "MIT"
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8",
      "urls": [
        "bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621",
        "dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/Facet.sol": {
      "keccak256": "0xca7529809751c8c40aebd904b776f9ff28074b5a8a2df99f5bd1b588cb4b297c",
      "urls": [
        "bzz-raw://74bf56c81fcb3064f372bf9fb5ae895fd976d1cf8fd535c4f03397bdfabeb25e",
        "dweb:/ipfs/QmRmNLBWakunagRHRLXsEZAq6b2CyWM4voFrEjQn2tRGYY"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IIntrospectionBase.sol": {
      "keccak256": "0x51e706ab1184a3a5b353b87cfee07d471b9a5ef93897022bbcd1085b39a0c762",
      "urls": [
        "bzz-raw://3df386912c5cc759faee161b7825b2014040d04bf06528e74f4d759f06f2eb19",
        "dweb:/ipfs/QmP5AnGGNY4gsV1ABJ3WaueAsAwJVQ229ZfGjGxW8rSbEL"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x35f27aa0a4b64673a2648110422f31de0c5a71c68df562eccb9c4f2a27ee6647",
      "urls": [
        "bzz-raw://2eb1f2ff2e2d7222bf8fe2cf7558a2e47925e3d4557208362b1f50e63cb43006",
        "dweb:/ipfs/QmNcJZSAEPreUy66tt5brPrauVnUb4tqvcxej5Uc4SZZWz"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/IERC173.sol": {
      "keccak256": "0x187fcc652a498aa18be665689a8496daad50511e6d7d926be0a210469325cdd8",
      "urls": [
        "bzz-raw://00c489916ad6e3ef2bfeb1d5f0230022cf776caab4b1372f0bf79b839810f1a2",
        "dweb:/ipfs/QmV2h8sDoHeyZKvbKeJBk6WaS5F87QaDMCq3iEymsbrmVh"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}