{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "WalletLink__CannotLinkToRootWallet",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "WalletLink__CannotLinkToSelf",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "WalletLink__CannotRemoveRootWallet",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "WalletLink__InvalidAddress",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "WalletLink__InvalidSignature",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "WalletLink__LinkAlreadyExists",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "WalletLink__LinkedToAnotherRootKey",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "WalletLink__NotLinked",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "LinkWalletToRootKey",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "secondWallet",
            "type": "address"
          }
        ],
        "name": "RemoveLink",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          }
        ],
        "name": "checkIfLinked",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "name": "getLatestNonceForRootKey",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "wallet",
            "type": "address"
          }
        ],
        "name": "getRootKeyForWallet",
        "outputs": [
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "rootKey",
            "type": "address"
          }
        ],
        "name": "getWalletsByRootKey",
        "outputs": [
          {
            "internalType": "address[]",
            "name": "wallets",
            "type": "address[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              },
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "internalType": "struct IWalletLinkBase.LinkedWallet",
            "name": "rootWallet",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "linkCallerToRootKey",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              },
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "internalType": "struct IWalletLinkBase.LinkedWallet",
            "name": "wallet",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "addr",
                "type": "address"
              },
              {
                "internalType": "bytes",
                "name": "signature",
                "type": "bytes"
              },
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              }
            ],
            "internalType": "struct IWalletLinkBase.LinkedWallet",
            "name": "rootWallet",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "linkWalletToRootKey",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {},
      "version": 1
    },
    "userdoc": {
      "events": {
        "LinkWalletToRootKey(address,address)": {
          "notice": "Emitted when a user links their wallet to a rootKey"
        },
        "RemoveLink(address,address)": {
          "notice": "Emitted when two wallets are unlinked"
        }
      },
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/test/mocks/MockWalletLink.sol": "MockWalletLink"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/@openzeppelin/",
      ":@prb/math/=lib/@prb/math/src/",
      ":@prb/test/=lib/@prb/test/src/",
      ":account-abstraction/=lib/account-abstraction/contracts/",
      ":base64/=lib/base64/",
      ":ds-test/=lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":hardhat-deploy/=lib/hardhat-deploy/",
      ":solady/=lib/solady/src/"
    ]
  },
  "sources": {
    "contracts/src/factory/facets/wallet-link/IWalletLink.sol": {
      "keccak256": "0x1c9084570c24d5297c09ae2ced5a7cc74b0d4525d82c50ab4837073d371492ee",
      "license": "MIT",
      "urls": [
        "bzz-raw://c5a554705b2dd0483babbb512ac97bdfc24dfc9c0bc5ea80c6781c056fd03df0",
        "dweb:/ipfs/QmNdURhnWUeSs5294Puz2FZq2bRikgPgfi4oNppd6pJSH5"
      ]
    },
    "contracts/test/mocks/MockWalletLink.sol": {
      "keccak256": "0x6a1f6fedbee90c04a73f6243e359de6ecf4a9d1fd08fec5b87ca9392fa08499f",
      "license": "Apache-2.0",
      "urls": [
        "bzz-raw://548494ef1d1c936da5907a518bd959fac7bf3783e65fd586fe934e7bd38181cf",
        "dweb:/ipfs/QmaR4VJsZkPGisV4DYuZRutGXq4gmzgpuF7b8Wms226pCZ"
      ]
    },
    "lib/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
      "keccak256": "0x86c1470cbfd878491e5de030072b647352d36bd27122cffb928970b1945282aa",
      "license": "MIT",
      "urls": [
        "bzz-raw://ad85dd393ee0a1917c57046abc5155f51f77844b2c6a42c05c1b8dd26d6ff3c1",
        "dweb:/ipfs/QmNqYc8To2NdnpP6E1tGz7t6A7beuENde5yovwov5pW1fA"
      ]
    }
  },
  "version": 1
}