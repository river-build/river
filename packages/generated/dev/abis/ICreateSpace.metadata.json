{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "type": "error",
        "name": "Architect__InvalidAddress"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Architect__InvalidNetworkId"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Architect__InvalidPricingModule"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Architect__InvalidStringLength"
      },
      {
        "inputs": [],
        "type": "error",
        "name": "Architect__NotContract"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "proxyInitializer",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "Architect__ProxyInitializerSet",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address",
            "indexed": true
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256",
            "indexed": true
          },
          {
            "internalType": "address",
            "name": "space",
            "type": "address",
            "indexed": true
          }
        ],
        "type": "event",
        "name": "SpaceCreated",
        "anonymous": false
      },
      {
        "inputs": [
          {
            "internalType": "struct IArchitectBase.SpaceInfo",
            "name": "SpaceInfo",
            "type": "tuple",
            "components": [
              {
                "internalType": "string",
                "name": "name",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "uri",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "shortDescription",
                "type": "string"
              },
              {
                "internalType": "string",
                "name": "longDescription",
                "type": "string"
              },
              {
                "internalType": "struct IArchitectBase.Membership",
                "name": "membership",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "struct IMembershipBase.Membership",
                    "name": "settings",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "internalType": "string",
                        "name": "symbol",
                        "type": "string"
                      },
                      {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxSupply",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint64",
                        "name": "duration",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address",
                        "name": "currency",
                        "type": "address"
                      },
                      {
                        "internalType": "address",
                        "name": "feeRecipient",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "freeAllocation",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "pricingModule",
                        "type": "address"
                      }
                    ]
                  },
                  {
                    "internalType": "struct IArchitectBase.MembershipRequirements",
                    "name": "requirements",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "bool",
                        "name": "everyone",
                        "type": "bool"
                      },
                      {
                        "internalType": "address[]",
                        "name": "users",
                        "type": "address[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "ruleData",
                        "type": "bytes"
                      },
                      {
                        "internalType": "bool",
                        "name": "syncEntitlements",
                        "type": "bool"
                      }
                    ]
                  },
                  {
                    "internalType": "string[]",
                    "name": "permissions",
                    "type": "string[]"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.ChannelInfo",
                "name": "channel",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "metadata",
                    "type": "string"
                  }
                ]
              }
            ]
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function",
        "name": "createSpace",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct IArchitectBase.CreateSpace",
            "name": "createSpace",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IArchitectBase.Metadata",
                "name": "metadata",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "uri",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "shortDescription",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "longDescription",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.Membership",
                "name": "membership",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "struct IMembershipBase.Membership",
                    "name": "settings",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "internalType": "string",
                        "name": "symbol",
                        "type": "string"
                      },
                      {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxSupply",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint64",
                        "name": "duration",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address",
                        "name": "currency",
                        "type": "address"
                      },
                      {
                        "internalType": "address",
                        "name": "feeRecipient",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "freeAllocation",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "pricingModule",
                        "type": "address"
                      }
                    ]
                  },
                  {
                    "internalType": "struct IArchitectBase.MembershipRequirements",
                    "name": "requirements",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "bool",
                        "name": "everyone",
                        "type": "bool"
                      },
                      {
                        "internalType": "address[]",
                        "name": "users",
                        "type": "address[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "ruleData",
                        "type": "bytes"
                      },
                      {
                        "internalType": "bool",
                        "name": "syncEntitlements",
                        "type": "bool"
                      }
                    ]
                  },
                  {
                    "internalType": "string[]",
                    "name": "permissions",
                    "type": "string[]"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.ChannelInfo",
                "name": "channel",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "metadata",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.Prepay",
                "name": "prepay",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "supply",
                    "type": "uint256"
                  }
                ]
              }
            ]
          },
          {
            "internalType": "struct IArchitectBase.SpaceOptions",
            "name": "options",
            "type": "tuple",
            "components": [
              {
                "internalType": "address",
                "name": "to",
                "type": "address"
              }
            ]
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "createSpaceV2",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct IArchitectBase.CreateSpaceOld",
            "name": "spaceInfo",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IArchitectBase.Metadata",
                "name": "metadata",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "uri",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "shortDescription",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "longDescription",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.MembershipOld",
                "name": "membership",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "struct IMembershipBase.Membership",
                    "name": "settings",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "internalType": "string",
                        "name": "symbol",
                        "type": "string"
                      },
                      {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxSupply",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint64",
                        "name": "duration",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address",
                        "name": "currency",
                        "type": "address"
                      },
                      {
                        "internalType": "address",
                        "name": "feeRecipient",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "freeAllocation",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "pricingModule",
                        "type": "address"
                      }
                    ]
                  },
                  {
                    "internalType": "struct IArchitectBase.MembershipRequirementsOld",
                    "name": "requirements",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "bool",
                        "name": "everyone",
                        "type": "bool"
                      },
                      {
                        "internalType": "address[]",
                        "name": "users",
                        "type": "address[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "ruleData",
                        "type": "bytes"
                      }
                    ]
                  },
                  {
                    "internalType": "string[]",
                    "name": "permissions",
                    "type": "string[]"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.ChannelInfo",
                "name": "channel",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "metadata",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.Prepay",
                "name": "prepay",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "supply",
                    "type": "uint256"
                  }
                ]
              }
            ]
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "createSpaceWithPrepay",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      },
      {
        "inputs": [
          {
            "internalType": "struct IArchitectBase.CreateSpace",
            "name": "createSpace",
            "type": "tuple",
            "components": [
              {
                "internalType": "struct IArchitectBase.Metadata",
                "name": "metadata",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "name",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "uri",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "shortDescription",
                    "type": "string"
                  },
                  {
                    "internalType": "string",
                    "name": "longDescription",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.Membership",
                "name": "membership",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "struct IMembershipBase.Membership",
                    "name": "settings",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "string",
                        "name": "name",
                        "type": "string"
                      },
                      {
                        "internalType": "string",
                        "name": "symbol",
                        "type": "string"
                      },
                      {
                        "internalType": "uint256",
                        "name": "price",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint256",
                        "name": "maxSupply",
                        "type": "uint256"
                      },
                      {
                        "internalType": "uint64",
                        "name": "duration",
                        "type": "uint64"
                      },
                      {
                        "internalType": "address",
                        "name": "currency",
                        "type": "address"
                      },
                      {
                        "internalType": "address",
                        "name": "feeRecipient",
                        "type": "address"
                      },
                      {
                        "internalType": "uint256",
                        "name": "freeAllocation",
                        "type": "uint256"
                      },
                      {
                        "internalType": "address",
                        "name": "pricingModule",
                        "type": "address"
                      }
                    ]
                  },
                  {
                    "internalType": "struct IArchitectBase.MembershipRequirements",
                    "name": "requirements",
                    "type": "tuple",
                    "components": [
                      {
                        "internalType": "bool",
                        "name": "everyone",
                        "type": "bool"
                      },
                      {
                        "internalType": "address[]",
                        "name": "users",
                        "type": "address[]"
                      },
                      {
                        "internalType": "bytes",
                        "name": "ruleData",
                        "type": "bytes"
                      },
                      {
                        "internalType": "bool",
                        "name": "syncEntitlements",
                        "type": "bool"
                      }
                    ]
                  },
                  {
                    "internalType": "string[]",
                    "name": "permissions",
                    "type": "string[]"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.ChannelInfo",
                "name": "channel",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "string",
                    "name": "metadata",
                    "type": "string"
                  }
                ]
              },
              {
                "internalType": "struct IArchitectBase.Prepay",
                "name": "prepay",
                "type": "tuple",
                "components": [
                  {
                    "internalType": "uint256",
                    "name": "supply",
                    "type": "uint256"
                  }
                ]
              }
            ]
          }
        ],
        "stateMutability": "payable",
        "type": "function",
        "name": "createSpaceWithPrepay",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ]
      }
    ],
    "devdoc": {
      "kind": "dev",
      "methods": {
        "createSpace((string,string,string,string,((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string)))": {
          "params": {
            "SpaceInfo": "Struct containing space metadata, membership settings, and channel configuration"
          },
          "returns": {
            "_0": "address The address of the newly created space contract"
          }
        },
        "createSpaceV2(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string),(uint256)),(address))": {
          "details": "The msg.value must cover the cost of prepaid memberships",
          "params": {
            "createSpace": "Struct containing space metadata, membership settings, channel config and prepay info",
            "options": "Struct containing deployment options like the recipient address"
          },
          "returns": {
            "_0": "address The address of the newly created space contract"
          }
        },
        "createSpaceWithPrepay(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes),string[]),(string),(uint256)))": {
          "details": "This function converts the old format to the new format internallyThe msg.value must cover the cost of prepaid memberships",
          "params": {
            "spaceInfo": "Struct containing old format space configuration"
          },
          "returns": {
            "_0": "address The address of the newly created space contract"
          }
        },
        "createSpaceWithPrepay(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string),(uint256)))": {
          "details": "The msg.value must cover the cost of prepaid memberships",
          "params": {
            "createSpace": "Struct containing space metadata, membership settings, channel config and prepay info"
          },
          "returns": {
            "_0": "address The address of the newly created space contract"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {
        "createSpace((string,string,string,string,((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string)))": {
          "notice": "Creates a new space with basic configuration"
        },
        "createSpaceV2(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string),(uint256)),(address))": {
          "notice": "Creates a new space with prepaid memberships and custom deployment options"
        },
        "createSpaceWithPrepay(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes),string[]),(string),(uint256)))": {
          "notice": "Legacy function for backwards compatibility with older space creation format"
        },
        "createSpaceWithPrepay(((string,string,string,string),((string,string,uint256,uint256,uint64,address,address,uint256,address),(bool,address[],bytes,bool),string[]),(string),(uint256)))": {
          "notice": "Creates a new space with prepaid memberships"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "remappings": [
      "@openzeppelin/=node_modules/@openzeppelin/",
      "@prb/math/=node_modules/@prb/math/src/",
      "@prb/test/=node_modules/@prb/test/src/",
      "@river-build/diamond/=node_modules/@river-build/diamond/",
      "account-abstraction/=node_modules/account-abstraction/contracts/",
      "ds-test/=node_modules/ds-test/src/",
      "forge-std/=node_modules/forge-std/src/",
      "hardhat-deploy/=node_modules/hardhat-deploy/",
      "solady/=node_modules/solady/src/"
    ],
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "metadata": {
      "bytecodeHash": "none",
      "appendCBOR": false
    },
    "compilationTarget": {
      "contracts/src/factory/facets/create/ICreateSpace.sol": "ICreateSpace"
    },
    "evmVersion": "paris",
    "libraries": {}
  },
  "sources": {
    "contracts/src/factory/facets/architect/IArchitect.sol": {
      "keccak256": "0x2bf49e13516faf10c9d284c68562259a3bf6a1fe34f53669194b7968ff0234d3",
      "urls": [
        "bzz-raw://57d74147ba45d4094bf7e47662dc68c6ffc9c1ee4287014fe52c2f17222afffd",
        "dweb:/ipfs/Qmdnzmz59QLB1x7btPyywt3o37Mbaie4wQt8UEpyAyH7rn"
      ],
      "license": "MIT"
    },
    "contracts/src/factory/facets/create/ICreateSpace.sol": {
      "keccak256": "0x9f3e608a3248aaedc4741a01fec9be6df91a456ef1f8eb025f3173dad779fd47",
      "urls": [
        "bzz-raw://0bf050c778daf71a09faa64114c8e64497172a5ef26d38c50903e6d2c73c2383",
        "dweb:/ipfs/QmTEWTNaax1xizBv1Druejo8vJCpqHFr4mjEnGcCJQXWEP"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/IEntitlement.sol": {
      "keccak256": "0x81712a4b9127000ba341966d99395917dcb4b1305eadeddd1e1ad4e562587fdd",
      "urls": [
        "bzz-raw://df0fcc9d7ed7489786684f5fa8375b277146969021f96f6a9feb81cb39176eca",
        "dweb:/ipfs/QmbxXXeXe6AzXUL8cSoABMx2E2QbRAK2uJXd8TRnDuKSJ8"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/rule/IRuleEntitlement.sol": {
      "keccak256": "0x362d73e7b5a9626ffb3c76ebd7c41cae6240ce0a8d2ec401df345814a39b303b",
      "urls": [
        "bzz-raw://c750b186885d1af5cda10755c8443629b270d18b221c1054a7e9344adbea7ce4",
        "dweb:/ipfs/QmcwkJjGj8PGy43KRRh2c4ggcjBVD65XDsoq8H5LozTeN2"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/entitlements/user/IUserEntitlement.sol": {
      "keccak256": "0x573a718650f7088b84fe0bc6ec0b85c354c58c842691c66b2e682912455161c9",
      "urls": [
        "bzz-raw://5b41f88dd0e806b3f61b72f340dbdc53710827b1c8de9bcba6ba11fd1f8ae25a",
        "dweb:/ipfs/QmZZtrWAgx3aLFA2dXuoHtujBqEuxAkHZkMP4FdmEAcQRx"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/membership/IMembership.sol": {
      "keccak256": "0xbbba6bf5f9e7075719c89910e88b9b17a9b8814da8b7a37c6d48d8335ebde9a7",
      "urls": [
        "bzz-raw://44476a805573fd5d9fb3e6da0a21dfade23ffd0d785103f1a5cb49a354dd4c55",
        "dweb:/ipfs/QmQTxP1bJuiXVPTprKTL8w5XNXrZCxYVtF6HTkFk8ovssD"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/owner/ISpaceOwner.sol": {
      "keccak256": "0xb911df0bd675db51765e301c652efde6863e7f9b56734c26229fc97d578ac5ef",
      "urls": [
        "bzz-raw://5fcbd59464b2aca01f810e14ec533101d8ea33825fbe9e242771c894883304ff",
        "dweb:/ipfs/QmfARNFQtn3upbwj5GMGBZGkktLRYQmbg2DrVHUM4hqwtn"
      ],
      "license": "MIT"
    },
    "contracts/src/spaces/facets/proxy/ISpaceProxyInitializer.sol": {
      "keccak256": "0x7455a7d2fa9c1220f9004d9301c0bbab4b186a1e0baaeac62f44dc4dedbf7207",
      "urls": [
        "bzz-raw://5140ae625b81b040c9b93768812daa62fe122870264d2f47edf016b478bbd769",
        "dweb:/ipfs/QmWjZWAng8thc1BfGJxmaxnFZqJGdKfu8EfLxxRZLqsdkW"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/IERC173.sol": {
      "keccak256": "0x187fcc652a498aa18be665689a8496daad50511e6d7d926be0a210469325cdd8",
      "urls": [
        "bzz-raw://00c489916ad6e3ef2bfeb1d5f0230022cf776caab4b1372f0bf79b839810f1a2",
        "dweb:/ipfs/QmV2h8sDoHeyZKvbKeJBk6WaS5F87QaDMCq3iEymsbrmVh"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/facets/ownable/token/ITokenOwnable.sol": {
      "keccak256": "0x125ffc776682deecf6bbf36f4b33b762968a4e6ad182dd5a896fb92fd103b397",
      "urls": [
        "bzz-raw://bdb1d0973416722e1f7772f9f0adb2d76a262c6cb667b5c3907076f4c9b3bd37",
        "dweb:/ipfs/Qme3Xvaq4fWexPd6TAjWpqfmiQ1KCedKGXwE9nxrcv2Cw3"
      ],
      "license": "MIT"
    },
    "node_modules/@river-build/diamond/src/proxy/managed/IManagedProxy.sol": {
      "keccak256": "0xf064a056a73233ef207e7206ac910616210f6729147f29912bdb4abc69906d01",
      "urls": [
        "bzz-raw://befb3501cc4b180ed3c5b156bde2700a6de26f17e828bdb8e8ff9615268f91e1",
        "dweb:/ipfs/QmP2qGhFpySb1efhpbRBXDxzxLjVTF2UmF2KRCM8hGrsPV"
      ],
      "license": "MIT"
    }
  },
  "version": 1
}