/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MockERC721A, MockERC721AInterface } from "../MockERC721A";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__ERC721A_init",
    inputs: [
      {
        name: "name_",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol_",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "token",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mintTo",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "_data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ConsecutiveTransfer",
    inputs: [
      {
        name: "fromTokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "toTokenId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ApprovalCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "ApprovalQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "BalanceQueryForZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "MintERC2309QuantityExceedsLimit",
    inputs: [],
  },
  {
    type: "error",
    name: "MintToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "MintZeroQuantity",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnerQueryForNonexistentToken",
    inputs: [],
  },
  {
    type: "error",
    name: "OwnershipNotInitializedForExtraData",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferCallerNotOwnerNorApproved",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferFromIncorrectOwner",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToNonERC721ReceiverImplementer",
    inputs: [],
  },
  {
    type: "error",
    name: "TransferToZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "URIQueryForNonexistentToken",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000071565b6200006b60405180604001604052806009815260200168151bdddb9cd5195cdd60ba1b815250604051806040016040528060048152602001631513919560e21b8152506200011960201b60201c565b62000408565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000be576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200011657805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6200012b6380ac58cd60e01b6200014d565b6200013d635b5e139f60e01b6200014d565b6200014982826200022d565b5050565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff161515600114620001dc576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff19166001179055620001f5565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b7f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df007f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df026200027b84826200033c565b50600381016200028c83826200033c565b50600090555050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002c057607f821691505b602082108103620002e157634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111562000337576000816000526020600020601f850160051c81016020861015620003125750805b601f850160051c820191505b8181101562000333578281556001016200031e565b5050505b505050565b81516001600160401b0381111562000358576200035862000295565b6200037081620003698454620002ab565b84620002e7565b602080601f831160018114620003a857600084156200038f5750858301515b600019600386901b1c1916600185901b17855562000333565b600085815260208120601f198616915b82811015620003d957888601518255948401946001909101908401620003b8565b5085821015620003f85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114cc80620004186000396000f3fe6080604052600436106100fe5760003560e01c80636352211e11610095578063a22cb46511610064578063a22cb46514610279578063b88d4fde14610299578063c87b56dd146102ac578063d2f01f19146102cc578063e985e9c5146102ec57600080fd5b80636352211e1461020457806370a0823114610224578063755edd171461024457806395d89b411461026457600080fd5b806323b872dd116100d157806323b872dd1461019e57806340c10f19146101b157806342842e0e146101d157806342966c68146101e457600080fd5b806306fdde0314610103578063081812fc1461012e578063095ea7b31461016657806318160ddd1461017b575b600080fd5b34801561010f57600080fd5b5061011861031c565b604051610125919061101a565b60405180910390f35b34801561013a57600080fd5b5061014e61014936600461102d565b6103b7565b6040516001600160a01b039091168152602001610125565b61017961017436600461105d565b6103c8565b005b34801561018757600080fd5b506101906103d8565b604051908152602001610125565b6101796101ac366004611087565b6103e7565b3480156101bd57600080fd5b506101796101cc36600461105d565b6105cc565b6101796101df366004611087565b6105d6565b3480156101f057600080fd5b506101796101ff36600461102d565b6105f6565b34801561021057600080fd5b5061014e61021f36600461102d565b610602565b34801561023057600080fd5b5061019061023f3660046110c3565b61060d565b34801561025057600080fd5b5061019061025f3660046110c3565b610618565b34801561027057600080fd5b50610118610634565b34801561028557600080fd5b506101796102943660046110de565b61064c565b6101796102a73660046111a6565b6106c9565b3480156102b857600080fd5b506101186102c736600461102d565b610713565b3480156102d857600080fd5b506101796102e7366004611242565b6107a4565b3480156102f857600080fd5b5061030c6103073660046112a6565b6107f8565b6040519015158152602001610125565b6060610326610804565b6002018054610334906112d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610360906112d9565b80156103ad5780601f10610382576101008083540402835291602001916103ad565b820191906000526020600020905b81548152906001019060200180831161039057829003601f168201915b5050505050905090565b60006103c282610828565b92915050565b6103d482826001610875565b5050565b60006103e261092a565b905090565b60006103f282610949565b9050836001600160a01b0316816001600160a01b0316146104255760405162a1148160e81b815260040160405180910390fd5b600080610431846109e4565b9150915061045681876104413390565b6001600160a01b039081169116811491141790565b6104815761046486336107f8565b61048157604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b0385166104a857604051633a954ecd60e21b815260040160405180910390fd5b80156104b357600082555b6104bb610804565b6001600160a01b03871660009081526005919091016020526040902080546000190190556104e7610804565b6001600160a01b03861660008181526005929092016020526040909120805460010190554260a01b17600160e11b1761051e610804565b60008681526004919091016020526040812091909155600160e11b84169003610594576001840161054d610804565b6000828152600491909101602052604081205490036105925761056e610804565b548114610592578361057e610804565b600083815260049190910160205260409020555b505b83856001600160a01b0316876001600160a01b03166000805160206114ac83398151915260405160405180910390a45b505050505050565b6103d48282610a0c565b6105f1838383604051806020016040528060008152506106c9565b505050565b6105ff81610b23565b50565b60006103c282610949565b60006103c282610b2e565b6000610622610b97565b905061062f826001610a0c565b919050565b606061063e610804565b6003018054610334906112d9565b80610655610804565b336000818152600792909201602090815260408084206001600160a01b03881680865290835293819020805460ff19169515159590951790945592518415158152919290917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106d48484846103e7565b6001600160a01b0383163b1561070d576106f084848484610ba7565b61070d576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b606061071e82610c92565b61073b57604051630a14c4b560e41b815260040160405180910390fd5b600061075260408051602081019091526000815290565b90508051600003610772576040518060200160405280600081525061079d565b8061077c84610cce565b60405160200161078d92919061130d565b6040516020818303038152906040525b9392505050565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff166107ee57604051630ef4733760e31b815260040160405180910390fd5b6103d48282610d12565b600061079d8383610d3c565b7f6569bde4a160c636ea8b8d11acb83a60d7fec0b8f2e09389306cba0e1340df0090565b600061083382610c92565b610850576040516333d1c03960e21b815260040160405180910390fd5b610858610804565b60009283526006016020525060409020546001600160a01b031690565b600061088083610602565b905081156108bf57336001600160a01b038216146108bf576108a28133610d3c565b6108bf576040516367d9dca160e11b815260040160405180910390fd5b836108c8610804565b6000858152600691909101602052604080822080546001600160a01b0319166001600160a01b0394851617905551859287811692908516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a450505050565b600080610935610804565b60010154610941610804565b540303919050565b600080610954610804565b60008481526004820160205260408120549350909150600160e01b831690036109ca57816000036109c457805483106109a057604051636f96cda160e11b815260040160405180910390fd5b5b6000199092016000818152600484016020526040902054909290915081156109a1575b50919050565b50604051636f96cda160e11b815260040160405180910390fd5b60008060006109f1610804565b60009485526006016020525050604090912080549092909150565b6000610a16610804565b5490506000829003610a3b5760405163b562e8dd60e01b815260040160405180910390fd5b680100000000000000018202610a4f610804565b6001600160a01b038516600081815260059290920160205260409091208054929092019091554260a01b6001841460e11b1717610a8a610804565b600083815260049190910160205260408120919091556001600160a01b0384169083830190839083906000805160206114ac8339815191528180a4600183015b818114610af057808360006000805160206114ac833981519152600080a4600101610aca565b5081600003610b1157604051622e076360e81b815260040160405180910390fd5b80610b1a610804565b55506105f19050565b6105ff816000610d79565b60006001600160a01b038216610b57576040516323d3ad8160e21b815260040160405180910390fd5b67ffffffffffffffff610b68610804565b6005016000846001600160a01b03166001600160a01b0316815260200190815260200160002054169050919050565b6000610ba1610804565b54919050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610bdc90339089908890889060040161133c565b6020604051808303816000875af1925050508015610c17575060408051601f3d908101601f19168201909252610c1491810190611379565b60015b610c75573d808015610c45576040519150601f19603f3d011682016040523d82523d6000602084013e610c4a565b606091505b508051600003610c6d576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6000610c9c610804565b54821080156103c25750600160e01b610cb3610804565b60008481526004919091016020526040902054161592915050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610ce85750819003601f19909101908152919050565b610d226380ac58cd60e01b610eba565b610d32635b5e139f60e01b610eba565b6103d48282610f98565b6000610d46610804565b6001600160a01b039384166000908152600791909101602090815260408083209490951682529290925250205460ff1690565b6000610d8483610949565b905080600080610d93866109e4565b915091508415610dd357610da8818433610441565b610dd357610db68333610d3c565b610dd357604051632ce44b5f60e11b815260040160405180910390fd5b8015610dde57600082555b6000610de8610804565b6001600160a01b0385166000818152600583016020526040902080546fffffffffffffffffffffffffffffffff0190559091504260a01b17600360e01b176000888152600483016020526040812091909155600160e11b86169003610e80576001870160008181526004830160205260408120549003610e7e5781548114610e7e57600081815260048301602052604090208690555b505b60405187906000906001600160a01b038716906000805160206114ac833981519152908390a4600190810180549091019055505050505050565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff161515600114610f47576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff19166001179055610f60565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b6000610fa2610804565b905060028101610fb284826113eb565b5060038101610fc183826113eb565b50600090555050565b60005b83811015610fe5578181015183820152602001610fcd565b50506000910152565b60008151808452611006816020860160208601610fca565b601f01601f19169290920160200192915050565b60208152600061079d6020830184610fee565b60006020828403121561103f57600080fd5b5035919050565b80356001600160a01b038116811461062f57600080fd5b6000806040838503121561107057600080fd5b61107983611046565b946020939093013593505050565b60008060006060848603121561109c57600080fd5b6110a584611046565b92506110b360208501611046565b9150604084013590509250925092565b6000602082840312156110d557600080fd5b61079d82611046565b600080604083850312156110f157600080fd5b6110fa83611046565b91506020830135801515811461110f57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561114b5761114b61111a565b604051601f8501601f19908116603f011681019082821181831017156111735761117361111a565b8160405280935085815286868601111561118c57600080fd5b858560208301376000602087830101525050509392505050565b600080600080608085870312156111bc57600080fd5b6111c585611046565b93506111d360208601611046565b925060408501359150606085013567ffffffffffffffff8111156111f657600080fd5b8501601f8101871361120757600080fd5b61121687823560208401611130565b91505092959194509250565b600082601f83011261123357600080fd5b61079d83833560208501611130565b6000806040838503121561125557600080fd5b823567ffffffffffffffff8082111561126d57600080fd5b61127986838701611222565b9350602085013591508082111561128f57600080fd5b5061129c85828601611222565b9150509250929050565b600080604083850312156112b957600080fd5b6112c283611046565b91506112d060208401611046565b90509250929050565b600181811c908216806112ed57607f821691505b6020821081036109c457634e487b7160e01b600052602260045260246000fd5b6000835161131f818460208801610fca565b835190830190611333818360208801610fca565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061136f90830184610fee565b9695505050505050565b60006020828403121561138b57600080fd5b81516001600160e01b03198116811461079d57600080fd5b601f8211156105f1576000816000526020600020601f850160051c810160208610156113cc5750805b601f850160051c820191505b818110156105c4578281556001016113d8565b815167ffffffffffffffff8111156114055761140561111a565b6114198161141384546112d9565b846113a3565b602080601f83116001811461144e57600084156114365750858301515b600019600386901b1c1916600185901b1785556105c4565b600085815260208120601f198616915b8281101561147d5788860151825594840194600190910190840161145e565b508582101561149b5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

type MockERC721AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721A__factory extends ContractFactory {
  constructor(...args: MockERC721AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC721A> {
    return super.deploy(overrides || {}) as Promise<MockERC721A>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC721A {
    return super.attach(address) as MockERC721A;
  }
  override connect(signer: Signer): MockERC721A__factory {
    return super.connect(signer) as MockERC721A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721AInterface {
    return new utils.Interface(_abi) as MockERC721AInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC721A {
    return new Contract(address, _abi, signerOrProvider) as MockERC721A;
  }
}
