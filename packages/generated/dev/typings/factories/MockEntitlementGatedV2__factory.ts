/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGatedV2,
  MockEntitlementGatedV2Interface,
} from "../MockEntitlementGatedV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGatedV2_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBaseV2.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBaseV2.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "IncompatibleRuleData",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRuleData",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuard__ReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200367c3803806200367c833981016040819052620000349162000127565b6200003e6200007f565b7fc9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf80080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b61351380620001696000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806368ab7dd61161005b57806368ab7dd6146100ff5780636fe674111461011f57806392c399ff14610132578063ea7aafb71461014557600080fd5b8063069a3ee91461008d578063375e3bbc146100b65780634739e805146100cb57806357e70027146100de575b600080fd5b6100a061009b36600461211f565b610158565b6040516100ad9190612232565b60405180910390f35b6100c96100c43660046122ea565b61041d565b005b6100c96100d9366004612314565b610473565b6100f16100ec366004612365565b610517565b6040519081526020016100ad565b61011261010d36600461211f565b6107c3565b6040516100ad91906124d0565b61011261012d366004612569565b610a7c565b6100a0610140366004612569565b610aaa565b6100f1610153366004612365565b610aed565b61017c60405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909391928492849190879085015b8282101561021957600084815260209020604080518082019091529083018054829060ff1660028111156101e6576101e6612138565b60028111156101f7576101f7612138565b81529054610100900460ff1660209182015290825260019290920191016101b0565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610357576000848152602090206040805160808101909152600484029091018054829060ff16600581111561028157610281612138565b600581111561029257610292612138565b81526001820154602082015260028201546001600160a01b031660408201526003820180546060909201916102c69061258b565b80601f01602080910402602001604051908101604052809291908181526020018280546102f29061258b565b801561033f5780601f106103145761010080835404028352916020019161033f565b820191906000526020600020905b81548152906001019060200180831161032257829003601f168201915b50505050508152505081526020019060010190610246565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156104035760008481526020902060408051606081019091529083018054829060ff1660028111156103bb576103bb612138565b60028111156103cc576103cc612138565b8152905460ff6101008204811660208085019190915262010000909204166040909201919091529082526001929092019101610384565b5050505081525050905061041681610b54565b9392505050565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff1661046757604051630ef4733760e31b815260040160405180910390fd5b61047081611036565b50565b60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0054036104b557604051635db5c7cd60e11b815260040160405180910390fd5b6104de60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b6104e9838383611071565b61051260017f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b505050565b60008061052b61052684612807565b61130a565b6000858152602081905260408120919250610547908290611f9e565b60005b8251518110156105d957825180518391908390811061056b5761056b612924565b602090810291909101810151825460018181018555600094855292909320815193018054919390929091839160ff19909116908360028111156105b0576105b0612138565b021790555060209190910151815460ff9091166101000261ff001990911617905560010161054a565b506105e8600182016000611fbc565b60005b8260200151518110156106af57816001018360200151828151811061061257610612612924565b60209081029190910181015182546001818101855560009485529290932081516004909402018054919390929091839160ff199091169083600581111561065b5761065b612138565b02179055506020820151600182015560408201516002820180546001600160a01b0319166001600160a01b03909216919091179055606082015160038201906106a49082612988565b5050506001016105eb565b506106be600282016000611fdd565b60005b82604001515181101561076e5781600201836040015182815181106106e8576106e8612924565b602090810291909101810151825460018181018555600094855292909320815193018054919390929091839160ff199091169083600281111561072d5761072d612138565b02179055506020820151815460409093015162ffff001990931661010060ff9283160262ff00001916176201000091909316029190911790556001016106c1565b506040516bffffffffffffffffffffffff193260601b1660208201524360348201526000906054016040516020818303038152906040528051906020012090506107ba813060006117f1565b95945050505050565b6107e760405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b8282101561088457600084815260209020604080518082019091529083018054829060ff16600281111561085157610851612138565b600281111561086257610862612138565b81529054610100900460ff16602091820152908252600192909201910161081b565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156109c2576000848152602090206040805160808101909152600484029091018054829060ff1660058111156108ec576108ec612138565b60058111156108fd576108fd612138565b81526001820154602082015260028201546001600160a01b031660408201526003820180546060909201916109319061258b565b80601f016020809104026020016040519081016040528092919081815260200182805461095d9061258b565b80156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b505050505081525050815260200190600101906108b1565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b82821015610a6e5760008481526020902060408051606081019091529083018054829060ff166002811115610a2657610a26612138565b6002811115610a3757610a37612138565b8152905460ff61010082048116602080850191909152620100009092041660409092019190915290825260019290920191016109ef565b505050915250909392505050565b610aa060405180606001604052806060815260200160608152602001606081525090565b6104168383611aa0565b610ace60405180606001604052806060815260200160608152602001606081525090565b6000610ada8484611aa0565b9050610ae581610b54565b949350505050565b60008281526020819052604081208290610b078282612ee5565b50506040516bffffffffffffffffffffffff193260601b166020820152436034820152600090605401604051602081830303815290604052805190602001209050610416813060006117f1565b610b7860405180606001604052806060815260200160608152602001606081525090565b610b9c60405180606001604052806060815260200160608152602001606081525090565b8251516001600160401b03811115610bb657610bb66125bf565b604051908082528060200260200182016040528015610bfb57816020015b6040805180820190915260008082526020820152815260200190600190039081610bd45790505b5081526020830151516001600160401b03811115610c1b57610c1b6125bf565b604051908082528060200260200182016040528015610c6d57816020015b604080516080810182526000808252602080830182905292820181905260608201528252600019909201910181610c395790505b5060208201526040830151516001600160401b03811115610c9057610c906125bf565b604051908082528060200260200182016040528015610cdb57816020015b6040805160608101825260008082526020808301829052928201528252600019909201910181610cae5790505b50604082015260005b836020015151811015610ea057600084602001518281518110610d0957610d09612924565b60200260200101519050610d48604080516080810190915280600081526020016000815260200160006001600160a01b03168152602001600081525090565b8151610d5390611b9a565b81906005811115610d6657610d66612138565b90816005811115610d7957610d79612138565b905250602080830151908201526040808301516001600160a01b031690820152600382516005811115610dae57610dae612138565b03610dd95760008260600151806020019051810190610dcd9190613023565b51606083015250610e74565b600282516005811115610dee57610dee612138565b03610e0d5760008260600151806020019051810190610dcd9190613023565b600182516005811115610e2257610e22612138565b03610e415760008260600151806020019051810190610dcd9190613023565b600482516005811115610e5657610e56612138565b03610e745760405163089f2a9160e31b815260040160405180910390fd5b8084602001518481518110610e8b57610e8b612924565b60209081029190910101525050600101610ce4565b5060005b835151811015610f5757600084600001518281518110610ec657610ec6612924565b60200260200101519050610eea604080518082019091526000808252602082015290565b8151610ef590611c7b565b81906002811115610f0857610f08612138565b90816002811115610f1b57610f1b612138565b90525060208083015160ff16908201528351805182919085908110610f4257610f42612924565b60209081029190910101525050600101610ea4565b5060005b83604001515181101561102f57600084604001518281518110610f8057610f80612924565b60200260200101519050610faf6040805160608101909152806000815260006020820181905260409091015290565b8151610fba90611cd3565b81906002811115610fcd57610fcd612138565b90816002811115610fe057610fe0612138565b90525060208083015160ff908116918301919091526040808401519091168183015284015180518291908590811061101a5761101a612924565b60209081029190910101525050600101610f5b565b5092915050565b61104663ba1c05eb60e01b611d17565b6000805160206134f383398151915280546001600160a01b0319166001600160a01b03831617905550565b60008381526000805160206134d38339815191526020526040902080546000805160206134f3833981519152919061010090046001600160a01b031615806110bb5750805460ff16155b156110d957604051637ad5a43960e11b815260040160405180910390fd5b600084815260028201602052604090205460ff161561110b57604051637912b73960e01b815260040160405180910390fd5b600084815260018201602052604081205481908190815b81811015611249576000898152600187016020526040812080548390811061114c5761114c612924565b60009182526020909120018054909150336001600160a01b03909116036111d85760008154600160a01b900460ff16600281111561118c5761118c612138565b146111aa576040516347592a4d60e01b815260040160405180910390fd5b80548990829060ff60a01b1916600160a01b8360028111156111ce576111ce612138565b0217905550600195505b60018154600160a01b900460ff1660028111156111f7576111f7612138565b0361120e57846112068161303f565b955050611240565b60028154600160a01b900460ff16600281111561122d5761122d612138565b03611240578361123c8161303f565b9450505b50600101611122565b508361126857604051638223a7e960e01b815260040160405180910390fd5b611273600282613058565b8311806112895750611286600282613058565b82115b156112ff5760008881526002860160205260408120805460ff191660011790558284116112b75760026112ba565b60015b9050897fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c633826040516112ec919061307a565b60405180910390a26112fd8a611df9565b505b505050505050505050565b61132e60405180606001604052806060815260200160608152602001606081525090565b61135260405180606001604052806060815260200160608152602001606081525090565b8251516001600160401b0381111561136c5761136c6125bf565b6040519080825280602002602001820160405280156113b157816020015b604080518082019091526000808252602082015281526020019060019003908161138a5790505b5081526020830151516001600160401b038111156113d1576113d16125bf565b60405190808252806020026020018201604052801561142c57816020015b61141960408051608081019091528060008152600060208201819052604082015260609081015290565b8152602001906001900390816113ef5790505b5060208201526040830151516001600160401b0381111561144f5761144f6125bf565b60405190808252806020026020018201604052801561149a57816020015b604080516060810182526000808252602080830182905292820152825260001990920191018161146d5790505b50604082015260005b836020015151811015611662576000846020015182815181106114c8576114c8612924565b602002602001015190506114fc60408051608081019091528060008152600060208201819052604082015260609081015290565b815161150790611b9a565b8190600581111561151a5761151a612138565b9081600581111561152d5761152d612138565b905250602080830151908201526040808301516001600160a01b03169082015260038251600581111561156257611562612138565b036115a7576040805160208101909152600081525b60608301518082526040805160208101929092520160408051601f19818403018152919052606083015250611636565b6002825160058111156115bc576115bc612138565b036115d557604080516020810190915260008152611577565b6001825160058111156115ea576115ea612138565b0361160357604080516020810190915260008152611577565b60048251600581111561161857611618612138565b036116365760405163089f2a9160e31b815260040160405180910390fd5b808460200151848151811061164d5761164d612924565b602090810291909101015250506001016114a3565b5060005b8351518110156117195760008460000151828151811061168857611688612924565b602002602001015190506116ac604080518082019091526000808252602082015290565b81516116b790611c7b565b819060028111156116ca576116ca612138565b908160028111156116dd576116dd612138565b90525060208083015160ff1690820152835180518291908590811061170457611704612924565b60209081029190910101525050600101611666565b5060005b83604001515181101561102f5760008460400151828151811061174257611742612924565b602002602001015190506117716040805160608101909152806000815260006020820181905260409091015290565b815161177c90611cd3565b8190600281111561178f5761178f612138565b908160028111156117a2576117a2612138565b90525060208083015160ff90811691830191909152604080840151909116818301528401518051829190859081106117dc576117dc612924565b6020908102919091010152505060010161171d565b60008381526000805160206134d38339815191526020526040902080546000805160206134f3833981519152919060ff1615156001036118835760005b6004820154811015611881578382600401828154811061185057611850612924565b906000526020600020015403611879576040516301ab53df60e31b815260040160405180910390fd5b60010161182e565b505b81546001600160a01b031661189a5761189a611ecd565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa1580156118e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261190b919081019061308d565b825490915060ff1661194c5781546003830180546001600160a01b0319166001600160a01b0388161790556001600160a81b03191661010033021760011782555b600482018054600181018255600091825260208220018590555b8151811015611a3c5782600101600086815260200190815260200160002060405180604001604052808484815181106119a1576119a1612924565b60200260200101516001600160a01b03168152602001600060028111156119ca576119ca612138565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b836002811115611a2d57611a2d612138565b02179055505050600101611966565b50825460405163541da4e560e01b81526001600160a01b039091169063541da4e590611a729033908a908990879060040161311b565b600060405180830381600087803b158015611a8c57600080fd5b505af11580156112fd573d6000803e3d6000fd5b611ac460405180606001604052806060815260200160608152602001606081525090565b60008381526000805160206134d38339815191526020526040812080546000805160206134f38339815191529260ff90911615159003611b1757604051637ad5a43960e11b815260040160405180910390fd5b6003810154604051633455beeb60e11b8152600481018690526001600160a01b039091169060009082906368ab7dd690602401600060405180830381865afa158015611b67573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611b8f9190810190613376565b979650505050505050565b60006003826005811115611bb057611bb0612138565b03611bbd57506003919050565b6002826005811115611bd157611bd1612138565b03611bde57506002919050565b6004826005811115611bf257611bf2612138565b03611bff57506004919050565b6005826005811115611c1357611c13612138565b03611c2057506005919050565b6001826005811115611c3457611c34612138565b03611c4157506001919050565b6000826005811115611c5557611c55612138565b03611c6257506000919050565b6040516313b423f960e01b815260040160405180910390fd5b60006001826002811115611c9157611c91612138565b03611c9e57506001919050565b6002826002811115611cb257611cb2612138565b03611cbf57506002919050565b6000826002811115611c5557611c55612138565b60006001826002811115611ce957611ce9612138565b03611cf657506001919050565b6002826002811115611d0a57611d0a612138565b03611c6257506002919050565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff161515600114611da4576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff19166001179055611dbd565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b5050565b60008181526000805160206134d3833981519152602052604081206000805160206134f3833981519152915b6004820154811015611e7957816001016000836004018381548110611e4c57611e4c612924565b906000526020600020015481526020019081526020016000206000611e719190611ffb565b600101611e25565b50611e88600482016000612019565b6000838152600183016020526040812080546001600160a81b03191681556003810180546001600160a01b031916905590611ec66004830182612019565b5050505050565b60006000805160206134f3833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa158015611f5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f7f91906134b5565b82546001600160a01b0319166001600160a01b03919091161790915550565b50805460008255906000526020600020908101906104709190612037565b50805460008255600402906000526020600020908101906104709190612055565b50805460008255906000526020600020908101906104709190612096565b508054600082559060005260206000209081019061047091906120b1565b508054600082559060005260206000209081019061047091906120d0565b5b8082111561205157805461ffff19168155600101612038565b5090565b8082111561205157805460ff191681556000600182018190556002820180546001600160a01b031916905561208d60038301826120e5565b50600401612055565b5b8082111561205157805462ffffff19168155600101612097565b5b808211156120515780546001600160a81b03191681556001016120b2565b5b8082111561205157600081556001016120d1565b5080546120f19061258b565b6000825580601f10612101575050565b601f01602090049060005260206000209081019061047091906120d0565b60006020828403121561213157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061047057610470612138565b6006811061047057610470612138565b60008151808452602080850194506020840160005b838110156121d157815180516121988161215e565b885280840151848901526040808201516001600160a01b0316908901526060908101519088015260809096019590820190600101612183565b509495945050505050565b60008151808452602080850194506020840160005b838110156121d157815180516122068161214e565b88528084015160ff908116858a01526040918201511690880152606090960195908201906001016121f1565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101561228e578351805161226c8161214e565b835285015160ff16858301529284019260019290920191604090910190612257565b50838701519350601f199250828682030160408701526122ae818561216e565b935050506040850151818584030160608601526122cb83826121dc565b9695505050505050565b6001600160a01b038116811461047057600080fd5b6000602082840312156122fc57600080fd5b8135610416816122d5565b6003811061047057600080fd5b60008060006060848603121561232957600080fd5b8335925060208401359150604084013561234281612307565b809150509250925092565b60006060828403121561235f57600080fd5b50919050565b6000806040838503121561237857600080fd5b8235915060208301356001600160401b0381111561239557600080fd5b6123a18582860161234d565b9150509250929050565b60005b838110156123c65781810151838201526020016123ae565b50506000910152565b600082825180855260208086019550808260051b84010181860160005b8481101561246d57601f1980878503018a5282516080815161240d8161215e565b865281870151878701526040808301516001600160a01b031690870152606091820151918601819052815190860181905260a09061245081838901858b016123ab565b9b87019b601f0190921694909401019250908301906001016123ec565b5090979650505050505050565b60008151808452602080850194506020840160005b838110156121d157815180516124a48161214e565b88528084015160ff908116858a015260409182015116908801526060909601959082019060010161248f565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101561252c578351805161250a8161214e565b835285015160ff168583015292840192600192909201916040909101906124f5565b50838701519350601f1992508286820301604087015261254c81856123cf565b935050506040850151818584030160608601526122cb838261247a565b6000806040838503121561257c57600080fd5b50508035926020909101359150565b600181811c9082168061259f57607f821691505b60208210810361235f57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156125f7576125f76125bf565b60405290565b604051606081016001600160401b03811182821017156125f7576125f76125bf565b604080519081016001600160401b03811182821017156125f7576125f76125bf565b604051601f8201601f191681016001600160401b0381118282101715612669576126696125bf565b604052919050565b60006001600160401b0382111561268a5761268a6125bf565b5060051b60200190565b60ff8116811461047057600080fd5b6006811061047057600080fd5b600082601f8301126126c157600080fd5b813560206126d66126d183612671565b612641565b82815260079290921b840181019181810190868411156126f557600080fd5b8286015b8481101561275a57608081890312156127125760008081fd5b61271a6125d5565b8135612725816126a3565b8152818501358582015260408083013561273e816122d5565b90820152606082810135908201528352918301916080016126f9565b509695505050505050565b600082601f83011261277657600080fd5b813560206127866126d183612671565b828152606092830285018201928282019190878511156127a557600080fd5b8387015b8581101561246d5781818a0312156127c15760008081fd5b6127c96125fd565b81356127d481612307565b8152818601356127e381612694565b818701526040828101356127f681612694565b9082015284529284019281016127a9565b60006060823603121561281957600080fd5b6128216125fd565b82356001600160401b038082111561283857600080fd5b9084019036601f83011261284b57600080fd5b8135602061285b6126d183612671565b82815260069290921b8401810191818101903684111561287a57600080fd5b948201945b838610156128d057604086360312156128985760008081fd5b6128a061261f565b86356128ab81612307565b8152868401356128ba81612694565b818501528252604095909501949082019061287f565b865250868101359350828411156128e657600080fd5b6128f2368589016126b0565b9085015250604085013591508082111561290b57600080fd5b5061291836828601612765565b60408301525092915050565b634e487b7160e01b600052603260045260246000fd5b5b81811015611df5576000815560010161293b565b601f82111561051257806000526020600020601f840160051c810160208510156129765750805b611ec6601f850160051c83018261293a565b81516001600160401b038111156129a1576129a16125bf565b6129b5816129af845461258b565b8461294f565b602080601f8311600181146129ea57600084156129d25750858301515b600019600386901b1c1916600185901b178555612a43565b600085815260208120601f198616915b82811015612a19578886015182559484019460019091019084016129fa565b5085821015612a375787850151600019600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b600052601160045260246000fd5b8135612a6c81612307565b612a758161214e565b60ff1982541660ff82168117835550506020820135612a9381612694565b815461ff001916600882901b61ff0016178255505050565b6000808335601e19843603018112612ac257600080fd5b8301803591506001600160401b03821115612adc57600080fd5b6020019150600581901b3603821315612af457600080fd5b9250929050565b60008235607e19833603018112612b1157600080fd5b9190910192915050565b6001600160401b03831115612b3257612b326125bf565b612b4683612b40835461258b565b8361294f565b6000601f841160018114612b7a5760008515612b625750838201355b600019600387901b1c1916600186901b178355611ec6565b600083815260209020601f19861690835b82811015612bab5786850135825560209485019460019092019101612b8b565b5086821015612bc85760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8135612be5816126a3565b612bee8161215e565b60ff1982541660ff821681178355505060208201356001820155600281016040830135612c1a816122d5565b81546001600160a01b0319166001600160a01b0391909116179055606082013536839003601e19018112612c4d57600080fd5b820180356001600160401b03811115612c6557600080fd5b602082019150803603821315612c7a57600080fd5b612c88818360038601612b1b565b50505050565b600160401b831115612ca257612ca26125bf565b805483825580841015612d755760026001600160fe1b038281168314612cca57612cca612a4b565b8086168614612cdb57612cdb612a4b565b506000838152602081208360021b81018760021b820191505b80821015612d705782825560018381840155838584015560038301612d19815461258b565b8015612d6257601f80821160018114612d3457878455612d5f565b600084815260209020612d5083850160051c820187830161293a565b50600084815260208120818655555b50505b505050600482019150612cf4565b505050505b5060008181526020812083915b85811015612a4357612d9d612d978487612afb565b83612bda565b6020929092019160049190910190600101612d82565b6000808335601e19843603018112612dca57600080fd5b8301803591506001600160401b03821115612de457600080fd5b6020019150606081023603821315612af457600080fd5b8135612e0681612307565b612e0f8161214e565b60ff1982541660ff82168117835550506020820135612e2d81612694565b815461ff001916600882901b61ff0016178255506040820135612e4f81612694565b815462ff0000191660109190911b62ff00001617905550565b600160401b831115612e7c57612e7c6125bf565b805483825580841015612eb3576000828152602081208581019083015b80821015612eaf57828255600182019150612e99565b5050505b5060008181526020812083915b85811015612a4357612ed28383612dfb565b6060929092019160019182019101612ec0565b8135601e19833603018112612ef957600080fd5b820180356001600160401b03811115612f1157600080fd5b6020820191508060061b3603821315612f2957600080fd5b600160401b811115612f3d57612f3d6125bf565b825481845580821015612f74576000848152602081208381019083015b80821015612f7057828255600182019150612f5a565b5050505b5060008381526020902060005b82811015612fa657612f938483612a61565b6040939093019260019182019101612f81565b50505050612fb76020830183612aab565b612fc5818360018601612c8e565b5050612fd46040830183612db3565b612c88818360028601612e68565b600060208284031215612ff457600080fd5b604051602081018181106001600160401b0382111715613016576130166125bf565b6040529151825250919050565b60006020828403121561303557600080fd5b6104168383612fe2565b60006001820161305157613051612a4b565b5060010190565b60008261307557634e487b7160e01b600052601260045260246000fd5b500490565b602081016130878361214e565b91905290565b600060208083850312156130a057600080fd5b82516001600160401b038111156130b657600080fd5b8301601f810185136130c757600080fd5b80516130d56126d182612671565b81815260059190911b820183019083810190878311156130f457600080fd5b928401925b82841015611b8f57835161310c816122d5565b825292840192908401906130f9565b60006080820160018060a01b03808816845260208760208601528660408601526080606086015282865180855260a08701915060208801945060005b81811015613175578551851683529483019491830191600101613157565b50909a9950505050505050505050565b6000601f83601f84011261319857600080fd5b825160206131a86126d183612671565b82815260059290921b850181019181810190878411156131c757600080fd5b8287015b848110156132c85780516001600160401b03808211156131eb5760008081fd5b908901906080601f19838d0381018213156132065760008081fd5b61320e6125d5565b8885015161321b816126a3565b81526040858101518a830152606080870151613236816122d5565b8383015293860151938585111561324d5760008081fd5b84870196508f603f88011261326457600094508485fd5b8a87015194508585111561327a5761327a6125bf565b6132898b858f88011601612641565b95508486528f828689010111156132a257600093508384fd5b6132b1858c8801848a016123ab565b8201949094528752505050928401925083016131cb565b50979650505050505050565b600082601f8301126132e557600080fd5b815160206132f56126d183612671565b8281526060928302850182019282820191908785111561331457600080fd5b8387015b8581101561246d5781818a0312156133305760008081fd5b6133386125fd565b815161334381612307565b81528186015161335281612694565b8187015260408281015161336581612694565b908201528452928401928101613318565b6000602080838503121561338957600080fd5b82516001600160401b03808211156133a057600080fd5b90840190606082870312156133b457600080fd5b6133bc6125fd565b8251828111156133cb57600080fd5b8301601f810188136133dc57600080fd5b80516133ea6126d182612671565b81815260069190911b8201860190868101908a83111561340957600080fd5b928701925b8284101561345f576040848c0312156134275760008081fd5b61342f61261f565b845161343a81612307565b81528489015161344981612694565b818a01528252604093909301929087019061340e565b8452505050828401518281111561347557600080fd5b61348188828601613185565b8583015250604083015193508184111561349a57600080fd5b6134a6878585016132d4565b60408201529695505050505050565b6000602082840312156134c757600080fd5b8151610416816122d556fec9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf801c9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf800";

type MockEntitlementGatedV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGatedV2__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGatedV2> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGatedV2>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGatedV2 {
    return super.attach(address) as MockEntitlementGatedV2;
  }
  override connect(signer: Signer): MockEntitlementGatedV2__factory {
    return super.connect(signer) as MockEntitlementGatedV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedV2Interface {
    return new utils.Interface(_abi) as MockEntitlementGatedV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGatedV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGatedV2;
  }
}
