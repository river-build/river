/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGatedV2,
  MockEntitlementGatedV2Interface,
} from "../MockEntitlementGatedV2";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGatedV2_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlement.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlement.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlement.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBaseV2.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementV2.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementV2.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementV2.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBaseV2.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "IncompatibleRuleData",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidRuleData",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuard__ReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a5538038062002a55833981016040819052620000349162000127565b6200003e6200007f565b7fc9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf80080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b6128ec80620001696000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063679b75cc1161005b578063679b75cc146100d357806368ab7dd6146100f45780636fe674111461011457806392c399ff1461012757600080fd5b8063069a3ee914610082578063375e3bbc146100ab5780634739e805146100c0575b600080fd5b61009561009036600461182d565b61013a565b6040516100a29190611940565b60405180910390f35b6100be6100b93660046119f8565b6103ff565b005b6100be6100ce366004611a22565b610455565b6100e66100e1366004611a5b565b6104f9565b6040519081526020016100a2565b61010761010236600461182d565b610560565b6040516100a29190611bcd565b610107610122366004611c66565b610819565b610095610135366004611c66565b610847565b61015e60405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909391928492849190879085015b828210156101fb57600084815260209020604080518082019091529083018054829060ff1660028111156101c8576101c8611846565b60028111156101d9576101d9611846565b81529054610100900460ff166020918201529082526001929092019101610192565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610339576000848152602090206040805160808101909152600484029091018054829060ff16600581111561026357610263611846565b600581111561027457610274611846565b81526001820154602082015260028201546001600160a01b031660408201526003820180546060909201916102a890611c88565b80601f01602080910402602001604051908101604052809291908181526020018280546102d490611c88565b80156103215780601f106102f657610100808354040283529160200191610321565b820191906000526020600020905b81548152906001019060200180831161030457829003601f168201915b50505050508152505081526020019060010190610228565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156103e55760008481526020902060408051606081019091529083018054829060ff16600281111561039d5761039d611846565b60028111156103ae576103ae611846565b8152905460ff6101008204811660208085019190915262010000909204166040909201919091529082526001929092019101610366565b505050508152505090506103f88161088a565b9392505050565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff1661044957604051630ef4733760e31b815260040160405180910390fd5b61045281610d38565b50565b60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a00540361049757604051635db5c7cd60e11b815260040160405180910390fd5b6104c060027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b6104cb838383610d73565b6104f460017f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b505050565b6000828152602081905260408120829061051382826121e4565b50506040516bffffffffffffffffffffffff193260601b1660208201524360348201526000906054016040516020818303038152906040528051906020012090506103f88130600061100c565b61058460405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b8282101561062157600084815260209020604080518082019091529083018054829060ff1660028111156105ee576105ee611846565b60028111156105ff576105ff611846565b81529054610100900460ff1660209182015290825260019290920191016105b8565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b8282101561075f576000848152602090206040805160808101909152600484029091018054829060ff16600581111561068957610689611846565b600581111561069a5761069a611846565b81526001820154602082015260028201546001600160a01b031660408201526003820180546060909201916106ce90611c88565b80601f01602080910402602001604051908101604052809291908181526020018280546106fa90611c88565b80156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050815250508152602001906001019061064e565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561080b5760008481526020902060408051606081019091529083018054829060ff1660028111156107c3576107c3611846565b60028111156107d4576107d4611846565b8152905460ff610100820481166020808501919091526201000090920416604090920191909152908252600192909201910161078c565b505050915250909392505050565b61083d60405180606001604052806060815260200160608152602001606081525090565b6103f883836112bb565b61086b60405180606001604052806060815260200160608152602001606081525090565b600061087784846112bb565b90506108828161088a565b949350505050565b6108ae60405180606001604052806060815260200160608152602001606081525090565b6108d260405180606001604052806060815260200160608152602001606081525090565b8251516001600160401b038111156108ec576108ec611cc2565b60405190808252806020026020018201604052801561093157816020015b604080518082019091526000808252602082015281526020019060019003908161090a5790505b5081526020830151516001600160401b0381111561095157610951611cc2565b6040519080825280602002602001820160405280156109a357816020015b60408051608081018252600080825260208083018290529282018190526060820152825260001990920191018161096f5790505b5060208201526040830151516001600160401b038111156109c6576109c6611cc2565b604051908082528060200260200182016040528015610a1157816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816109e45790505b50604082015260005b836020015151811015610ba257600084602001518281518110610a3f57610a3f6122e1565b60200260200101519050610a7e604080516080810190915280600081526020016000815260200160006001600160a01b03168152602001600081525090565b8151610a89906113b5565b81906005811115610a9c57610a9c611846565b90816005811115610aaf57610aaf611846565b905250602080830151908201526040808301516001600160a01b031690820152600382516005811115610ae457610ae4611846565b03610b0f5760008260600151806020019051810190610b0391906123d4565b51606083015250610b76565b600282516005811115610b2457610b24611846565b03610b435760008260600151806020019051810190610b0391906123d4565b600482516005811115610b5857610b58611846565b03610b765760405163089f2a9160e31b815260040160405180910390fd5b8084602001518481518110610b8d57610b8d6122e1565b60209081029190910101525050600101610a1a565b5060005b835151811015610c5957600084600001518281518110610bc857610bc86122e1565b60200260200101519050610bec604080518082019091526000808252602082015290565b8151610bf790611496565b81906002811115610c0a57610c0a611846565b90816002811115610c1d57610c1d611846565b90525060208083015160ff16908201528351805182919085908110610c4457610c446122e1565b60209081029190910101525050600101610ba6565b5060005b836040015151811015610d3157600084604001518281518110610c8257610c826122e1565b60200260200101519050610cb16040805160608101909152806000815260006020820181905260409091015290565b8151610cbc906114ee565b81906002811115610ccf57610ccf611846565b90816002811115610ce257610ce2611846565b90525060208083015160ff9081169183019190915260408084015190911681830152840151805182919085908110610d1c57610d1c6122e1565b60209081029190910101525050600101610c5d565b5092915050565b610d4863ba1c05eb60e01b611532565b6000805160206128cc83398151915280546001600160a01b0319166001600160a01b03831617905550565b60008381526000805160206128ac8339815191526020526040902080546000805160206128cc833981519152919061010090046001600160a01b03161580610dbd5750805460ff16155b15610ddb57604051637ad5a43960e11b815260040160405180910390fd5b600084815260028201602052604090205460ff1615610e0d57604051637912b73960e01b815260040160405180910390fd5b600084815260018201602052604081205481908190815b81811015610f4b5760008981526001870160205260408120805483908110610e4e57610e4e6122e1565b60009182526020909120018054909150336001600160a01b0390911603610eda5760008154600160a01b900460ff166002811115610e8e57610e8e611846565b14610eac576040516347592a4d60e01b815260040160405180910390fd5b80548990829060ff60a01b1916600160a01b836002811115610ed057610ed0611846565b0217905550600195505b60018154600160a01b900460ff166002811115610ef957610ef9611846565b03610f105784610f08816123f0565b955050610f42565b60028154600160a01b900460ff166002811115610f2f57610f2f611846565b03610f425783610f3e816123f0565b9450505b50600101610e24565b5083610f6a57604051638223a7e960e01b815260040160405180910390fd5b610f75600282612409565b831180610f8b5750610f88600282612409565b82115b156110015760008881526002860160205260408120805460ff19166001179055828411610fb9576002610fbc565b60015b9050897fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c63382604051610fee919061242b565b60405180910390a2610fff8a611614565b505b505050505050505050565b60008381526000805160206128ac8339815191526020526040902080546000805160206128cc833981519152919060ff16151560010361109e5760005b600482015481101561109c578382600401828154811061106b5761106b6122e1565b906000526020600020015403611094576040516301ab53df60e31b815260040160405180910390fd5b600101611049565b505b81546001600160a01b03166110b5576110b56116e8565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa1580156110fe573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526111269190810190612461565b825490915060ff166111675781546003830180546001600160a01b0319166001600160a01b0388161790556001600160a81b03191661010033021760011782555b600482018054600181018255600091825260208220018590555b81518110156112575782600101600086815260200190815260200160002060405180604001604052808484815181106111bc576111bc6122e1565b60200260200101516001600160a01b03168152602001600060028111156111e5576111e5611846565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b83600281111561124857611248611846565b02179055505050600101611181565b50825460405163541da4e560e01b81526001600160a01b039091169063541da4e59061128d9033908a90899087906004016124f4565b600060405180830381600087803b1580156112a757600080fd5b505af1158015610fff573d6000803e3d6000fd5b6112df60405180606001604052806060815260200160608152602001606081525090565b60008381526000805160206128ac8339815191526020526040812080546000805160206128cc8339815191529260ff9091161515900361133257604051637ad5a43960e11b815260040160405180910390fd5b6003810154604051633455beeb60e11b8152600481018690526001600160a01b039091169060009082906368ab7dd690602401600060405180830381865afa158015611382573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526113aa919081019061274f565b979650505050505050565b600060038260058111156113cb576113cb611846565b036113d857506003919050565b60028260058111156113ec576113ec611846565b036113f957506002919050565b600482600581111561140d5761140d611846565b0361141a57506004919050565b600582600581111561142e5761142e611846565b0361143b57506005919050565b600182600581111561144f5761144f611846565b0361145c57506001919050565b600082600581111561147057611470611846565b0361147d57506000919050565b6040516313b423f960e01b815260040160405180910390fd5b600060018260028111156114ac576114ac611846565b036114b957506001919050565b60028260028111156114cd576114cd611846565b036114da57506002919050565b600082600281111561147057611470611846565b6000600182600281111561150457611504611846565b0361151157506001919050565b600282600281111561152557611525611846565b0361147d57506002919050565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff1615156001146115bf576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff191660011790556115d8565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b5050565b60008181526000805160206128ac833981519152602052604081206000805160206128cc833981519152915b600482015481101561169457816001016000836004018381548110611667576116676122e1565b90600052602060002001548152602001908152602001600020600061168c91906117b9565b600101611640565b506116a36004820160006117d7565b6000838152600183016020526040812080546001600160a81b03191681556003810180546001600160a01b0319169055906116e160048301826117d7565b5050505050565b60006000805160206128cc833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa158015611776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179a919061288e565b82546001600160a01b0319166001600160a01b03919091161790915550565b508054600082559060005260206000209081019061045291906117f5565b50805460008255906000526020600020908101906104529190611818565b5b808211156118145780546001600160a81b03191681556001016117f6565b5090565b5b808211156118145760008155600101611819565b60006020828403121561183f57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061045257610452611846565b6006811061045257610452611846565b60008151808452602080850194506020840160005b838110156118df57815180516118a68161186c565b885280840151848901526040808201516001600160a01b0316908901526060908101519088015260809096019590820190600101611891565b509495945050505050565b60008151808452602080850194506020840160005b838110156118df57815180516119148161185c565b88528084015160ff908116858a01526040918201511690880152606090960195908201906001016118ff565b6020808252825160608383015280516080840181905260009291820190839060a08601905b8083101561199c578351805161197a8161185c565b835285015160ff16858301529284019260019290920191604090910190611965565b50838701519350601f199250828682030160408701526119bc818561187c565b935050506040850151818584030160608601526119d983826118ea565b9695505050505050565b6001600160a01b038116811461045257600080fd5b600060208284031215611a0a57600080fd5b81356103f8816119e3565b6003811061045257600080fd5b600080600060608486031215611a3757600080fd5b83359250602084013591506040840135611a5081611a15565b809150509250925092565b60008060408385031215611a6e57600080fd5b8235915060208301356001600160401b03811115611a8b57600080fd5b830160608186031215611a9d57600080fd5b809150509250929050565b60005b83811015611ac3578181015183820152602001611aab565b50506000910152565b600082825180855260208086019550808260051b84010181860160005b84811015611b6a57601f1980878503018a52825160808151611b0a8161186c565b865281870151878701526040808301516001600160a01b031690870152606091820151918601819052815190860181905260a090611b4d81838901858b01611aa8565b9b87019b601f019092169490940101925090830190600101611ae9565b5090979650505050505050565b60008151808452602080850194506020840160005b838110156118df5781518051611ba18161185c565b88528084015160ff908116858a0152604091820151169088015260609096019590820190600101611b8c565b6020808252825160608383015280516080840181905260009291820190839060a08601905b80831015611c295783518051611c078161185c565b835285015160ff16858301529284019260019290920191604090910190611bf2565b50838701519350601f19925082868203016040870152611c498185611acc565b935050506040850151818584030160608601526119d98382611b77565b60008060408385031215611c7957600080fd5b50508035926020909101359150565b600181811c90821680611c9c57607f821691505b602082108103611cbc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60ff8116811461045257600080fd5b8135611d0881611a15565b611d118161185c565b60ff1982541660ff82168117835550506020820135611d2f81611cee565b815461ff001916600882901b61ff0016178255505050565b6000808335601e19843603018112611d5e57600080fd5b8301803591506001600160401b03821115611d7857600080fd5b6020019150600581901b3603821315611d9057600080fd5b9250929050565b60008235607e19833603018112611dad57600080fd5b9190910192915050565b5b818110156116105760008155600101611db8565b6006811061045257600080fd5b601f8211156104f457806000526020600020601f840160051c81016020851015611e005750805b6116e1601f850160051c830182611db7565b6001600160401b03831115611e2957611e29611cc2565b611e3d83611e378354611c88565b83611dd9565b6000601f841160018114611e715760008515611e595750838201355b600019600387901b1c1916600186901b1783556116e1565b600083815260209020601f19861690835b82811015611ea25786850135825560209485019460019092019101611e82565b5086821015611ebf5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b8135611edc81611dcc565b611ee58161186c565b60ff1982541660ff821681178355505060208201356001820155600281016040830135611f11816119e3565b81546001600160a01b0319166001600160a01b0391909116179055606082013536839003601e19018112611f4457600080fd5b820180356001600160401b03811115611f5c57600080fd5b602082019150803603821315611f7157600080fd5b611f7f818360038601611e12565b50505050565b600160401b831115611f9957611f99611cc2565b80548382558084101561206c5760026001600160fe1b038281168314611fc157611fc1611cd8565b8086168614611fd257611fd2611cd8565b506000838152602081208360021b81018760021b820191505b8082101561206757828255600183818401558385840155600383016120108154611c88565b801561205957601f8082116001811461202b57878455612056565b60008481526020902061204783850160051c8201878301611db7565b50600084815260208120818655555b50505b505050600482019150611feb565b505050505b5060008181526020812083915b858110156120aa5761209461208e8487611d97565b83611ed1565b6020929092019160049190910190600101612079565b505050505050565b6000808335601e198436030181126120c957600080fd5b8301803591506001600160401b038211156120e357600080fd5b6020019150606081023603821315611d9057600080fd5b813561210581611a15565b61210e8161185c565b60ff1982541660ff8216811783555050602082013561212c81611cee565b815461ff001916600882901b61ff001617825550604082013561214e81611cee565b815462ff0000191660109190911b62ff00001617905550565b600160401b83111561217b5761217b611cc2565b8054838255808410156121b2576000828152602081208581019083015b808210156121ae57828255600182019150612198565b5050505b5060008181526020812083915b858110156120aa576121d183836120fa565b60609290920191600191820191016121bf565b8135601e198336030181126121f857600080fd5b820180356001600160401b0381111561221057600080fd5b6020820191508060061b360382131561222857600080fd5b600160401b81111561223c5761223c611cc2565b825481845580821015612273576000848152602081208381019083015b8082101561226f57828255600182019150612259565b5050505b5060008381526020902060005b828110156122a5576122928483611cfd565b6040939093019260019182019101612280565b505050506122b66020830183611d47565b6122c4818360018601611f85565b50506122d360408301836120b2565b611f7f818360028601612167565b634e487b7160e01b600052603260045260246000fd5b604051608081016001600160401b038111828210171561231957612319611cc2565b60405290565b604051606081016001600160401b038111828210171561231957612319611cc2565b604080519081016001600160401b038111828210171561231957612319611cc2565b604051601f8201601f191681016001600160401b038111828210171561238b5761238b611cc2565b604052919050565b6000602082840312156123a557600080fd5b604051602081018181106001600160401b03821117156123c7576123c7611cc2565b6040529151825250919050565b6000602082840312156123e657600080fd5b6103f88383612393565b60006001820161240257612402611cd8565b5060010190565b60008261242657634e487b7160e01b600052601260045260246000fd5b500490565b602081016124388361185c565b91905290565b60006001600160401b0382111561245757612457611cc2565b5060051b60200190565b6000602080838503121561247457600080fd5b82516001600160401b0381111561248a57600080fd5b8301601f8101851361249b57600080fd5b80516124ae6124a98261243e565b612363565b81815260059190911b820183019083810190878311156124cd57600080fd5b928401925b828410156113aa5783516124e5816119e3565b825292840192908401906124d2565b60006080820160018060a01b03808816845260208760208601528660408601526080606086015282865180855260a08701915060208801945060005b8181101561254e578551851683529483019491830191600101612530565b50909a9950505050505050505050565b6000601f83601f84011261257157600080fd5b825160206125816124a98361243e565b82815260059290921b850181019181810190878411156125a057600080fd5b8287015b848110156126a15780516001600160401b03808211156125c45760008081fd5b908901906080601f19838d0381018213156125df5760008081fd5b6125e76122f7565b888501516125f481611dcc565b81526040858101518a83015260608087015161260f816119e3565b838301529386015193858511156126265760008081fd5b84870196508f603f88011261263d57600094508485fd5b8a87015194508585111561265357612653611cc2565b6126628b858f88011601612363565b95508486528f8286890101111561267b57600093508384fd5b61268a858c8801848a01611aa8565b8201949094528752505050928401925083016125a4565b50979650505050505050565b600082601f8301126126be57600080fd5b815160206126ce6124a98361243e565b828152606092830285018201928282019190878511156126ed57600080fd5b8387015b85811015611b6a5781818a0312156127095760008081fd5b61271161231f565b815161271c81611a15565b81528186015161272b81611cee565b8187015260408281015161273e81611cee565b9082015284529284019281016126f1565b6000602080838503121561276257600080fd5b82516001600160401b038082111561277957600080fd5b908401906060828703121561278d57600080fd5b61279561231f565b8251828111156127a457600080fd5b8301601f810188136127b557600080fd5b80516127c36124a98261243e565b81815260069190911b8201860190868101908a8311156127e257600080fd5b928701925b82841015612838576040848c0312156128005760008081fd5b612808612341565b845161281381611a15565b81528489015161282281611cee565b818a0152825260409390930192908701906127e7565b8452505050828401518281111561284e57600080fd5b61285a8882860161255e565b8583015250604083015193508184111561287357600080fd5b61287f878585016126ad565b60408201529695505050505050565b6000602082840312156128a057600080fd5b81516103f8816119e356fec9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf801c9f85609eb60ac71988cfb4c314695ea9c394b99f001405aaba56d724f4cf800";

type MockEntitlementGatedV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGatedV2__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGatedV2> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGatedV2>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGatedV2 {
    return super.attach(address) as MockEntitlementGatedV2;
  }
  override connect(signer: Signer): MockEntitlementGatedV2__factory {
    return super.connect(signer) as MockEntitlementGatedV2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedV2Interface {
    return new utils.Interface(_abi) as MockEntitlementGatedV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGatedV2 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGatedV2;
  }
}
