/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGated,
  MockEntitlementGatedInterface,
} from "../MockEntitlementGated";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGated_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCrossChainEntitlementData",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEntitlementDataQueryableBase.EntitlementData",
        components: [
          {
            name: "entitlementType",
            type: "string",
            internalType: "string",
          },
          {
            name: "entitlementData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV2",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuard__ReentrantCall",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620029d7380380620029d7833981016040819052620000349162000127565b6200003e6200007f565b7f9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e0080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b61286e80620001696000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806368ab7dd61161005b57806368ab7dd61461010c5780637adc9cbe1461012c57806383f1cfa51461013f57806392c399ff1461015257600080fd5b8063069a3ee91461008d5780630fe44a21146100b65780634739e805146100d657806357e70027146100eb575b600080fd5b6100a061009b3660046113a7565b610165565b6040516100ad91906114a3565b60405180910390f35b6100c96100c4366004611560565b610398565b6040516100ad91906115c8565b6100e96100e4366004611617565b61047b565b005b6100fe6100f9366004611668565b61051f565b6040519081526020016100ad565b61011f61011a3660046113a7565b61058c565b6040516100ad91906116ae565b6100e961013a36600461179c565b610839565b6100fe61014d36600461188e565b61088f565b6100a0610160366004611560565b61095f565b61018960405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b8282101561022657600084815260209020604080518082019091529083018054829060ff1660028111156101f3576101f36113c0565b6002811115610204576102046113c0565b81529054610100900460ff1660209182015290825260019290920191016101bd565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156102de576000848152602090206040805160808101909152600484029091018054829060ff16600681111561028e5761028e6113c0565b600681111561029f5761029f6113c0565b815260018281015460208084019190915260028401546001600160a01b0316604084015260039093015460609092019190915291835292019101610253565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561038a5760008481526020902060408051606081019091529083018054829060ff166002811115610342576103426113c0565b6002811115610353576103536113c0565b8152905460ff610100820481166020808501919091526201000090920416604090920191909152908252600192909201910161030b565b505050915250909392505050565b6040805180820190915260608082526020820152600082815260208190526040902054156104255760408051608081018252600f8183019081526e149d5b19515b9d1a5d1b195b595b9d608a1b606083015281526000848152602081815290839020925191928184019261040c92016119ef565b6040516020818303038152906040528152509050610475565b60408051608081018252601181830190815270293ab632a2b73a34ba3632b6b2b73a2b1960791b6060830152815260008481526001602090815290839020925191928184019261040c9201611ae5565b92915050565b60027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0054036104bd57604051635db5c7cd60e11b815260040160405180910390fd5b6104e660027f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b6104f183838361098d565b61051a60017f54f22f54f370bd020e00ee80e1a5099a71652e2ccbcf6a75281e4c70a3e11a0055565b505050565b600082815260208190526040812082906105398282611fbf565b50506040516bffffffffffffffffffffffff193260601b166020820152436034820152600090605401604051602081830303815290604052805190602001209050610585813086610c3a565b9392505050565b6105b060405180606001604052806060815260200160608152602001606081525090565b60008281526001602090815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b8282101561064f57600084815260209020604080518082019091529083018054829060ff16600281111561061c5761061c6113c0565b600281111561062d5761062d6113c0565b81529054610100900460ff1660209182015290825260019290920191016105e6565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b8282101561078d576000848152602090206040805160808101909152600484029091018054829060ff1660068111156106b7576106b76113c0565b60068111156106c8576106c86113c0565b81526001820154602082015260028201546001600160a01b031660408201526003820180546060909201916106fc90611ab1565b80601f016020809104026020016040519081016040528092919081815260200182805461072890611ab1565b80156107755780601f1061074a57610100808354040283529160200191610775565b820191906000526020600020905b81548152906001019060200180831161075857829003601f168201915b5050505050815250508152602001906001019061067c565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561038a5760008481526020902060408051606081019091529083018054829060ff1660028111156107f1576107f16113c0565b6002811115610802576108026113c0565b8152905460ff61010082048116602080850191909152620100009092041660409092019190915290825260019290920191016107ba565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff1661088357604051630ef4733760e31b815260040160405180910390fd5b61088c81610eea565b50565b6000805b83518110156108df5782600160008684815181106108b3576108b3612088565b6020026020010151815260200190815260200160002081816108d59190612394565b5050600101610893565b506040516bffffffffffffffffffffffff193260601b16602082015243603482015260009060540160405160208183030381529060405280519060200120905060005b84518110156109575761094f823087848151811061094257610942612088565b6020026020010151610c3a565b600101610922565b509392505050565b61098360405180606001604052806060815260200160608152602001606081525090565b6105858383610f25565b600083815260008051602061284e83398151915260205260409020805460008051602061282e833981519152919061010090046001600160a01b031615806109d75750805460ff16155b156109f557604051637ad5a43960e11b815260040160405180910390fd5b600084815260028201602052604090205460ff1615610a2757604051637912b73960e01b815260040160405180910390fd5b60008481526001820160205260408120805482918291825b81811015610b41576000838281548110610a5b57610a5b612088565b60009182526020909120018054909150336001600160a01b0390911603610ae75760008154600160a01b900460ff166002811115610a9b57610a9b6113c0565b14610ab9576040516347592a4d60e01b815260040160405180910390fd5b80548a90829060ff60a01b1916600160a01b836002811115610add57610add6113c0565b0217905550600196505b8054600160a01b900460ff166001816002811115610b0757610b076113c0565b03610b1757866001019650610b37565b6002816002811115610b2b57610b2b6113c0565b03610b37578560010195505b5050600101610a3f565b5084610b6057604051638223a7e960e01b815260040160405180910390fd5b610b6b60028261243a565b841180610b815750610b7e60028261243a565b83115b15610c2e5760008981526002870160205260408120805460ff19166001179055838511610baf576002610bb2565b60015b90506000610bbf8c611016565b90506001826002811115610bd557610bd56113c0565b1480610bde5750805b15610c1c578b7fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c63383604051610c13919061245c565b60405180910390a25b8015610c2b57610c2b8c6110b3565b50505b50505050505050505050565b600083815260008051602061284e83398151915260205260409020805460008051602061282e833981519152919060ff1615610cca57600481015460005b81811015610cc75784836004018281548110610c9657610c96612088565b906000526020600020015403610cbf576040516301ab53df60e31b815260040160405180910390fd5b600101610c78565b50505b81546001600160a01b0316610ce157610ce1611189565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa158015610d2a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d52919081019061246f565b825490915060ff16610d935781546003830180546001600160a01b0319166001600160a01b0388161790556001600160a81b03191661010033021760011782555b600482018054600181810183556000928352602080842090920187905583518784529085019091526040822090915b82811015610e8657816040518060400160405280868481518110610de857610de8612088565b60200260200101516001600160a01b0316815260200160006002811115610e1157610e116113c0565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b836002811115610e7457610e746113c0565b02179055505050806001019050610dc2565b50845460405163541da4e560e01b81526001600160a01b039091169063541da4e590610ebc9033908c908b908990600401612508565b600060405180830381600087803b158015610ed657600080fd5b505af1158015610c2b573d6000803e3d6000fd5b610efa636afd38fd60e11b61125a565b60008051602061282e83398151915280546001600160a01b0319166001600160a01b03831617905550565b610f4960405180606001604052806060815260200160608152602001606081525090565b600083815260008051602061284e83398151915260205260409020805460008051602061282e833981519152919060ff16610f9757604051637ad5a43960e11b815260040160405180910390fd5b600381015460405163069a3ee960e01b8152600481018690526001600160a01b0390911690819063069a3ee990602401600060405180830381865afa158015610fe4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261100c91908101906126d1565b9695505050505050565b600081815260008051602061284e83398151915260205260408120600481015460008051602061282e8339815191529190835b818110156110a35782600201600084600401838154811061106c5761106c612088565b6000918252602080832090910154835282019290925260400190205460ff1661109b5750600095945050505050565b600101611049565b50600195945050505050565b5050565b600081815260008051602061284e83398151915260205260408120600481015460008051602061282e833981519152925b818110156111345782600101600084600401838154811061110757611107612088565b90600052602060002001548152602001908152602001600020600061112c9190611333565b6001016110e4565b50611143600483016000611351565b6000848152600184016020526040812080546001600160a81b03191681556003810180546001600160a01b0319169055906111816004830182611351565b505050505050565b600060008051602061282e833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa158015611217573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061123b9190612810565b82546001600160a01b0319166001600160a01b03919091161790915550565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff166112e2576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff191660011790556112fb565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b508054600082559060005260206000209081019061088c919061136f565b508054600082559060005260206000209081019061088c9190611392565b5b8082111561138e5780546001600160a81b0319168155600101611370565b5090565b5b8082111561138e5760008155600101611393565b6000602082840312156113b957600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b6003811061088c5761088c6113c0565b60008151808452602080850194506020840160005b8381101561142e5781518051611410816113d6565b885283015160ff1683880152604090960195908201906001016113fb565b509495945050505050565b60078110611449576114496113c0565b9052565b60008151808452602080850194506020840160005b8381101561142e5781518051611477816113d6565b88528084015160ff908116858a0152604091820151169088015260609096019590820190600101611462565b6000602080835260808451606080848701526114c260808701836113e6565b915083870151601f196040818986030160408a015284835180875288870191508885019650600094505b80851015611535578651611501838251611439565b808a0151838b0152838101516001600160a01b031684840152860151868301529588019560019490940193908701906114ec565b5060408b01519750828a82030160608b0152611551818961144d565b9b9a5050505050505050505050565b6000806040838503121561157357600080fd5b50508035926020909101359150565b6000815180845260005b818110156115a85760208185018101518683018201520161158c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251604060208401526115e46060840182611582565b90506020840151601f198483030160408501526116018282611582565b95945050505050565b6003811061088c57600080fd5b60008060006060848603121561162c57600080fd5b833592506020840135915060408401356116458161160a565b809150509250925092565b60006060828403121561166257600080fd5b50919050565b6000806040838503121561167b57600080fd5b8235915060208301356001600160401b0381111561169857600080fd5b6116a485828601611650565b9150509250929050565b6000602080835260808451606080848701526116cd60808701836113e6565b915083870151601f196040818986030160408a01528483518087528887019150888160051b880101898601955060005b8281101561175a57858983030184528651611719838251611439565b808c0151838d0152858101516001600160a01b0316868401528801518883018b90526117478b840182611582565b978c0197948c01949250506001016116fd565b5060408d01519950848c82030160608d0152611776818b61144d565b9d9c50505050505050505050505050565b6001600160a01b038116811461088c57600080fd5b6000602082840312156117ae57600080fd5b813561058581611787565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156117f1576117f16117b9565b60405290565b604051606081016001600160401b03811182821017156117f1576117f16117b9565b604080519081016001600160401b03811182821017156117f1576117f16117b9565b604051601f8201601f191681016001600160401b0381118282101715611863576118636117b9565b604052919050565b60006001600160401b03821115611884576118846117b9565b5060051b60200190565b600080604083850312156118a157600080fd5b82356001600160401b03808211156118b857600080fd5b818501915085601f8301126118cc57600080fd5b813560206118e16118dc8361186b565b61183b565b82815260059290921b8401810191818101908984111561190057600080fd5b948201945b8386101561191e57853582529482019490820190611905565b9650508601359250508082111561193457600080fd5b506116a485828601611650565b600081548084526020808501945083600052602060002060005b8381101561142e57815460ff808216611973816113d6565b895260089190911c16838801526040909601956001918201910161195b565b600081548084526020808501945083600052602060002060005b8381101561142e57815460ff8082166119c4816113d6565b8952600882901c8116858a015260109190911c166040880152606090960195600191820191016119ac565b6000602080835260806060806020860152611a0d6080860187611941565b6001808801601f196040818a86030160408b01528483548087526020870191508460005260206000209650600094505b80851015611a8957611a538260ff895416611439565b86860154828b015260028701546001600160a01b0316838301526003870154888301526004909601959385019390880190611a3d565b50828b82030160608c0152611aa18160028e01611992565b9c9b505050505050505050505050565b600181811c90821680611ac557607f821691505b60208210810361166257634e487b7160e01b600052602260045260246000fd5b60006020808352606081840152611aff6080840185611941565b60018501601f19808684030160408701528282548085528585019150858160051b86010160008581528781209550805b83811015611c035785888403018552611b4c8360ff895416611439565b6001870154838a015260028701546001600160a01b03166040840152608060608401526003870180548390611b8081611ab1565b8060808801526001821660008114611b9f5760018114611bbb57611bea565b60ff19831660a089015260a082151560051b8901019350611bea565b8487528d8720875b83811015611be15781548a820160a001526001909101908f01611bc3565b890160a0019450505b50505060049890980197958a0195935050600101611b2f565b5050838982030160608a0152611c1c8160028c01611992565b9a9950505050505050505050565b6000808335601e19843603018112611c4157600080fd5b8301803591506001600160401b03821115611c5b57600080fd5b6020019150600681901b3603821315611c7357600080fd5b9250929050565b600281901b6001600160fe1b0382168214611ca557634e487b7160e01b600052601160045260246000fd5b919050565b60ff8116811461088c57600080fd5b8135611cc48161160a565b611ccd816113d6565b60ff1982541660ff82168117835550506020820135611ceb81611caa565b815461ff001916600882901b61ff0016178255505050565b6000808335601e19843603018112611d1a57600080fd5b8301803591506001600160401b03821115611d3457600080fd5b6020019150600781901b3603821315611c7357600080fd5b6007811061088c57600080fd5b60078210611d6957611d696113c0565b60ff1981541660ff831681178255505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135611da781611d4c565b611db18183611d59565b50602082013560018201556040820135611dca81611787565b611dd78160028401611d7c565b50606082013560038201555050565b600160401b831115611dfa57611dfa6117b9565b805483825580841015611e5857611e1081611c7a565b611e1985611c7a565b6000848152602081209283019291909101905b82821015611e5457808255806001830155806002830155806003830155600482019150611e2c565b5050505b5060008181526020812083915b8581101561118157611e778383611d9c565b6080929092019160049190910190600101611e65565b6000808335601e19843603018112611ea457600080fd5b8301803591506001600160401b03821115611ebe57600080fd5b6020019150606081023603821315611c7357600080fd5b8135611ee08161160a565b611ee9816113d6565b60ff1982541660ff82168117835550506020820135611f0781611caa565b815461ff001916600882901b61ff0016178255506040820135611f2981611caa565b815462ff0000191660109190911b62ff00001617905550565b600160401b831115611f5657611f566117b9565b805483825580841015611f8d576000828152602081208581019083015b80821015611f8957828255600182019150611f73565b5050505b5060008181526020812083915b8581101561118157611fac8383611ed5565b6060929092019160019182019101611f9a565b611fc98283611c2a565b600160401b811115611fdd57611fdd6117b9565b825481845580821015612014576000848152602081208381019083015b8082101561201057828255600182019150611ffa565b5050505b5060008381526020902060005b82811015612046576120338483611cb9565b6040939093019260019182019101612021565b505050506120576020830183611d03565b612065818360018601611de6565b50506120746040830183611e8d565b612082818360028601611f42565b50505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126120b557600080fd5b8301803591506001600160401b038211156120cf57600080fd5b6020019150600581901b3603821315611c7357600080fd5b60008235607e198336030181126120fd57600080fd5b9190910192915050565b5b818110156110af5760008155600101612108565b601f82111561051a57806000526020600020601f840160051c810160208510156121435750805b612155601f850160051c830182612107565b5050505050565b813561216781611d4c565b6121718183611d59565b5060016020808401356001840155604084013561218d81611787565b61219a8160028601611d7c565b50600383016060850135601e198636030181126121b657600080fd5b850180356001600160401b038111156121ce57600080fd5b80360384830113156121df57600080fd5b6121f3816121ed8554611ab1565b8561211c565b6000601f821160018114612229576000831561221157508382018601355b600019600385901b1c1916600184901b178555612284565b600085815260209020601f19841690835b828110156122595786850189013582559388019390890190880161223a565b50848210156122785760001960f88660031b161c198885880101351681555b505060018360011b0185555b505050505050505050565b600160401b8311156122a3576122a36117b9565b805483825580841015612356576122b981611c7a565b6122c285611c7a565b6000848152602081209283019291909101905b828210156123525780825560018181840155816002840155600383016122fb8154611ab1565b801561234457601f8082116001811461231657858455612341565b60008481526020902061233283850160051c8201878301612107565b50600084815260208120818655555b50505b5050506004820191506122d5565b5050505b5060008181526020812083915b858110156111815761237e61237884876120e7565b8361215c565b6020929092019160049190910190600101612363565b61239e8283611c2a565b600160401b8111156123b2576123b26117b9565b8254818455808210156123e9576000848152602081208381019083015b808210156123e5578282556001820191506123cf565b5050505b5060008381526020902060005b8281101561241b576124088483611cb9565b60409390930192600191820191016123f6565b5050505061242c602083018361209e565b61206581836001860161228f565b60008261245757634e487b7160e01b600052601260045260246000fd5b500490565b60208101612469836113d6565b91905290565b6000602080838503121561248257600080fd5b82516001600160401b0381111561249857600080fd5b8301601f810185136124a957600080fd5b80516124b76118dc8261186b565b81815260059190911b820183019083810190878311156124d657600080fd5b928401925b828410156124fd5783516124ee81611787565b825292840192908401906124db565b979650505050505050565b60006080820160018060a01b03808816845260208760208601528660408601526080606086015282865180855260a08701915060208801945060005b81811015612562578551851683529483019491830191600101612544565b50909a9950505050505050505050565b600082601f83011261258357600080fd5b815160206125936118dc8361186b565b82815260079290921b840181019181810190868411156125b257600080fd5b8286015b8481101561261757608081890312156125cf5760008081fd5b6125d76117cf565b81516125e281611d4c565b815281850151858201526040808301516125fb81611787565b90820152606082810151908201528352918301916080016125b6565b509695505050505050565b600082601f83011261263357600080fd5b815160206126436118dc8361186b565b8281526060928302850182019282820191908785111561266257600080fd5b8387015b858110156126c45781818a03121561267e5760008081fd5b6126866117f7565b81516126918161160a565b8152818601516126a081611caa565b818701526040828101516126b381611caa565b908201528452928401928101612666565b5090979650505050505050565b600060208083850312156126e457600080fd5b82516001600160401b03808211156126fb57600080fd5b908401906060828703121561270f57600080fd5b6127176117f7565b82518281111561272657600080fd5b8301601f8101881361273757600080fd5b80516127456118dc8261186b565b81815260069190911b8201860190868101908a83111561276457600080fd5b928701925b828410156127ba576040848c0312156127825760008081fd5b61278a611819565b84516127958161160a565b8152848901516127a481611caa565b818a015282526040939093019290870190612769565b845250505082840151828111156127d057600080fd5b6127dc88828601612572565b858301525060408301519350818411156127f557600080fd5b61280187858501612622565b60408201529695505050505050565b60006020828403121561282257600080fd5b81516105858161178756fe9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e009075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e01";

type MockEntitlementGatedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGated__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGated> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGated>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGated {
    return super.attach(address) as MockEntitlementGated;
  }
  override connect(signer: Signer): MockEntitlementGated__factory {
    return super.connect(signer) as MockEntitlementGated__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedInterface {
    return new utils.Interface(_abi) as MockEntitlementGatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGated {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGated;
  }
}
