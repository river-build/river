/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGated,
  MockEntitlementGatedInterface,
} from "../MockEntitlementGated";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGated_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCrossChainEntitlementData",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEntitlementDataQueryableBase.EntitlementData",
        components: [
          {
            name: "entitlementType",
            type: "string",
            internalType: "string",
          },
          {
            name: "entitlementData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "postEntitlementCheckResultV2",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV2",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV3",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidEntitlement",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_OnlyEntitlementChecker",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_RequestIdNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002cf738038062002cf7833981016040819052620000349162000127565b6200003e6200007f565b7f9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e0080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b612b8e80620001696000396000f3fe6080604052600436106100915760003560e01c80637adc9cbe116100595780637adc9cbe1461017657806383f1cfa51461019657806392c399ff146101b6578063a0d7fb80146101d6578063e58690f2146101e957600080fd5b8063069a3ee9146100965780630fe44a21146100cc5780634739e805146100f957806357e700271461011b57806368ab7dd614610149575b600080fd5b3480156100a257600080fd5b506100b66100b13660046116bf565b6101fc565b6040516100c391906117bb565b60405180910390f35b3480156100d857600080fd5b506100ec6100e7366004611878565b61042f565b6040516100c391906118e0565b34801561010557600080fd5b5061011961011436600461192f565b610512565b005b34801561012757600080fd5b5061013b610136366004611980565b610559565b6040519081526020016100c3565b34801561015557600080fd5b506101696101643660046116bf565b6105b6565b6040516100c391906119c6565b34801561018257600080fd5b50610119610191366004611ab4565b610863565b3480156101a257600080fd5b5061013b6101b1366004611ad1565b6108b9565b3480156101c257600080fd5b506100b66101d1366004611878565b610975565b61013b6101e4366004611ad1565b6109a3565b6101196101f736600461192f565b610a56565b61022060405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b828210156102bd57600084815260209020604080518082019091529083018054829060ff16600281111561028a5761028a6116d8565b600281111561029b5761029b6116d8565b81529054610100900460ff166020918201529082526001929092019101610254565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610375576000848152602090206040805160808101909152600484029091018054829060ff166006811115610325576103256116d8565b6006811115610336576103366116d8565b815260018281015460208084019190915260028401546001600160a01b03166040840152600390930154606090920191909152918352920191016102ea565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156104215760008481526020902060408051606081019091529083018054829060ff1660028111156103d9576103d96116d8565b60028111156103ea576103ea6116d8565b8152905460ff61010082048116602080850191909152620100009092041660409092019190915290825260019290920191016103a2565b505050915250909392505050565b6040805180820190915260608082526020820152600082815260208190526040902054156104bc5760408051608081018252600f8183019081526e149d5b19515b9d1a5d1b195b595b9d608a1b60608301528152600084815260208181529083902092519192818401926104a39201611c15565b604051602081830303815290604052815250905061050c565b60408051608081018252601181830190815270293ab632a2b73a34ba3632b6b2b73a2b1960791b606083015281526000848152600160209081529083902092519192818401926104a39201611d0b565b92915050565b3068929eee149b4bd2126854036105315763ab143c066000526004601cfd5b3068929eee149b4bd2126855610548838383610abb565b3868929eee149b4bd2126855505050565b600082815260208190526040812082906105738282612200565b9050506000324360405160200161058b9291906122c9565b6040516020818303038152906040528051906020012090506105af33823087610d68565b9392505050565b6105da60405180606001604052806060815260200160608152602001606081525090565b60008281526001602090815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b8282101561067957600084815260209020604080518082019091529083018054829060ff166002811115610646576106466116d8565b6002811115610657576106576116d8565b81529054610100900460ff166020918201529082526001929092019101610610565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156107b7576000848152602090206040805160808101909152600484029091018054829060ff1660068111156106e1576106e16116d8565b60068111156106f2576106f26116d8565b81526001820154602082015260028201546001600160a01b0316604082015260038201805460609092019161072690611cd7565b80601f016020809104026020016040519081016040528092919081815260200182805461075290611cd7565b801561079f5780601f106107745761010080835404028352916020019161079f565b820191906000526020600020905b81548152906001019060200180831161078257829003601f168201915b505050505081525050815260200190600101906106a6565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b828210156104215760008481526020902060408051606081019091529083018054829060ff16600281111561081b5761081b6116d8565b600281111561082c5761082c6116d8565b8152905460ff61010082048116602080850191909152620100009092041660409092019190915290825260019290920191016107e4565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff166108ad57604051630ef4733760e31b815260040160405180910390fd5b6108b68161104f565b50565b6000805b838110156109075782600160008787858181106108dc576108dc6122eb565b90506020020135815260200190815260200160002081816108fd91906125f0565b50506001016108bd565b506000324360405160200161091d9291906122c9565b60405160208183030381529060405280519060200120905060005b8481101561096c57610964338330898986818110610958576109586122eb565b90506020020135610d68565b600101610938565b50949350505050565b61099960405180606001604052806060815260200160608152602001606081525090565b6105af838361108a565b6000805b838110156109f15782600160008787858181106109c6576109c66122eb565b90506020020135815260200190815260200160002081816109e791906125f0565b50506001016109a7565b5060003243604051602001610a079291906122c9565b60405160208183030381529060405280519060200120905060005b8481101561096c57610a4e338330898986818110610a4257610a426122eb565b9050602002013561117b565b600101610a22565b600080516020612b4e833981519152546001600160a01b03163314610a8557610a85630b2395d760e41b611297565b3068929eee149b4bd212685403610aa45763ab143c066000526004601cfd5b3068929eee149b4bd21268556105488383836112a1565b6000838152600080516020612b6e833981519152602052604090208054600080516020612b4e833981519152919061010090046001600160a01b03161580610b055750805460ff16155b15610b2357604051637ad5a43960e11b815260040160405180910390fd5b600084815260028201602052604090205460ff1615610b5557604051637912b73960e01b815260040160405180910390fd5b60008481526001820160205260408120805482918291825b81811015610c6f576000838281548110610b8957610b896122eb565b60009182526020909120018054909150336001600160a01b0390911603610c155760008154600160a01b900460ff166002811115610bc957610bc96116d8565b14610be7576040516347592a4d60e01b815260040160405180910390fd5b80548a90829060ff60a01b1916600160a01b836002811115610c0b57610c0b6116d8565b0217905550600196505b8054600160a01b900460ff166001816002811115610c3557610c356116d8565b03610c4557866001019650610c65565b6002816002811115610c5957610c596116d8565b03610c65578560010195505b5050600101610b6d565b5084610c8e57604051638223a7e960e01b815260040160405180910390fd5b610c99600282612696565b841180610caf5750610cac600282612696565b83115b15610d5c5760008981526002870160205260408120805460ff19166001179055838511610cdd576002610ce0565b60015b90506000610ced8c61132e565b90506001826002811115610d0357610d036116d8565b1480610d0c5750805b15610d4a578b7fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c63383604051610d4191906126b8565b60405180910390a25b8015610d5957610d598c6113cb565b50505b50505050505050505050565b6001600160a01b038416610d8657610d8663133de07160e31b611297565b6000838152600080516020612b6e833981519152602052604090208054600080516020612b4e833981519152919060ff1615610e1657600481015460005b81811015610e135784836004018281548110610de257610de26122eb565b906000526020600020015403610e0b576040516301ab53df60e31b815260040160405180910390fd5b600101610dc4565b50505b81546001600160a01b0316610e2d57610e2d6114a1565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa158015610e76573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e9e919081019061278a565b825490915060ff16610ee95781546003830180546001600160a01b038089166001600160a01b0319909216919091179091558816610100026001600160a81b03199091161760011782555b600482018054600181810183556000928352602080842090920187905583518784529085019091526040822090915b82811015610fdc57816040518060400160405280868481518110610f3e57610f3e6122eb565b60200260200101516001600160a01b0316815260200160006002811115610f6757610f676116d8565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b836002811115610fca57610fca6116d8565b02179055505050806001019050610f18565b50845460405163541da4e560e01b81526001600160a01b039091169063541da4e590611012908c908c908b908990600401612828565b600060405180830381600087803b15801561102c57600080fd5b505af1158015611040573d6000803e3d6000fd5b50505050505050505050505050565b61105f636afd38fd60e11b611572565b600080516020612b4e83398151915280546001600160a01b0319166001600160a01b03831617905550565b6110ae60405180606001604052806060815260200160608152602001606081525090565b6000838152600080516020612b6e833981519152602052604090208054600080516020612b4e833981519152919060ff166110fc57604051637ad5a43960e11b815260040160405180910390fd5b600381015460405163069a3ee960e01b8152600481018690526001600160a01b0390911690819063069a3ee990602401600060405180830381865afa158015611149573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261117191908101906129f1565b9695505050505050565b6001600160a01b0384166111995761119963133de07160e31b611297565b6001600160a01b0382166111b7576111b7634bb7c20560e01b611297565b6000838152600080516020612b6e83398151915260205260409020600080516020612b4e83398151915280549091906001600160a01b03166111fb576111fb6114a1565b8054600160ff199091161781556003810180546001600160a01b0319166001600160a01b03868116919091179091558254604051633a5b134160e11b8152888316600482015260248101889052604481018690529116906374b626829034906064016000604051808303818588803b15801561127657600080fd5b505af115801561128a573d6000803e3d6000fd5b5050505050505050505050565b8060005260046000fd5b6000838152600080516020612b6e833981519152602052604090208054600080516020612b4e833981519152919060ff166112e6576112e6637ad5a43960e11b611297565b847fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c6338460405161131691906126b8565b60405180910390a2611327856113cb565b5050505050565b6000818152600080516020612b6e833981519152602052604081206004810154600080516020612b4e8339815191529190835b818110156113bb57826002016000846004018381548110611384576113846122eb565b6000918252602080832090910154835282019290925260400190205460ff166113b35750600095945050505050565b600101611361565b50600195945050505050565b5050565b6000818152600080516020612b6e833981519152602052604081206004810154600080516020612b4e833981519152925b8181101561144c5782600101600084600401838154811061141f5761141f6122eb565b906000526020600020015481526020019081526020016000206000611444919061164b565b6001016113fc565b5061145b600483016000611669565b6000848152600184016020526040812080546001600160a81b03191681556003810180546001600160a01b0319169055906114996004830182611669565b505050505050565b6000600080516020612b4e833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa15801561152f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115539190612b30565b82546001600160a01b0319166001600160a01b03919091161790915550565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff166115fa576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff19166001179055611613565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b50805460008255906000526020600020908101906108b69190611687565b50805460008255906000526020600020908101906108b691906116aa565b5b808211156116a65780546001600160a81b0319168155600101611688565b5090565b5b808211156116a657600081556001016116ab565b6000602082840312156116d157600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106108b6576108b66116d8565b60008151808452602080850194506020840160005b838110156117465781518051611728816116ee565b885283015160ff168388015260409096019590820190600101611713565b509495945050505050565b60078110611761576117616116d8565b9052565b60008151808452602080850194506020840160005b83811015611746578151805161178f816116ee565b88528084015160ff908116858a015260409182015116908801526060909601959082019060010161177a565b6000602080835260808451606080848701526117da60808701836116fe565b915083870151601f196040818986030160408a015284835180875288870191508885019650600094505b8085101561184d578651611819838251611751565b808a0151838b0152838101516001600160a01b03168484015286015186830152958801956001949094019390870190611804565b5060408b01519750828a82030160608b01526118698189611765565b9b9a5050505050505050505050565b6000806040838503121561188b57600080fd5b50508035926020909101359150565b6000815180845260005b818110156118c0576020818501810151868301820152016118a4565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251604060208401526118fc606084018261189a565b90506020840151601f19848303016040850152611919828261189a565b95945050505050565b600381106108b657600080fd5b60008060006060848603121561194457600080fd5b8335925060208401359150604084013561195d81611922565b809150509250925092565b60006060828403121561197a57600080fd5b50919050565b6000806040838503121561199357600080fd5b8235915060208301356001600160401b038111156119b057600080fd5b6119bc85828601611968565b9150509250929050565b6000602080835260808451606080848701526119e560808701836116fe565b915083870151601f196040818986030160408a01528483518087528887019150888160051b880101898601955060005b82811015611a7257858983030184528651611a31838251611751565b808c0151838d0152858101516001600160a01b0316868401528801518883018b9052611a5f8b84018261189a565b978c0197948c0194925050600101611a15565b5060408d01519950848c82030160608d0152611a8e818b611765565b9d9c50505050505050505050505050565b6001600160a01b03811681146108b657600080fd5b600060208284031215611ac657600080fd5b81356105af81611a9f565b600080600060408486031215611ae657600080fd5b83356001600160401b0380821115611afd57600080fd5b818601915086601f830112611b1157600080fd5b813581811115611b2057600080fd5b8760208260051b8501011115611b3557600080fd5b602092830195509350908501359080821115611b5057600080fd5b50611b5d86828701611968565b9150509250925092565b600081548084526020808501945083600052602060002060005b8381101561174657815460ff808216611b99816116ee565b895260089190911c168388015260409096019560019182019101611b81565b600081548084526020808501945083600052602060002060005b8381101561174657815460ff808216611bea816116ee565b8952600882901c8116858a015260109190911c16604088015260609096019560019182019101611bd2565b6000602080835260806060806020860152611c336080860187611b67565b6001808801601f196040818a86030160408b01528483548087526020870191508460005260206000209650600094505b80851015611caf57611c798260ff895416611751565b86860154828b015260028701546001600160a01b0316838301526003870154888301526004909601959385019390880190611c63565b50828b82030160608c0152611cc78160028e01611bb8565b9c9b505050505050505050505050565b600181811c90821680611ceb57607f821691505b60208210810361197a57634e487b7160e01b600052602260045260246000fd5b60006020808352606081840152611d256080840185611b67565b60018501601f19808684030160408701528282548085528585019150858160051b86010160008581528781209550805b83811015611e295785888403018552611d728360ff895416611751565b6001870154838a015260028701546001600160a01b03166040840152608060608401526003870180548390611da681611cd7565b8060808801526001821660008114611dc55760018114611de157611e10565b60ff19831660a089015260a082151560051b8901019350611e10565b8487528d8720875b83811015611e075781548a820160a001526001909101908f01611de9565b890160a0019450505b50505060049890980197958a0195935050600101611d55565b5050838982030160608a0152611e428160028c01611bb8565b9a9950505050505050505050565b6000808335601e19843603018112611e6757600080fd5b8301803591506001600160401b03821115611e8157600080fd5b6020019150600681901b3603821315611e9957600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600281901b6001600160fe1b0382168214611ee157634e487b7160e01b600052601160045260246000fd5b919050565b60ff811681146108b657600080fd5b8135611f0081611922565b611f09816116ee565b60ff1982541660ff82168117835550506020820135611f2781611ee6565b815461ff001916600882901b61ff0016178255505050565b505050565b6000808335601e19843603018112611f5b57600080fd5b8301803591506001600160401b03821115611f7557600080fd5b6020019150600781901b3603821315611e9957600080fd5b600781106108b657600080fd5b60078210611faa57611faa6116d8565b60ff1981541660ff831681178255505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b8135611fe881611f8d565b611ff28183611f9a565b5060208201356001820155604082013561200b81611a9f565b6120188160028401611fbd565b50606082013560038201555050565b600160401b83111561203b5761203b611ea0565b8054838255808410156120995761205181611eb6565b61205a85611eb6565b6000848152602081209283019291909101905b828210156120955780825580600183015580600283015580600383015560048201915061206d565b5050505b5060008181526020812083915b85811015611499576120b88383611fdd565b60809290920191600491909101906001016120a6565b6000808335601e198436030181126120e557600080fd5b8301803591506001600160401b038211156120ff57600080fd5b6020019150606081023603821315611e9957600080fd5b813561212181611922565b61212a816116ee565b60ff1982541660ff8216811783555050602082013561214881611ee6565b815461ff001916600882901b61ff001617825550604082013561216a81611ee6565b815462ff0000191660109190911b62ff00001617905550565b600160401b83111561219757612197611ea0565b8054838255808410156121ce576000828152602081208581019083015b808210156121ca578282556001820191506121b4565b5050505b5060008181526020812083915b85811015611499576121ed8383612116565b60609290920191600191820191016121db565b61220a8283611e50565b600160401b81111561221e5761221e611ea0565b825481845580821015612255576000848152602081208381019083015b808210156122515782825560018201915061223b565b5050505b5060008381526020902060005b82811015612287576122748483611ef5565b6040939093019260019182019101612262565b505050506122986020830183611f44565b6122a6818360018601612027565b50506122b560408301836120ce565b6122c3818360028601612183565b50505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811261231857600080fd5b8301803591506001600160401b0382111561233257600080fd5b6020019150600581901b3603821315611e9957600080fd5b60008235607e1983360301811261236057600080fd5b9190910192915050565b5b818110156113c7576000815560010161236b565b601f821115611f3f57806000526020600020601f840160051c810160208510156123a65750805b611327601f850160051c83018261236a565b81356123c381611f8d565b6123cd8183611f9a565b506001602080840135600184015560408401356123e981611a9f565b6123f68160028601611fbd565b50600383016060850135601e1986360301811261241257600080fd5b850180356001600160401b0381111561242a57600080fd5b803603848301131561243b57600080fd5b61244f816124498554611cd7565b8561237f565b6000601f821160018114612485576000831561246d57508382018601355b600019600385901b1c1916600184901b1785556124e0565b600085815260209020601f19841690835b828110156124b557868501890135825593880193908901908801612496565b50848210156124d45760001960f88660031b161c198885880101351681555b505060018360011b0185555b505050505050505050565b600160401b8311156124ff576124ff611ea0565b8054838255808410156125b25761251581611eb6565b61251e85611eb6565b6000848152602081209283019291909101905b828210156125ae5780825560018181840155816002840155600383016125578154611cd7565b80156125a057601f808211600181146125725785845561259d565b60008481526020902061258e83850160051c820187830161236a565b50600084815260208120818655555b50505b505050600482019150612531565b5050505b5060008181526020812083915b85811015611499576125da6125d4848761234a565b836123b8565b60209290920191600491909101906001016125bf565b6125fa8283611e50565b600160401b81111561260e5761260e611ea0565b825481845580821015612645576000848152602081208381019083015b808210156126415782825560018201915061262b565b5050505b5060008381526020902060005b82811015612677576126648483611ef5565b6040939093019260019182019101612652565b505050506126886020830183612301565b6122a68183600186016124eb565b6000826126b357634e487b7160e01b600052601260045260246000fd5b500490565b602081016126c5836116ee565b91905290565b604051608081016001600160401b03811182821017156126ed576126ed611ea0565b60405290565b604051606081016001600160401b03811182821017156126ed576126ed611ea0565b604080519081016001600160401b03811182821017156126ed576126ed611ea0565b604051601f8201601f191681016001600160401b038111828210171561275f5761275f611ea0565b604052919050565b60006001600160401b0382111561278057612780611ea0565b5060051b60200190565b6000602080838503121561279d57600080fd5b82516001600160401b038111156127b357600080fd5b8301601f810185136127c457600080fd5b80516127d76127d282612767565b612737565b81815260059190911b820183019083810190878311156127f657600080fd5b928401925b8284101561281d57835161280e81611a9f565b825292840192908401906127fb565b979650505050505050565b60006080820160018060a01b03808816845260208760208601528660408601526080606086015282865180855260a08701915060208801945060005b81811015612882578551851683529483019491830191600101612864565b50909a9950505050505050505050565b600082601f8301126128a357600080fd5b815160206128b36127d283612767565b82815260079290921b840181019181810190868411156128d257600080fd5b8286015b8481101561293757608081890312156128ef5760008081fd5b6128f76126cb565b815161290281611f8d565b8152818501518582015260408083015161291b81611a9f565b90820152606082810151908201528352918301916080016128d6565b509695505050505050565b600082601f83011261295357600080fd5b815160206129636127d283612767565b8281526060928302850182019282820191908785111561298257600080fd5b8387015b858110156129e45781818a03121561299e5760008081fd5b6129a66126f3565b81516129b181611922565b8152818601516129c081611ee6565b818701526040828101516129d381611ee6565b908201528452928401928101612986565b5090979650505050505050565b60006020808385031215612a0457600080fd5b82516001600160401b0380821115612a1b57600080fd5b9084019060608287031215612a2f57600080fd5b612a376126f3565b825182811115612a4657600080fd5b8301601f81018813612a5757600080fd5b8051612a656127d282612767565b81815260069190911b8201860190868101908a831115612a8457600080fd5b928701925b82841015612ada576040848c031215612aa25760008081fd5b612aaa612715565b8451612ab581611922565b815284890151612ac481611ee6565b818a015282526040939093019290870190612a89565b84525050508284015182811115612af057600080fd5b612afc88828601612892565b85830152506040830151935081841115612b1557600080fd5b612b2187858501612942565b60408201529695505050505050565b600060208284031215612b4257600080fd5b81516105af81611a9f56fe9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e009075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e01";

type MockEntitlementGatedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGated__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGated> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGated>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGated {
    return super.attach(address) as MockEntitlementGated;
  }
  override connect(signer: Signer): MockEntitlementGated__factory {
    return super.connect(signer) as MockEntitlementGated__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedInterface {
    return new utils.Interface(_abi) as MockEntitlementGatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGated {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGated;
  }
}
