/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MockEntitlementGated,
  MockEntitlementGatedInterface,
} from "../MockEntitlementGated";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "checker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "__EntitlementGated_init",
    inputs: [
      {
        name: "entitlementChecker",
        type: "address",
        internalType: "contract IEntitlementChecker",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getCrossChainEntitlementData",
    inputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IEntitlementDataQueryableBase.EntitlementData",
        components: [
          {
            name: "entitlementType",
            type: "string",
            internalType: "string",
          },
          {
            name: "entitlementData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleData",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getRuleDataV2",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "postEntitlementCheckResult",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "postEntitlementCheckResultV2",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "result",
        type: "uint8",
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestEntitlementCheck",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV2",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "requestEntitlementCheckV3",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleDataV2",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperationV2[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "params",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "requestLegacyEntitlementCheckV3",
    inputs: [
      {
        name: "roleIds",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "ruleData",
        type: "tuple",
        internalType: "struct IRuleEntitlementBase.RuleData",
        components: [
          {
            name: "operations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.Operation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CombinedOperationType",
              },
              {
                name: "index",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
          {
            name: "checkOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.CheckOperation[]",
            components: [
              {
                name: "opType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.CheckOperationType",
              },
              {
                name: "chainId",
                type: "uint256",
                internalType: "uint256",
              },
              {
                name: "contractAddress",
                type: "address",
                internalType: "address",
              },
              {
                name: "threshold",
                type: "uint256",
                internalType: "uint256",
              },
            ],
          },
          {
            name: "logicalOperations",
            type: "tuple[]",
            internalType: "struct IRuleEntitlementBase.LogicalOperation[]",
            components: [
              {
                name: "logOpType",
                type: "uint8",
                internalType: "enum IRuleEntitlementBase.LogicalOperationType",
              },
              {
                name: "leftOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
              {
                name: "rightOperationIndex",
                type: "uint8",
                internalType: "uint8",
              },
            ],
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "EntitlementCheckResultPosted",
    inputs: [
      {
        name: "transactionId",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "result",
        type: "uint8",
        indexed: false,
        internalType: "enum IEntitlementGatedBase.NodeVoteStatus",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint32",
        indexed: false,
        internalType: "uint32",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceAdded",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "InterfaceRemoved",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        indexed: true,
        internalType: "bytes4",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_InvalidEntitlement",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeAlreadyVoted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_NodeNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_OnlyEntitlementChecker",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_RequestIdNotFound",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyCompleted",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionCheckAlreadyRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "EntitlementGated_TransactionNotRegistered",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_InInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Initializable_NotInInitializingState",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_AlreadySupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Introspection_NotSupported",
    inputs: [],
  },
  {
    type: "error",
    name: "Reentrancy",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002df838038062002df8833981016040819052620000349162000127565b6200003e6200007f565b7f9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e0080546001600160a01b0319166001600160a01b0383161790555062000159565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef520008054640100000000900460ff1615620000cc576040516366008a2d60e01b815260040160405180910390fd5b805463ffffffff90811610156200012457805463ffffffff191663ffffffff90811782556040519081527fe9c9b456cb2994b80aeef036cf59d26e9617df80f816a6ee5a5b4166e07e2f5c9060200160405180910390a15b50565b6000602082840312156200013a57600080fd5b81516001600160a01b03811681146200015257600080fd5b9392505050565b612c8f80620001696000396000f3fe60806040526004361061009c5760003560e01c80637adc9cbe116100645780637adc9cbe1461018157806383f1cfa5146101a1578063916ba680146101c157806392c399ff146101e1578063a0d7fb8014610201578063e58690f21461021457600080fd5b8063069a3ee9146100a15780630fe44a21146100d75780634739e8051461010457806357e700271461012657806368ab7dd614610154575b600080fd5b3480156100ad57600080fd5b506100c16100bc36600461177d565b610227565b6040516100ce9190611879565b60405180910390f35b3480156100e357600080fd5b506100f76100f2366004611936565b61045a565b6040516100ce919061199e565b34801561011057600080fd5b5061012461011f3660046119ed565b61053d565b005b34801561013257600080fd5b50610146610141366004611a3e565b610584565b6040519081526020016100ce565b34801561016057600080fd5b5061017461016f36600461177d565b6105e1565b6040516100ce9190611a84565b34801561018d57600080fd5b5061012461019c366004611b72565b61088e565b3480156101ad57600080fd5b506101466101bc366004611bda565b6108e4565b3480156101cd57600080fd5b506101466101dc366004611bda565b6109a0565b3480156101ed57600080fd5b506100c16101fc366004611936565b610a53565b61014661020f366004611bda565b610a81565b6101246102223660046119ed565b610b29565b61024b60405180606001604052806060815260200160608152602001606081525090565b6000828152602081815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b828210156102e857600084815260209020604080518082019091529083018054829060ff1660028111156102b5576102b5611796565b60028111156102c6576102c6611796565b81529054610100900460ff16602091820152908252600192909201910161027f565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156103a0576000848152602090206040805160808101909152600484029091018054829060ff16600681111561035057610350611796565b600681111561036157610361611796565b815260018281015460208084019190915260028401546001600160a01b0316604084015260039093015460609092019190915291835292019101610315565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561044c5760008481526020902060408051606081019091529083018054829060ff16600281111561040457610404611796565b600281111561041557610415611796565b8152905460ff61010082048116602080850191909152620100009092041660409092019190915290825260019290920191016103cd565b505050915250909392505050565b6040805180820190915260608082526020820152600082815260208190526040902054156104e75760408051608081018252600f8183019081526e149d5b19515b9d1a5d1b195b595b9d608a1b60608301528152600084815260208181529083902092519192818401926104ce9201611cf0565b6040516020818303038152906040528152509050610537565b60408051608081018252601181830190815270293ab632a2b73a34ba3632b6b2b73a2b1960791b606083015281526000848152600160209081529083902092519192818401926104ce9201611de6565b92915050565b3068929eee149b4bd21268540361055c5763ab143c066000526004601cfd5b3068929eee149b4bd2126855610573838383610b8e565b3868929eee149b4bd2126855505050565b6000828152602081905260408120829061059e82826122d4565b905050600032436040516020016105b692919061239d565b6040516020818303038152906040528051906020012090506105da33823087610e3b565b9392505050565b61060560405180606001604052806060815260200160608152602001606081525090565b60008281526001602090815260408083208151815460809481028201850190935260608101838152909491938593919285929185015b828210156106a457600084815260209020604080518082019091529083018054829060ff16600281111561067157610671611796565b600281111561068257610682611796565b81529054610100900460ff16602091820152908252600192909201910161063b565b50505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b828210156107e2576000848152602090206040805160808101909152600484029091018054829060ff16600681111561070c5761070c611796565b600681111561071d5761071d611796565b81526001820154602082015260028201546001600160a01b0316604082015260038201805460609092019161075190611db2565b80601f016020809104026020016040519081016040528092919081815260200182805461077d90611db2565b80156107ca5780601f1061079f576101008083540402835291602001916107ca565b820191906000526020600020905b8154815290600101906020018083116107ad57829003601f168201915b505050505081525050815260200190600101906106d1565b50505050815260200160028201805480602002602001604051908101604052809291908181526020016000905b8282101561044c5760008481526020902060408051606081019091529083018054829060ff16600281111561084657610846611796565b600281111561085757610857611796565b8152905460ff610100820481166020808501919091526201000090920416604090920191909152908252600192909201910161080f565b7f59b501c3653afc186af7d48dda36cf6732bd21629a6295693664240a6ef5200054640100000000900460ff166108d857604051630ef4733760e31b815260040160405180910390fd5b6108e181611122565b50565b6000805b83811015610932578260016000878785818110610907576109076123bf565b905060200201358152602001908152602001600020818161092891906126c4565b50506001016108e8565b506000324360405160200161094892919061239d565b60405160208183030381529060405280519060200120905060005b848110156109975761098f338330898986818110610983576109836123bf565b90506020020135610e3b565b600101610963565b50949350505050565b6000805b838110156109ed57826000808787858181106109c2576109c26123bf565b90506020020135815260200190815260200160002081816109e391906122d4565b50506001016109a4565b5060003243604051602001610a0392919061239d565b60405160208183030381529060405280519060200120905060005b8481101561099757610a4b333084308a8a87818110610a3f57610a3f6123bf565b9050602002013561115d565b600101610a1e565b610a7760405180606001604052806060815260200160608152602001606081525090565b6105da8383611264565b6000805b83811015610acf578260016000878785818110610aa457610aa46123bf565b9050602002013581526020019081526020016000208181610ac591906126c4565b5050600101610a85565b5060003243604051602001610ae592919061239d565b60405160208183030381529060405280519060200120905060005b8481101561099757610b21333084308a8a87818110610a3f57610a3f6123bf565b600101610b00565b600080516020612c4f833981519152546001600160a01b03163314610b5857610b58630b2395d760e41b611355565b3068929eee149b4bd212685403610b775763ab143c066000526004601cfd5b3068929eee149b4bd212685561057383838361135f565b6000838152600080516020612c6f833981519152602052604090208054600080516020612c4f833981519152919061010090046001600160a01b03161580610bd85750805460ff16155b15610bf657604051637ad5a43960e11b815260040160405180910390fd5b600084815260028201602052604090205460ff1615610c2857604051637912b73960e01b815260040160405180910390fd5b60008481526001820160205260408120805482918291825b81811015610d42576000838281548110610c5c57610c5c6123bf565b60009182526020909120018054909150336001600160a01b0390911603610ce85760008154600160a01b900460ff166002811115610c9c57610c9c611796565b14610cba576040516347592a4d60e01b815260040160405180910390fd5b80548a90829060ff60a01b1916600160a01b836002811115610cde57610cde611796565b0217905550600196505b8054600160a01b900460ff166001816002811115610d0857610d08611796565b03610d1857866001019650610d38565b6002816002811115610d2c57610d2c611796565b03610d38578560010195505b5050600101610c40565b5084610d6157604051638223a7e960e01b815260040160405180910390fd5b610d6c60028261276a565b841180610d825750610d7f60028261276a565b83115b15610e2f5760008981526002870160205260408120805460ff19166001179055838511610db0576002610db3565b60015b90506000610dc08c6113ec565b90506001826002811115610dd657610dd6611796565b1480610ddf5750805b15610e1d578b7fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c63383604051610e14919061278c565b60405180910390a25b8015610e2c57610e2c8c611489565b50505b50505050505050505050565b6001600160a01b038416610e5957610e5963133de07160e31b611355565b6000838152600080516020612c6f833981519152602052604090208054600080516020612c4f833981519152919060ff1615610ee957600481015460005b81811015610ee65784836004018281548110610eb557610eb56123bf565b906000526020600020015403610ede576040516301ab53df60e31b815260040160405180910390fd5b600101610e97565b50505b81546001600160a01b0316610f0057610f0061155f565b8154604051634f84544560e01b8152600560048201526000916001600160a01b031690634f84544590602401600060405180830381865afa158015610f49573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f71919081019061285e565b825490915060ff16610fbc5781546003830180546001600160a01b038089166001600160a01b0319909216919091179091558816610100026001600160a81b03199091161760011782555b600482018054600181810183556000928352602080842090920187905583518784529085019091526040822090915b828110156110af57816040518060400160405280868481518110611011576110116123bf565b60200260200101516001600160a01b031681526020016000600281111561103a5761103a611796565b9052815460018101835560009283526020928390208251910180546001600160a01b031981166001600160a01b03909316928317825593830151929390929183916001600160a81b03191617600160a01b83600281111561109d5761109d611796565b02179055505050806001019050610feb565b50845460405163541da4e560e01b81526001600160a01b039091169063541da4e5906110e5908c908c908b9089906004016128fc565b600060405180830381600087803b1580156110ff57600080fd5b505af1158015611113573d6000803e3d6000fd5b50505050505050505050505050565b611132636afd38fd60e11b611630565b600080516020612c4f83398151915280546001600160a01b0319166001600160a01b03831617905550565b6001600160a01b03851661117b5761117b63133de07160e31b611355565b6001600160a01b03821661119957611199634bb7c20560e01b611355565b6000838152600080516020612c6f83398151915260209081526040808320805460ff191660011781556003810180546001600160a01b0319166001600160a01b0388811691909117909155825190891693810193909352600080516020612c4f83398151915293909290910160408051601f198184030181529082905284546310df028560e11b83529092506001600160a01b0316906321be050a90349061124b908c908b908a908890600401612966565b6000604051808303818588803b1580156110ff57600080fd5b61128860405180606001604052806060815260200160608152602001606081525090565b6000838152600080516020612c6f833981519152602052604090208054600080516020612c4f833981519152919060ff166112d657604051637ad5a43960e11b815260040160405180910390fd5b600381015460405163069a3ee960e01b8152600481018690526001600160a01b0390911690819063069a3ee990602401600060405180830381865afa158015611323573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261134b9190810190612af2565b9695505050505050565b8060005260046000fd5b6000838152600080516020612c6f833981519152602052604090208054600080516020612c4f833981519152919060ff166113a4576113a4637ad5a43960e11b611355565b847fb9d6ce397e562841871d119aaf77469c60a3b5bf8b99a5d9851656015015c633846040516113d4919061278c565b60405180910390a26113e585611489565b5050505050565b6000818152600080516020612c6f833981519152602052604081206004810154600080516020612c4f8339815191529190835b8181101561147957826002016000846004018381548110611442576114426123bf565b6000918252602080832090910154835282019290925260400190205460ff166114715750600095945050505050565b60010161141f565b50600195945050505050565b5050565b6000818152600080516020612c6f833981519152602052604081206004810154600080516020612c4f833981519152925b8181101561150a578260010160008460040183815481106114dd576114dd6123bf565b9060005260206000200154815260200190815260200160002060006115029190611709565b6001016114ba565b50611519600483016000611727565b6000848152600184016020526040812080546001600160a81b03191681556003810180546001600160a01b0319169055906115576004830182611727565b505050505050565b6000600080516020612c4f833981519152905060007fc21004fcc619240a31f006438274d15cd813308303284436eef6055f0fdcb60060060154604051628956cd60e71b81526c29b830b1b2a7b832b930ba37b960991b60048201526001600160a01b03909116906344ab668090602401602060405180830381865afa1580156115ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116119190612c31565b82546001600160a01b0319166001600160a01b03919091161790915550565b6001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b00602052604090205460ff166116b8576001600160e01b0319811660009081527f81088bbc801e045ea3e7620779ab349988f58afbdfba10dff983df3f33522b0060205260409020805460ff191660011790556116d1565b604051637967f77d60e11b815260040160405180910390fd5b6040516001600160e01b03198216907f78f84e5b1c5c05be2b5ad3800781dd404d6d6c6302bc755c0fe20f58a33a7f2290600090a250565b50805460008255906000526020600020908101906108e19190611745565b50805460008255906000526020600020908101906108e19190611768565b5b808211156117645780546001600160a81b0319168155600101611746565b5090565b5b808211156117645760008155600101611769565b60006020828403121561178f57600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106108e1576108e1611796565b60008151808452602080850194506020840160005b8381101561180457815180516117e6816117ac565b885283015160ff1683880152604090960195908201906001016117d1565b509495945050505050565b6007811061181f5761181f611796565b9052565b60008151808452602080850194506020840160005b83811015611804578151805161184d816117ac565b88528084015160ff908116858a0152604091820151169088015260609096019590820190600101611838565b60006020808352608084516060808487015261189860808701836117bc565b915083870151601f196040818986030160408a015284835180875288870191508885019650600094505b8085101561190b5786516118d783825161180f565b808a0151838b0152838101516001600160a01b031684840152860151868301529588019560019490940193908701906118c2565b5060408b01519750828a82030160608b01526119278189611823565b9b9a5050505050505050505050565b6000806040838503121561194957600080fd5b50508035926020909101359150565b6000815180845260005b8181101561197e57602081850181015186830182015201611962565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251604060208401526119ba6060840182611958565b90506020840151601f198483030160408501526119d78282611958565b95945050505050565b600381106108e157600080fd5b600080600060608486031215611a0257600080fd5b83359250602084013591506040840135611a1b816119e0565b809150509250925092565b600060608284031215611a3857600080fd5b50919050565b60008060408385031215611a5157600080fd5b8235915060208301356001600160401b03811115611a6e57600080fd5b611a7a85828601611a26565b9150509250929050565b600060208083526080845160608084870152611aa360808701836117bc565b915083870151601f196040818986030160408a01528483518087528887019150888160051b880101898601955060005b82811015611b3057858983030184528651611aef83825161180f565b808c0151838d0152858101516001600160a01b0316868401528801518883018b9052611b1d8b840182611958565b978c0197948c0194925050600101611ad3565b5060408d01519950848c82030160608d0152611b4c818b611823565b9d9c50505050505050505050505050565b6001600160a01b03811681146108e157600080fd5b600060208284031215611b8457600080fd5b81356105da81611b5d565b60008083601f840112611ba157600080fd5b5081356001600160401b03811115611bb857600080fd5b6020830191508360208260051b8501011115611bd357600080fd5b9250929050565b600080600060408486031215611bef57600080fd5b83356001600160401b0380821115611c0657600080fd5b611c1287838801611b8f565b90955093506020860135915080821115611c2b57600080fd5b50611c3886828701611a26565b9150509250925092565b600081548084526020808501945083600052602060002060005b8381101561180457815460ff808216611c74816117ac565b895260089190911c168388015260409096019560019182019101611c5c565b600081548084526020808501945083600052602060002060005b8381101561180457815460ff808216611cc5816117ac565b8952600882901c8116858a015260109190911c16604088015260609096019560019182019101611cad565b6000602080835260806060806020860152611d0e6080860187611c42565b6001808801601f196040818a86030160408b01528483548087526020870191508460005260206000209650600094505b80851015611d8a57611d548260ff89541661180f565b86860154828b015260028701546001600160a01b0316838301526003870154888301526004909601959385019390880190611d3e565b50828b82030160608c0152611da28160028e01611c93565b9c9b505050505050505050505050565b600181811c90821680611dc657607f821691505b602082108103611a3857634e487b7160e01b600052602260045260246000fd5b60006020808352606081840152611e006080840185611c42565b60018501601f19808684030160408701528282548085528585019150858160051b86010160008581528781209550805b83811015611f045785888403018552611e4d8360ff89541661180f565b6001870154838a015260028701546001600160a01b03166040840152608060608401526003870180548390611e8181611db2565b8060808801526001821660008114611ea05760018114611ebc57611eeb565b60ff19831660a089015260a082151560051b8901019350611eeb565b8487528d8720875b83811015611ee25781548a820160a001526001909101908f01611ec4565b890160a0019450505b50505060049890980197958a0195935050600101611e30565b5050838982030160608a0152611f1d8160028c01611c93565b9a9950505050505050505050565b6000808335601e19843603018112611f4257600080fd5b8301803591506001600160401b03821115611f5c57600080fd5b6020019150600681901b3603821315611bd357600080fd5b634e487b7160e01b600052604160045260246000fd5b600281901b6001600160fe1b0382168214611fb557634e487b7160e01b600052601160045260246000fd5b919050565b60ff811681146108e157600080fd5b8135611fd4816119e0565b611fdd816117ac565b60ff1982541660ff82168117835550506020820135611ffb81611fba565b815461ff001916600882901b61ff0016178255505050565b505050565b6000808335601e1984360301811261202f57600080fd5b8301803591506001600160401b0382111561204957600080fd5b6020019150600781901b3603821315611bd357600080fd5b600781106108e157600080fd5b6007821061207e5761207e611796565b60ff1981541660ff831681178255505050565b80546001600160a01b0319166001600160a01b0392909216919091179055565b81356120bc81612061565b6120c6818361206e565b506020820135600182015560408201356120df81611b5d565b6120ec8160028401612091565b50606082013560038201555050565b600160401b83111561210f5761210f611f74565b80548382558084101561216d5761212581611f8a565b61212e85611f8a565b6000848152602081209283019291909101905b8282101561216957808255806001830155806002830155806003830155600482019150612141565b5050505b5060008181526020812083915b858110156115575761218c83836120b1565b608092909201916004919091019060010161217a565b6000808335601e198436030181126121b957600080fd5b8301803591506001600160401b038211156121d357600080fd5b6020019150606081023603821315611bd357600080fd5b81356121f5816119e0565b6121fe816117ac565b60ff1982541660ff8216811783555050602082013561221c81611fba565b815461ff001916600882901b61ff001617825550604082013561223e81611fba565b815462ff0000191660109190911b62ff00001617905550565b600160401b83111561226b5761226b611f74565b8054838255808410156122a2576000828152602081208581019083015b8082101561229e57828255600182019150612288565b5050505b5060008181526020812083915b85811015611557576122c183836121ea565b60609290920191600191820191016122af565b6122de8283611f2b565b600160401b8111156122f2576122f2611f74565b825481845580821015612329576000848152602081208381019083015b808210156123255782825560018201915061230f565b5050505b5060008381526020902060005b8281101561235b576123488483611fc9565b6040939093019260019182019101612336565b5050505061236c6020830183612018565b61237a8183600186016120fb565b505061238960408301836121a2565b612397818360028601612257565b50505050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126123ec57600080fd5b8301803591506001600160401b0382111561240657600080fd5b6020019150600581901b3603821315611bd357600080fd5b60008235607e1983360301811261243457600080fd5b9190910192915050565b5b81811015611485576000815560010161243f565b601f82111561201357806000526020600020601f840160051c8101602085101561247a5750805b6113e5601f850160051c83018261243e565b813561249781612061565b6124a1818361206e565b506001602080840135600184015560408401356124bd81611b5d565b6124ca8160028601612091565b50600383016060850135601e198636030181126124e657600080fd5b850180356001600160401b038111156124fe57600080fd5b803603848301131561250f57600080fd5b6125238161251d8554611db2565b85612453565b6000601f821160018114612559576000831561254157508382018601355b600019600385901b1c1916600184901b1785556125b4565b600085815260209020601f19841690835b828110156125895786850189013582559388019390890190880161256a565b50848210156125a85760001960f88660031b161c198885880101351681555b505060018360011b0185555b505050505050505050565b600160401b8311156125d3576125d3611f74565b805483825580841015612686576125e981611f8a565b6125f285611f8a565b6000848152602081209283019291909101905b8282101561268257808255600181818401558160028401556003830161262b8154611db2565b801561267457601f8082116001811461264657858455612671565b60008481526020902061266283850160051c820187830161243e565b50600084815260208120818655555b50505b505050600482019150612605565b5050505b5060008181526020812083915b85811015611557576126ae6126a8848761241e565b8361248c565b6020929092019160049190910190600101612693565b6126ce8283611f2b565b600160401b8111156126e2576126e2611f74565b825481845580821015612719576000848152602081208381019083015b80821015612715578282556001820191506126ff565b5050505b5060008381526020902060005b8281101561274b576127388483611fc9565b6040939093019260019182019101612726565b5050505061275c60208301836123d5565b61237a8183600186016125bf565b60008261278757634e487b7160e01b600052601260045260246000fd5b500490565b60208101612799836117ac565b91905290565b604051608081016001600160401b03811182821017156127c1576127c1611f74565b60405290565b604051606081016001600160401b03811182821017156127c1576127c1611f74565b604080519081016001600160401b03811182821017156127c1576127c1611f74565b604051601f8201601f191681016001600160401b038111828210171561283357612833611f74565b604052919050565b60006001600160401b0382111561285457612854611f74565b5060051b60200190565b6000602080838503121561287157600080fd5b82516001600160401b0381111561288757600080fd5b8301601f8101851361289857600080fd5b80516128ab6128a68261283b565b61280b565b81815260059190911b820183019083810190878311156128ca57600080fd5b928401925b828410156128f15783516128e281611b5d565b825292840192908401906128cf565b979650505050505050565b60006080820160018060a01b03808816845260208760208601528660408601526080606086015282865180855260a08701915060208801945060005b81811015612956578551851683529483019491830191600101612938565b50909a9950505050505050505050565b60018060a01b038516815283602082015282604082015260806060820152600061134b6080830184611958565b600082601f8301126129a457600080fd5b815160206129b46128a68361283b565b82815260079290921b840181019181810190868411156129d357600080fd5b8286015b84811015612a3857608081890312156129f05760008081fd5b6129f861279f565b8151612a0381612061565b81528185015185820152604080830151612a1c81611b5d565b90820152606082810151908201528352918301916080016129d7565b509695505050505050565b600082601f830112612a5457600080fd5b81516020612a646128a68361283b565b82815260609283028501820192828201919087851115612a8357600080fd5b8387015b85811015612ae55781818a031215612a9f5760008081fd5b612aa76127c7565b8151612ab2816119e0565b815281860151612ac181611fba565b81870152604082810151612ad481611fba565b908201528452928401928101612a87565b5090979650505050505050565b60006020808385031215612b0557600080fd5b82516001600160401b0380821115612b1c57600080fd5b9084019060608287031215612b3057600080fd5b612b386127c7565b825182811115612b4757600080fd5b8301601f81018813612b5857600080fd5b8051612b666128a68261283b565b81815260069190911b8201860190868101908a831115612b8557600080fd5b928701925b82841015612bdb576040848c031215612ba35760008081fd5b612bab6127e9565b8451612bb6816119e0565b815284890151612bc581611fba565b818a015282526040939093019290870190612b8a565b84525050508284015182811115612bf157600080fd5b612bfd88828601612993565b85830152506040830151935081841115612c1657600080fd5b612c2287858501612a43565b60408201529695505050505050565b600060208284031215612c4357600080fd5b81516105da81611b5d56fe9075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e009075c515a635ba70c9696f31149324218d75cf00afe836c482e6473f38b19e01";

type MockEntitlementGatedConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockEntitlementGatedConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockEntitlementGated__factory extends ContractFactory {
  constructor(...args: MockEntitlementGatedConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockEntitlementGated> {
    return super.deploy(
      checker,
      overrides || {}
    ) as Promise<MockEntitlementGated>;
  }
  override getDeployTransaction(
    checker: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(checker, overrides || {});
  }
  override attach(address: string): MockEntitlementGated {
    return super.attach(address) as MockEntitlementGated;
  }
  override connect(signer: Signer): MockEntitlementGated__factory {
    return super.connect(signer) as MockEntitlementGated__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockEntitlementGatedInterface {
    return new utils.Interface(_abi) as MockEntitlementGatedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockEntitlementGated {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockEntitlementGated;
  }
}
