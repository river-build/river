/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICrossChainEntitlement,
  ICrossChainEntitlementInterface,
} from "../ICrossChainEntitlement";

const _abi = [
  {
    type: "function",
    name: "isEntitled",
    inputs: [
      {
        name: "users",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "parameters",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "parameters",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct ICrossChainEntitlement.Parameter[]",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "primitive",
            type: "string",
            internalType: "string",
          },
          {
            name: "description",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
] as const;

export class ICrossChainEntitlement__factory {
  static readonly abi = _abi;
  static createInterface(): ICrossChainEntitlementInterface {
    return new utils.Interface(_abi) as ICrossChainEntitlementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICrossChainEntitlement {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ICrossChainEntitlement;
  }
}
