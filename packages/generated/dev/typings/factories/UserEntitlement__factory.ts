/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UserEntitlement,
  UserEntitlementInterface,
} from "../UserEntitlement";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "SPACE_ADDRESS",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "description",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitlementDataByRoleId",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "_space",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isCrosschain",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "isEntitled",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "wallets",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "permission",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "moduleType",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeEntitlement",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setEntitlement",
    inputs: [
      {
        name: "roleId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "entitlementData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__InvalidValue",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotAllowed",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__NotMember",
    inputs: [],
  },
  {
    type: "error",
    name: "Entitlement__ValueAlreadyExists",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100d4565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100725760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d15780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611ae36100fd60003960008181610aa101528181610aca0152610c410152611ae36000f3fe6080604052600436106100dd5760003560e01c806352d1902d1161007f578063ad3cb1cc11610059578063ad3cb1cc146102a0578063c4d66de8146102d1578063ef8be574146102f1578063f0c111f91461031157600080fd5b806352d1902d146102015780636465e69f146102245780637284e4161461025f57600080fd5b80631eee07b2116100bb5780631eee07b2146101805780632e1b61e4146101a057806334322eff146101b45780634f1ef286146101ec57600080fd5b806301ffc9a7146100e257806306fdde03146101175780630cf0b53314610160575b600080fd5b3480156100ee57600080fd5b506101026100fd3660046113fc565b610331565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b506101536040518060400160405280601081526020016f155cd95c88115b9d1a5d1b195b595b9d60821b81525081565b60405161010e9190611476565b34801561016c57600080fd5b5061010261017b3660046115ac565b610368565b34801561018c57600080fd5b5061015361019b3660046115fb565b610393565b3480156101ac57600080fd5b506000610102565b3480156101c057600080fd5b506000546101d4906001600160a01b031681565b6040516001600160a01b03909116815260200161010e565b6101ff6101fa36600461163b565b6103d1565b005b34801561020d57600080fd5b506102166103f0565b60405190815260200161010e565b34801561023057600080fd5b506101536040518060400160405280600f81526020016e155cd95c915b9d1a5d1b195b595b9d608a1b81525081565b34801561026b57600080fd5b5061015360405180604001604052806015815260200174456e7469746c656d656e7420666f7220757365727360581b81525081565b3480156102ac57600080fd5b50610153604051806040016040528060058152602001640352e302e360dc1b81525081565b3480156102dd57600080fd5b506101ff6102ec3660046116c6565b61040d565b3480156102fd57600080fd5b506101ff61030c3660046116e1565b610545565b34801561031d57600080fd5b506101ff61032c3660046115fb565b6107bb565b60006001600160e01b03198216637bc2cb4560e11b148061036257506301ffc9a760e01b6001600160e01b03198316145b92915050565b600083156103825761037b84848461090b565b905061038c565b61037b8383610a36565b9392505050565b6060600160008381526020019081526020016000206002016040516020016103bb919061175c565b6040516020818303038152906040529050919050565b6103d9610a96565b6103e282610b3d565b6103ec8282610b74565b5050565b60006103fa610c36565b50600080516020611ac383398151915290565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156104525750825b90506000826001600160401b0316600114801561046e5750303b155b90508115801561047c575080155b1561049a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104c457845460ff60401b1916600160401b1785555b6104cc610c7f565b6104d4610c7f565b6104dc610c7f565b600080546001600160a01b0319166001600160a01b038816179055831561053d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b505050505050565b6000546001600160a01b0316336001600160a01b03161461057957604051630ce39a4b60e21b815260040160405180910390fd5b6000610587828401846117ac565b905060005b81518110156105ef5760008282815181106105a9576105a96117e8565b6020026020010151905060006001600160a01b0316816001600160a01b0316036105e6576040516372bbc80f60e11b815260040160405180910390fd5b5060010161058c565b505b600084815260016020526040902060020154156106a157600084815260016020819052604082206002018054909161062891611814565b81548110610638576106386117e8565b6000918252602090912001546001600160a01b031690506106598186610c87565b600085815260016020526040902060020180548061067957610679611827565b600082815260209020810160001990810180546001600160a01b0319169055019055506105f1565b6000848152600160208190526040822080546001600160a01b0319168155908101829055906106d36002830182611364565b505060405180606001604052806106e73390565b6001600160a01b0390811682524260208084019190915260409283018590526000888152600180835290849020855181546001600160a01b03191694169390931783558482015190830155918301518051919261074c92600285019290910190611382565b5090505060005b81518110156107b45760026000838381518110610772576107726117e8565b6020908102919091018101516001600160a01b031682528181019290925260400160009081208054600181810183559183529290912090910186905501610753565b5050505050565b6000546001600160a01b0316336001600160a01b0316146107ef57604051630ce39a4b60e21b815260040160405180910390fd5b6000818152600160205260409020546001600160a01b0316610824576040516372bbc80f60e11b815260040160405180910390fd5b600081815260016020526040902060020154156108d457600081815260016020819052604082206002018054909161085b91611814565b8154811061086b5761086b6117e8565b6000918252602090912001546001600160a01b0316905061088c8183610c87565b60008281526001602052604090206002018054806108ac576108ac611827565b600082815260209020810160001990810180546001600160a01b031916905501905550610824565b6000818152600160208190526040822080546001600160a01b0319168155908101829055906109066002830182611364565b505050565b6000805460405163418e15c160e11b81526004810186905282916001600160a01b03169063831c2b8290602401600060405180830381865afa158015610955573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261097d9190810190611882565b9050600061098a85610d95565b905060005b826060015151811015610a2c576000836060015182815181106109b4576109b46117e8565b6020026020010151905060005b8351811015610a2257818482815181106109dd576109dd6117e8565b6020026020010151148015610a105750610a10848281518110610a0257610a026117e8565b602002602001015188611055565b15610a1a57600195505b6001016109c1565b505060010161098f565b5050509392505050565b600080610a4284610d95565b905060005b8151811015610a8b57610a73828281518110610a6557610a656117e8565b602002602001015185611055565b15610a8357600192505050610362565b600101610a47565b506000949350505050565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610b1d57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610b11600080516020611ac3833981519152546001600160a01b031690565b6001600160a01b031614155b15610b3b5760405163703e46dd60e11b815260040160405180910390fd5b565b6000546001600160a01b0316336001600160a01b031614610b7157604051630ce39a4b60e21b815260040160405180910390fd5b50565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610bce575060408051601f3d908101601f19168201909252610bcb9181019061198a565b60015b610bfb57604051634c9c8ce360e01b81526001600160a01b03831660048201526024015b60405180910390fd5b600080516020611ac38339815191528114610c2c57604051632a87526960e21b815260048101829052602401610bf2565b6109068383611146565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b3b5760405163703e46dd60e11b815260040160405180910390fd5b610b3b61119c565b6001600160a01b0382166000908152600260205260408120905b8154811015610d4c5782828281548110610cbd57610cbd6117e8565b906000526020600020015403610d445781548290610cdd90600190611814565b81548110610ced57610ced6117e8565b9060005260206000200154828281548110610d0a57610d0a6117e8565b906000526020600020018190555081805480610d2857610d28611827565b6001900381819060005260206000200160009055905550505050565b600101610ca1565b5060405162461bcd60e51b815260206004820152601e60248201527f526f6c65204944206e6f7420666f756e6420666f7220746865207573657200006044820152606401610bf2565b60606000805b8351811015610dfb5760026000858381518110610dba57610dba6117e8565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000208054905082610df191906119a3565b9150600101610d9b565b50600160005260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e054610e3290826119a3565b90506000816001600160401b03811115610e4e57610e4e611489565b604051908082528060200260200182016040528015610e77578160200160208202803683370190505b5090506000805b8551811015610f7957600060026000888481518110610e9f57610e9f6117e8565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610f1157602002820191906000526020600020905b815481526020019060010190808311610efd575b5050505050905060005b8151811015610f6f57818181518110610f3657610f366117e8565b6020026020010151858580610f4a906119b6565b965081518110610f5c57610f5c6117e8565b6020908102919091010152600101610f1b565b5050600101610e7e565b5060016000908152600260209081527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e08054604080518285028101850190915281815292830182828015610fec57602002820191906000526020600020905b815481526020019060010190808311610fd8575b5050505050905060005b815181101561104a57818181518110611011576110116117e8565b6020026020010151848480611025906119b6565b955081518110611037576110376117e8565b6020908102919091010152600101610ff6565b509195945050505050565b6000805460405163b426423360e01b81526004810185905282916001600160a01b03169063b426423390602401600060405180830381865afa15801561109f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526110c791908101906119cf565b805190915060005b8181101561113a5760008382815181106110eb576110eb6117e8565b60200260200101516040516020016111039190611a7f565b60405160208183030381529060405261111b90611a9b565b9050858103611131576001945050505050610362565b506001016110cf565b50600095945050505050565b61114f826111e5565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a280511561119457610906828261124a565b6103ec6112c0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610b3b57604051631afcd79f60e31b815260040160405180910390fd5b806001600160a01b03163b60000361121b57604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610bf2565b600080516020611ac383398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080846001600160a01b0316846040516112679190611a7f565b600060405180830381855af49150503d80600081146112a2576040519150601f19603f3d011682016040523d82523d6000602084013e6112a7565b606091505b50915091506112b78583836112df565b95945050505050565b3415610b3b5760405163b398979f60e01b815260040160405180910390fd5b6060826112f4576112ef8261133b565b61038c565b815115801561130b57506001600160a01b0384163b155b1561133457604051639996b31560e01b81526001600160a01b0385166004820152602401610bf2565b508061038c565b80511561134b5780518082602001fd5b60405163d6bda27560e01b815260040160405180910390fd5b5080546000825590600052602060002090810190610b7191906113e7565b8280548282559060005260206000209081019282156113d7579160200282015b828111156113d757825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906113a2565b506113e39291506113e7565b5090565b5b808211156113e357600081556001016113e8565b60006020828403121561140e57600080fd5b81356001600160e01b03198116811461038c57600080fd5b60005b83811015611441578181015183820152602001611429565b50506000910152565b60008151808452611462816020860160208601611426565b601f01601f19169290920160200192915050565b60208152600061038c602083018461144a565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156114c1576114c1611489565b60405290565b604051601f8201601f191681016001600160401b03811182821017156114ef576114ef611489565b604052919050565b60006001600160401b0382111561151057611510611489565b5060051b60200190565b80356001600160a01b038116811461153157600080fd5b919050565b600082601f83011261154757600080fd5b8135602061155c611557836114f7565b6114c7565b8083825260208201915060208460051b87010193508684111561157e57600080fd5b602086015b848110156115a1576115948161151a565b8352918301918301611583565b509695505050505050565b6000806000606084860312156115c157600080fd5b8335925060208401356001600160401b038111156115de57600080fd5b6115ea86828701611536565b925050604084013590509250925092565b60006020828403121561160d57600080fd5b5035919050565b60006001600160401b0382111561162d5761162d611489565b50601f01601f191660200190565b6000806040838503121561164e57600080fd5b6116578361151a565b915060208301356001600160401b0381111561167257600080fd5b8301601f8101851361168357600080fd5b803561169161155782611614565b8181528660208385010111156116a657600080fd5b816020840160208301376000602083830101528093505050509250929050565b6000602082840312156116d857600080fd5b61038c8261151a565b6000806000604084860312156116f657600080fd5b8335925060208401356001600160401b038082111561171457600080fd5b818601915086601f83011261172857600080fd5b81358181111561173757600080fd5b87602082850101111561174957600080fd5b6020830194508093505050509250925092565b6020808252825482820181905260008481528281209092916040850190845b818110156117a05783546001600160a01b03168352600193840193928501920161177b565b50909695505050505050565b6000602082840312156117be57600080fd5b81356001600160401b038111156117d457600080fd5b6117e084828501611536565b949350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b81810381811115610362576103626117fe565b634e487b7160e01b600052603160045260246000fd5b600082601f83011261184e57600080fd5b815161185c61155782611614565b81815284602083860101111561187157600080fd5b6117e0826020830160208701611426565b6000602080838503121561189557600080fd5b82516001600160401b03808211156118ac57600080fd5b90840190608082870312156118c057600080fd5b6118c861149f565b825181528383015180151581146118de57600080fd5b818501526040830151828111156118f457600080fd5b6119008882860161183d565b60408301525060608301518281111561191857600080fd5b80840193505086601f84011261192d57600080fd5b8251915061193d611557836114f7565b82815260059290921b8301840191848101908884111561195c57600080fd5b938501935b8385101561197a57845182529385019390850190611961565b6060830152509695505050505050565b60006020828403121561199c57600080fd5b5051919050565b80820180821115610362576103626117fe565b6000600182016119c8576119c86117fe565b5060010190565b600060208083850312156119e257600080fd5b82516001600160401b03808211156119f957600080fd5b818501915085601f830112611a0d57600080fd5b8151611a1b611557826114f7565b81815260059190911b83018401908481019088831115611a3a57600080fd5b8585015b83811015611a7257805185811115611a565760008081fd5b611a648b89838a010161183d565b845250918601918601611a3e565b5098975050505050505050565b60008251611a91818460208701611426565b9190910192915050565b80516020808301519190811015611abc576000198160200360031b1b821691505b5091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc";

type UserEntitlementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserEntitlementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserEntitlement__factory extends ContractFactory {
  constructor(...args: UserEntitlementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UserEntitlement> {
    return super.deploy(overrides || {}) as Promise<UserEntitlement>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): UserEntitlement {
    return super.attach(address) as UserEntitlement;
  }
  override connect(signer: Signer): UserEntitlement__factory {
    return super.connect(signer) as UserEntitlement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserEntitlementInterface {
    return new utils.Interface(_abi) as UserEntitlementInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UserEntitlement {
    return new Contract(address, _abi, signerOrProvider) as UserEntitlement;
  }
}
