{
  "compiler": {
    "version": "0.8.24+commit.e11b9ed9"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "name": "Initializable_InInitializingState",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Initializable_NotInInitializingState",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Introspection_AlreadySupported",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Introspection_NotSupported",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "Ownable__NotOwner",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Ownable__ZeroAddress",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Platform__InvalidFeeRecipient",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Platform__InvalidMembershipBps",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Platform__InvalidMembershipDuration",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Platform__InvalidMembershipMinPrice",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "Platform__InvalidMembershipMintLimit",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint32",
            "name": "version",
            "type": "uint32"
          }
        ],
        "name": "Initialized",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "InterfaceAdded",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "bytes4",
            "name": "interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "InterfaceRemoved",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "previousOwner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "newOwner",
            "type": "address"
          }
        ],
        "name": "OwnershipTransferred",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "PlatformFeeRecipientSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint16",
            "name": "bps",
            "type": "uint16"
          }
        ],
        "name": "PlatformMembershipBpsSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "duration",
            "type": "uint256"
          }
        ],
        "name": "PlatformMembershipDurationSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          }
        ],
        "name": "PlatformMembershipFeeSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "minPrice",
            "type": "uint256"
          }
        ],
        "name": "PlatformMembershipMinPriceSet",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "limit",
            "type": "uint256"
          }
        ],
        "name": "PlatformMembershipMintLimitSet",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "feeRecipient",
            "type": "address"
          },
          {
            "internalType": "uint16",
            "name": "membershipBps",
            "type": "uint16"
          },
          {
            "internalType": "uint256",
            "name": "membershipFee",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "membershipMintLimit",
            "type": "uint256"
          },
          {
            "internalType": "uint64",
            "name": "membershipDuration",
            "type": "uint64"
          }
        ],
        "name": "__PlatformRequirements_init",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getDenominator",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "pure",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getFeeRecipient",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getMembershipBps",
        "outputs": [
          {
            "internalType": "uint16",
            "name": "",
            "type": "uint16"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getMembershipDuration",
        "outputs": [
          {
            "internalType": "uint64",
            "name": "",
            "type": "uint64"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getMembershipFee",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getMembershipMinPrice",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getMembershipMintLimit",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "recipient",
            "type": "address"
          }
        ],
        "name": "setFeeRecipient",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint16",
            "name": "bps",
            "type": "uint16"
          }
        ],
        "name": "setMembershipBps",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint64",
            "name": "duration",
            "type": "uint64"
          }
        ],
        "name": "setMembershipDuration",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "fee",
            "type": "uint256"
          }
        ],
        "name": "setMembershipFee",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "minPrice",
            "type": "uint256"
          }
        ],
        "name": "setMembershipMinPrice",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "limit",
            "type": "uint256"
          }
        ],
        "name": "setMembershipMintLimit",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "events": {
        "OwnershipTransferred(address,address)": {
          "details": "This emits when ownership of a contract changes."
        }
      },
      "kind": "dev",
      "methods": {
        "getDenominator()": {
          "details": "This is the denominator used for calculating fees",
          "returns": {
            "_0": "The denominator"
          }
        },
        "getFeeRecipient()": {
          "returns": {
            "_0": "The address of the fee recipient"
          }
        },
        "getMembershipBps()": {
          "details": "This is the basis points that will be charged for a membership",
          "returns": {
            "_0": "The membership basis points"
          }
        },
        "getMembershipDuration()": {
          "details": "This is the duration of a membership in seconds",
          "returns": {
            "_0": "The membership duration"
          }
        },
        "getMembershipFee()": {
          "details": "This is the flat fee that will be charged for a membership",
          "returns": {
            "_0": "The membership fee"
          }
        },
        "getMembershipMinPrice()": {
          "details": "This is the minimum price that can be set for a membership",
          "returns": {
            "_0": "The minimum price for a membership"
          }
        },
        "getMembershipMintLimit()": {
          "details": "This is the maximum number of free memberships that can be minted per space",
          "returns": {
            "_0": "The membership mint limit"
          }
        },
        "setFeeRecipient(address)": {
          "details": "This is the address that will receive the platform fees",
          "params": {
            "recipient": "The address of the fee recipient"
          }
        },
        "setMembershipBps(uint16)": {
          "params": {
            "bps": "The membership basis points"
          }
        },
        "setMembershipDuration(uint64)": {
          "params": {
            "duration": "The membership duration"
          }
        },
        "setMembershipFee(uint256)": {
          "params": {
            "fee": "The membership fee"
          }
        },
        "setMembershipMinPrice(uint256)": {
          "params": {
            "minPrice": "The minimum price for a membership"
          }
        },
        "setMembershipMintLimit(uint256)": {
          "params": {
            "limit": "The membership mint limit"
          }
        }
      },
      "version": 1
    },
    "userdoc": {
      "events": {
        "InterfaceAdded(bytes4)": {
          "notice": "Emitted when an interface is added to the contract via `_addInterface`."
        },
        "InterfaceRemoved(bytes4)": {
          "notice": "Emitted when an interface is removed from the contract via `_removeInterface`."
        }
      },
      "kind": "user",
      "methods": {
        "getDenominator()": {
          "notice": "Get the denominator"
        },
        "getFeeRecipient()": {
          "notice": "Get the fee recipient address"
        },
        "getMembershipBps()": {
          "notice": "Get the membership basis points"
        },
        "getMembershipDuration()": {
          "notice": "Get the membership duration"
        },
        "getMembershipFee()": {
          "notice": "Get the membership flat fee"
        },
        "getMembershipMinPrice()": {
          "notice": "Get the minimum price for a membership"
        },
        "getMembershipMintLimit()": {
          "notice": "Get the membership mint limit"
        },
        "setFeeRecipient(address)": {
          "notice": "Set the fee recipient address"
        },
        "setMembershipBps(uint16)": {
          "notice": "Set the membership basis points"
        },
        "setMembershipDuration(uint64)": {
          "notice": "Set the membership duration"
        },
        "setMembershipFee(uint256)": {
          "notice": "Set the membership flat fee"
        },
        "setMembershipMinPrice(uint256)": {
          "notice": "Set the minimum price for a membership"
        },
        "setMembershipMintLimit(uint256)": {
          "notice": "Set the membership mint limit"
        }
      },
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/src/factory/facets/platform/requirements/PlatformRequirementsFacet.sol": "PlatformRequirementsFacet"
    },
    "evmVersion": "paris",
    "libraries": {},
    "metadata": {
      "appendCBOR": false,
      "bytecodeHash": "none"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@openzeppelin/=lib/@openzeppelin/",
      ":@prb/math/=lib/@prb/math/src/",
      ":@prb/test/=lib/@prb/test/src/",
      ":account-abstraction/=lib/account-abstraction/contracts/",
      ":base64/=lib/base64/",
      ":ds-test/=lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":hardhat-deploy/=lib/hardhat-deploy/"
    ]
  },
  "sources": {
    "contracts/src/diamond/facets/Facet.sol": {
      "keccak256": "0x931702541a5e4a2756665e53baf1b04aa0418d5a9c635e519058905e21ae0c57",
      "license": "MIT",
      "urls": [
        "bzz-raw://b785043acac69be2d2545bc4492b2c08b6e931a53737f8508baf3f98c8743863",
        "dweb:/ipfs/QmeLzqURWDmXHJftmMXRsywdJw96CNDB9DQmgTpG1woYvc"
      ]
    },
    "contracts/src/diamond/facets/initializable/Initializable.sol": {
      "keccak256": "0xe02e99665b5acb22d5c508c3bda97c35acd2597ce0a58569a19cc12f0010da90",
      "license": "MIT",
      "urls": [
        "bzz-raw://b586a51dbe63e8763ae0b2b3dadd5c8559f47bc8cbaa0e9fe52aaec4c3677552",
        "dweb:/ipfs/QmRtaVikg6YDwzUAtY7WV793taZgT1ZxyMB4PLAEqGBeCC"
      ]
    },
    "contracts/src/diamond/facets/initializable/InitializableStorage.sol": {
      "keccak256": "0xf8170e6977d685c218f65185478fbb9916e64f63aab1dcd195056438466f458a",
      "license": "MIT",
      "urls": [
        "bzz-raw://83ea3cf77f012eef93d10593e3beded36b449611063fd8dfbdb44e4346f87eb4",
        "dweb:/ipfs/QmVasL7QnxXEmiUsLJzpfig8717zLUhZfyQxiBbFGDEVVg"
      ]
    },
    "contracts/src/diamond/facets/introspection/IERC165.sol": {
      "keccak256": "0x486758ee326820b0dd468c6a7a90fda8d67d48d3114792c587cee0e8417b366b",
      "license": "MIT",
      "urls": [
        "bzz-raw://b695090abcec8c2d487d73961265030fa4f64ecd84f6d80b85c6c7d4d9142ea0",
        "dweb:/ipfs/QmQTKuV2WEoy6vTCRxL39zEqubLUf9NhoC2BGB19CiYqRq"
      ]
    },
    "contracts/src/diamond/facets/introspection/IntrospectionBase.sol": {
      "keccak256": "0x93ac0d2f738615e69dbcfd5fa6ac5840ec48329ac92094605638bcf2abd6708f",
      "license": "MIT",
      "urls": [
        "bzz-raw://fbcb2cd0e47b6ef39bec6cbdeedf6e292e8849d4e25f4bb6c72ee574446b02f1",
        "dweb:/ipfs/QmcDwxFALaQBLbsGsjdttkQkE48PdKWq43XY7f34MxqZSw"
      ]
    },
    "contracts/src/diamond/facets/introspection/IntrospectionStorage.sol": {
      "keccak256": "0x306f41ef86bc5050a28c1dbf855d3f6f623be4aebc0a0f96474dae85979f7763",
      "license": "MIT",
      "urls": [
        "bzz-raw://dbad6f8e6685690ae75f6c9066972a45400b45307245feab8990af18a4c38e91",
        "dweb:/ipfs/QmcTUqiSL1z2nwokpNNsXQkjVTaFdFJiM2exguZpPDDXEM"
      ]
    },
    "contracts/src/diamond/facets/ownable/IERC173.sol": {
      "keccak256": "0x677cebaa56ee33950d04ba5baef02188da026beb7cf669bdf580410cb1f1c303",
      "license": "MIT",
      "urls": [
        "bzz-raw://d5be56219a4ab8d9709db7ffb74c73ee1be268b8f77308ef7a72d8f2820fb30b",
        "dweb:/ipfs/QmeTuAZMwRf3uRHMtHEd7M7LvGyRAEmoCikF4Pb6dCAKXd"
      ]
    },
    "contracts/src/diamond/facets/ownable/OwnableBase.sol": {
      "keccak256": "0x272abaecc104d5f23d77a623cf1548620d24b0f447eb2a12144e27561ff489f2",
      "license": "MIT",
      "urls": [
        "bzz-raw://fcb8c20ff7346bdc5dba82e6680cc0ea64087460a12153e3b6c3416f6addf875",
        "dweb:/ipfs/QmfEEufJBzudSDekQteQkb3CzmnzUPT3GDhNgVpHNC9xaf"
      ]
    },
    "contracts/src/diamond/facets/ownable/OwnableStorage.sol": {
      "keccak256": "0xda650482ce08c04110366cb01408aaabd01383d9c504b7cacfb2674aae688dcd",
      "license": "MIT",
      "urls": [
        "bzz-raw://694f42ffb353fccaa1eadf91dee3a3cee7253e3f357bcba2b175fd7be701e27e",
        "dweb:/ipfs/QmPxxVerATSYrNLp7snnSvNVsbLPm1wzHULhBbtR333eik"
      ]
    },
    "contracts/src/factory/facets/platform/requirements/IPlatformRequirements.sol": {
      "keccak256": "0xd1c61d42973382822d0b8256b5d308ad693dfa59240864cce0bec1bd4208e4c6",
      "license": "MIT",
      "urls": [
        "bzz-raw://bff6d50557810f7aa9de451f6ac2b279fe5983eefc0b38ef8be7ebb2ffde0f86",
        "dweb:/ipfs/QmS6DXYXtPTfePgtrUxH1vmPycsVoumBQRJZugjGButowT"
      ]
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsBase.sol": {
      "keccak256": "0xb256841987c7f77cadf430216a6b8bbff94d3d577d90def1a5d5253aa29a661b",
      "license": "MIT",
      "urls": [
        "bzz-raw://302e78d305305d70ba6036525664f2f7491ec16a0ccd5cdc132c999c7d214e73",
        "dweb:/ipfs/QmbE9LomwpRdQnNwdcsFTSz3bJMHWdTmca41wmEjVPAQxT"
      ]
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsFacet.sol": {
      "keccak256": "0x4651003ea985b35dfda0f55854e9d2b66f8ee1ed98e53e1965e0993db01a4770",
      "license": "MIT",
      "urls": [
        "bzz-raw://1acf0678e7e6291177a2a4c732fa61f0d8a42409c480490475515b9865df1cd9",
        "dweb:/ipfs/QmZKb23KKYTVb6DcnUFuWD7bQG3EmcJwt9TQ32iWcpVBPF"
      ]
    },
    "contracts/src/factory/facets/platform/requirements/PlatformRequirementsStorage.sol": {
      "keccak256": "0xf3c5696434fa3666260b4b6f5dfdd386184f513cf59d7e7bc012d87cfe56c9d6",
      "license": "MIT",
      "urls": [
        "bzz-raw://c0197f583dfad8dbde7e98503ad9d0ae996398caf51d8fd5cdd40aaee71feba6",
        "dweb:/ipfs/QmPN6QXdLiAxms2krCrqv9JJrmdru2kAC2C2tQUTbBkvyM"
      ]
    },
    "contracts/src/utils/libraries/BasisPoints.sol": {
      "keccak256": "0xfaa5790726afc20e29f2a00e67693a59ae85a045beaa95f8f58bcbcef01ed87b",
      "license": "MIT",
      "urls": [
        "bzz-raw://a2da5e15739fc7093ea7b935c6542f7c01d9c33843a3d1a1d8895db404f8160e",
        "dweb:/ipfs/QmYVUkSh3QX7u9rnKfqLeb9Rh8tko5Q3Gpry6KnhTRF58L"
      ]
    },
    "lib/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
      "license": "MIT",
      "urls": [
        "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
        "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
      ]
    },
    "lib/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
      "license": "MIT",
      "urls": [
        "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
        "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
      ]
    }
  },
  "version": 1
}