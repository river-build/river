/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface PlatformRequirementsFacetInterface extends utils.Interface {
  functions: {
    "__PlatformRequirements_init(address,uint16,uint256,uint256,uint64)": FunctionFragment;
    "getDenominator()": FunctionFragment;
    "getFeeRecipient()": FunctionFragment;
    "getMembershipBps()": FunctionFragment;
    "getMembershipDuration()": FunctionFragment;
    "getMembershipFee()": FunctionFragment;
    "getMembershipMintLimit()": FunctionFragment;
    "setFeeRecipient(address)": FunctionFragment;
    "setMembershipBps(uint16)": FunctionFragment;
    "setMembershipDuration(uint64)": FunctionFragment;
    "setMembershipFee(uint256)": FunctionFragment;
    "setMembershipMintLimit(uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "__PlatformRequirements_init"
      | "getDenominator"
      | "getFeeRecipient"
      | "getMembershipBps"
      | "getMembershipDuration"
      | "getMembershipFee"
      | "getMembershipMintLimit"
      | "setFeeRecipient"
      | "setMembershipBps"
      | "setMembershipDuration"
      | "setMembershipFee"
      | "setMembershipMintLimit"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "__PlatformRequirements_init",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getDenominator",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getFeeRecipient",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMembershipBps",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMembershipDuration",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMembershipFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getMembershipMintLimit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setFeeRecipient",
    values: [PromiseOrValue<string>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMembershipBps",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMembershipDuration",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMembershipFee",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "setMembershipMintLimit",
    values: [PromiseOrValue<BigNumberish>]
  ): string;

  decodeFunctionResult(
    functionFragment: "__PlatformRequirements_init",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDenominator",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getFeeRecipient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMembershipBps",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMembershipDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMembershipFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getMembershipMintLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFeeRecipient",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMembershipBps",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMembershipDuration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMembershipFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMembershipMintLimit",
    data: BytesLike
  ): Result;

  events: {
    "Initialized(uint32)": EventFragment;
    "InterfaceAdded(bytes4)": EventFragment;
    "InterfaceRemoved(bytes4)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
    "PlatformFeeRecipientSet(address)": EventFragment;
    "PlatformMembershipBpsSet(uint16)": EventFragment;
    "PlatformMembershipDurationSet(uint256)": EventFragment;
    "PlatformMembershipFeeSet(uint256)": EventFragment;
    "PlatformMembershipMintLimitSet(uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InterfaceAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "InterfaceRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlatformFeeRecipientSet"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlatformMembershipBpsSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PlatformMembershipDurationSet"
  ): EventFragment;
  getEvent(nameOrSignatureOrTopic: "PlatformMembershipFeeSet"): EventFragment;
  getEvent(
    nameOrSignatureOrTopic: "PlatformMembershipMintLimitSet"
  ): EventFragment;
}

export interface InitializedEventObject {
  version: number;
}
export type InitializedEvent = TypedEvent<[number], InitializedEventObject>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export interface InterfaceAddedEventObject {
  interfaceId: string;
}
export type InterfaceAddedEvent = TypedEvent<
  [string],
  InterfaceAddedEventObject
>;

export type InterfaceAddedEventFilter = TypedEventFilter<InterfaceAddedEvent>;

export interface InterfaceRemovedEventObject {
  interfaceId: string;
}
export type InterfaceRemovedEvent = TypedEvent<
  [string],
  InterfaceRemovedEventObject
>;

export type InterfaceRemovedEventFilter =
  TypedEventFilter<InterfaceRemovedEvent>;

export interface OwnershipTransferredEventObject {
  previousOwner: string;
  newOwner: string;
}
export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  OwnershipTransferredEventObject
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface PlatformFeeRecipientSetEventObject {
  recipient: string;
}
export type PlatformFeeRecipientSetEvent = TypedEvent<
  [string],
  PlatformFeeRecipientSetEventObject
>;

export type PlatformFeeRecipientSetEventFilter =
  TypedEventFilter<PlatformFeeRecipientSetEvent>;

export interface PlatformMembershipBpsSetEventObject {
  bps: number;
}
export type PlatformMembershipBpsSetEvent = TypedEvent<
  [number],
  PlatformMembershipBpsSetEventObject
>;

export type PlatformMembershipBpsSetEventFilter =
  TypedEventFilter<PlatformMembershipBpsSetEvent>;

export interface PlatformMembershipDurationSetEventObject {
  duration: BigNumber;
}
export type PlatformMembershipDurationSetEvent = TypedEvent<
  [BigNumber],
  PlatformMembershipDurationSetEventObject
>;

export type PlatformMembershipDurationSetEventFilter =
  TypedEventFilter<PlatformMembershipDurationSetEvent>;

export interface PlatformMembershipFeeSetEventObject {
  fee: BigNumber;
}
export type PlatformMembershipFeeSetEvent = TypedEvent<
  [BigNumber],
  PlatformMembershipFeeSetEventObject
>;

export type PlatformMembershipFeeSetEventFilter =
  TypedEventFilter<PlatformMembershipFeeSetEvent>;

export interface PlatformMembershipMintLimitSetEventObject {
  limit: BigNumber;
}
export type PlatformMembershipMintLimitSetEvent = TypedEvent<
  [BigNumber],
  PlatformMembershipMintLimitSetEventObject
>;

export type PlatformMembershipMintLimitSetEventFilter =
  TypedEventFilter<PlatformMembershipMintLimitSetEvent>;

export interface PlatformRequirementsFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: PlatformRequirementsFacetInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    __PlatformRequirements_init(
      feeRecipient: PromiseOrValue<string>,
      membershipBps: PromiseOrValue<BigNumberish>,
      membershipFee: PromiseOrValue<BigNumberish>,
      membershipMintLimit: PromiseOrValue<BigNumberish>,
      membershipDuration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    getDenominator(overrides?: CallOverrides): Promise<[BigNumber]>;

    getFeeRecipient(overrides?: CallOverrides): Promise<[string]>;

    getMembershipBps(overrides?: CallOverrides): Promise<[number]>;

    getMembershipDuration(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMembershipFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    getMembershipMintLimit(overrides?: CallOverrides): Promise<[BigNumber]>;

    setFeeRecipient(
      recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMembershipBps(
      bps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMembershipDuration(
      duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMembershipFee(
      fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    setMembershipMintLimit(
      limit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  __PlatformRequirements_init(
    feeRecipient: PromiseOrValue<string>,
    membershipBps: PromiseOrValue<BigNumberish>,
    membershipFee: PromiseOrValue<BigNumberish>,
    membershipMintLimit: PromiseOrValue<BigNumberish>,
    membershipDuration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  getDenominator(overrides?: CallOverrides): Promise<BigNumber>;

  getFeeRecipient(overrides?: CallOverrides): Promise<string>;

  getMembershipBps(overrides?: CallOverrides): Promise<number>;

  getMembershipDuration(overrides?: CallOverrides): Promise<BigNumber>;

  getMembershipFee(overrides?: CallOverrides): Promise<BigNumber>;

  getMembershipMintLimit(overrides?: CallOverrides): Promise<BigNumber>;

  setFeeRecipient(
    recipient: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMembershipBps(
    bps: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMembershipDuration(
    duration: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMembershipFee(
    fee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  setMembershipMintLimit(
    limit: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    __PlatformRequirements_init(
      feeRecipient: PromiseOrValue<string>,
      membershipBps: PromiseOrValue<BigNumberish>,
      membershipFee: PromiseOrValue<BigNumberish>,
      membershipMintLimit: PromiseOrValue<BigNumberish>,
      membershipDuration: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    getDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    getFeeRecipient(overrides?: CallOverrides): Promise<string>;

    getMembershipBps(overrides?: CallOverrides): Promise<number>;

    getMembershipDuration(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipFee(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipMintLimit(overrides?: CallOverrides): Promise<BigNumber>;

    setFeeRecipient(
      recipient: PromiseOrValue<string>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMembershipBps(
      bps: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMembershipDuration(
      duration: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMembershipFee(
      fee: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    setMembershipMintLimit(
      limit: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Initialized(uint32)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "InterfaceAdded(bytes4)"(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceAddedEventFilter;
    InterfaceAdded(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceAddedEventFilter;

    "InterfaceRemoved(bytes4)"(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceRemovedEventFilter;
    InterfaceRemoved(
      interfaceId?: PromiseOrValue<BytesLike> | null
    ): InterfaceRemovedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: PromiseOrValue<string> | null,
      newOwner?: PromiseOrValue<string> | null
    ): OwnershipTransferredEventFilter;

    "PlatformFeeRecipientSet(address)"(
      recipient?: PromiseOrValue<string> | null
    ): PlatformFeeRecipientSetEventFilter;
    PlatformFeeRecipientSet(
      recipient?: PromiseOrValue<string> | null
    ): PlatformFeeRecipientSetEventFilter;

    "PlatformMembershipBpsSet(uint16)"(
      bps?: null
    ): PlatformMembershipBpsSetEventFilter;
    PlatformMembershipBpsSet(bps?: null): PlatformMembershipBpsSetEventFilter;

    "PlatformMembershipDurationSet(uint256)"(
      duration?: null
    ): PlatformMembershipDurationSetEventFilter;
    PlatformMembershipDurationSet(
      duration?: null
    ): PlatformMembershipDurationSetEventFilter;

    "PlatformMembershipFeeSet(uint256)"(
      fee?: null
    ): PlatformMembershipFeeSetEventFilter;
    PlatformMembershipFeeSet(fee?: null): PlatformMembershipFeeSetEventFilter;

    "PlatformMembershipMintLimitSet(uint256)"(
      limit?: null
    ): PlatformMembershipMintLimitSetEventFilter;
    PlatformMembershipMintLimitSet(
      limit?: null
    ): PlatformMembershipMintLimitSetEventFilter;
  };

  estimateGas: {
    __PlatformRequirements_init(
      feeRecipient: PromiseOrValue<string>,
      membershipBps: PromiseOrValue<BigNumberish>,
      membershipFee: PromiseOrValue<BigNumberish>,
      membershipMintLimit: PromiseOrValue<BigNumberish>,
      membershipDuration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    getDenominator(overrides?: CallOverrides): Promise<BigNumber>;

    getFeeRecipient(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipBps(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipDuration(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipFee(overrides?: CallOverrides): Promise<BigNumber>;

    getMembershipMintLimit(overrides?: CallOverrides): Promise<BigNumber>;

    setFeeRecipient(
      recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMembershipBps(
      bps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMembershipDuration(
      duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMembershipFee(
      fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    setMembershipMintLimit(
      limit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    __PlatformRequirements_init(
      feeRecipient: PromiseOrValue<string>,
      membershipBps: PromiseOrValue<BigNumberish>,
      membershipFee: PromiseOrValue<BigNumberish>,
      membershipMintLimit: PromiseOrValue<BigNumberish>,
      membershipDuration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    getDenominator(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getFeeRecipient(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMembershipBps(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMembershipDuration(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getMembershipFee(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getMembershipMintLimit(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setFeeRecipient(
      recipient: PromiseOrValue<string>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMembershipBps(
      bps: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMembershipDuration(
      duration: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMembershipFee(
      fee: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    setMembershipMintLimit(
      limit: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
