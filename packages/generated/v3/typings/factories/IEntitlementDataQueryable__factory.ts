/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IEntitlementDataQueryable,
  IEntitlementDataQueryableInterface,
} from "../IEntitlementDataQueryable";

const _abi = [
  {
    type: "function",
    name: "getChannelEntitlementDataByPermission",
    inputs: [
      {
        name: "channelId",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IEntitlementDataQueryableBase.EntitlementData[]",
        components: [
          {
            name: "entitlementType",
            type: "string",
            internalType: "string",
          },
          {
            name: "entitlementData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getEntitlementDataByPermission",
    inputs: [
      {
        name: "permission",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple[]",
        internalType: "struct IEntitlementDataQueryableBase.EntitlementData[]",
        components: [
          {
            name: "entitlementType",
            type: "string",
            internalType: "string",
          },
          {
            name: "entitlementData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
] as const;

export class IEntitlementDataQueryable__factory {
  static readonly abi = _abi;
  static createInterface(): IEntitlementDataQueryableInterface {
    return new utils.Interface(_abi) as IEntitlementDataQueryableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEntitlementDataQueryable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IEntitlementDataQueryable;
  }
}
