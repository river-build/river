type Architect__ProxyInitializerSet @entity(immutable: true) {
  id: Bytes!
  proxyInitializer: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Initialized @entity(immutable: true) {
  id: Bytes!
  version: BigInt! # uint32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InterfaceAdded @entity(immutable: true) {
  id: Bytes!
  interfaceId: Bytes! # bytes4
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type InterfaceRemoved @entity(immutable: true) {
  id: Bytes!
  interfaceId: Bytes! # bytes4
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Paused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PermissionsAddedToChannelRole @entity(immutable: true) {
  id: Bytes!
  updater: Bytes! # address
  roleId: BigInt! # uint256
  channelId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PermissionsRemovedFromChannelRole @entity(immutable: true) {
  id: Bytes!
  updater: Bytes! # address
  roleId: BigInt! # uint256
  channelId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PermissionsUpdatedForChannelRole @entity(immutable: true) {
  id: Bytes!
  updater: Bytes! # address
  roleId: BigInt! # uint256
  channelId: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PricingModuleAdded @entity(immutable: true) {
  id: Bytes!
  module: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PricingModuleRemoved @entity(immutable: true) {
  id: Bytes!
  module: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type PricingModuleUpdated @entity(immutable: true) {
  id: Bytes!
  module: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleCreated @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  roleId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRemoved @entity(immutable: true) {
  id: Bytes!
  remover: Bytes! # address
  roleId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleUpdated @entity(immutable: true) {
  id: Bytes!
  updater: Bytes! # address
  roleId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type SpaceCreated @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  tokenId: BigInt! # uint256
  space: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Unpaused @entity(immutable: true) {
  id: Bytes!
  account: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
