FROM node:lts-alpine3.20 as builder

WORKDIR /river

# monorepo root config
COPY ./package.json ./package.json
COPY ./.yarn/plugins ./.yarn/plugins
COPY ./.yarn/releases ./.yarn/releases
COPY ./remappings.txt ./remappings.txt
COPY ./.yarnrc.yml ./.yarnrc.yml
COPY ./buf.yaml ./buf.yaml
COPY ./lerna.json ./lerna.json
COPY ./yarn.lock ./yarn.lock
COPY ./turbo.json ./turbo.json
COPY ./packages/tsconfig.base.json ./packages/tsconfig.base.json

# monorepo core dependencies
COPY ./protocol ./protocol

# monorepo scripts
COPY ./scripts ./scripts

# monorepo packages
COPY ./packages/eslint-config /river/packages/eslint-config
COPY ./packages/prettier-config /river/packages/prettier-config
COPY ./packages/generated /river/packages/generated
COPY ./packages/web3 /river/packages/web3
COPY ./packages/dlog /river/packages/dlog
COPY ./packages/proto /river/packages/proto
COPY ./packages/sdk /river/packages/sdk
COPY ./packages/encryption /river/packages/encryption
COPY ./packages/stream-metadata /river/packages/stream-metadata

# install dependencies and build
RUN apk add --no-cache git curl
RUN corepack enable
RUN yarn install

RUN yarn run turbo build --filter @river-build/stream-metadata

FROM node:lts-alpine3.20 as runner

COPY --from=builder /river/packages/stream-metadata/dist /river/packages/stream-metadata/dist

ENV NODE_ENV=production 
WORKDIR /river/packages/stream-metadata

CMD ["node", "./dist/node_esbuild.cjs"]