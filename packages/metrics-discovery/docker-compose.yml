services:
    river-metrics-discovery:
        container_name: river-metrics-discovery
        build:
            context: ../../
            dockerfile: ./packages/metrics-discovery/Dockerfile
        volumes:
            - ./prometheus/etc/:/river/packages/metrics-discovery/prometheus/etc:rw
        env_file:
            - ./.env
        ports:
            - '8080:8080'

    prometheus:
        depends_on:
            river-metrics-discovery:
                condition: service_healthy
        container_name: prometheus
        image: prom/prometheus:latest
        user: root
        labels:
            com.datadoghq.ad.check_names: '["prometheus"]'
            com.datadoghq.ad.init_configs: '[{}]'
            com.datadoghq.ad.instances: '[{"prometheus_url": "http://prometheus:9090/federate?match%5B%5D=%7Bjob%3D%22river-node%22%7D", "namespace": "river-node", "metrics": ["river*"], "max_returned_metrics": 999999999999}]'
            # collect_counters_with_distributions
        volumes:
            - ./prometheus/etc:/prometheus/etc
        command:
            - --config.file=/prometheus/etc/prometheus.yml
            - --log.level=debug
        ports:
            - '9090:9090'

    datadog:
        depends_on:
            river-metrics-discovery:
                condition: service_healthy
        container_name: datadog
        image: datadog/agent:7
        ports:
            - '8125:8125/udp'
            - '8126:8126'
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /proc/:/host/proc/:ro
            - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
        env_file:
            - ./.env
