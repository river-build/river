syntax = "proto3";
package river;
option go_package = "github.com/towns-protocol/towns/core/node/protocol";

// BotRegistryService allows bots and bot owners to register bots, and set bot-related preferences for messages added
// to channels the bot has membership in.
//
// These functions are all authenticated, with the exception of GetStatus, and require a session token to be passed
// through the authorization metadata.
// This session token can be obtained from the AuthenticationService. If the session token is missing or invalid an
// Err_UNAUTHENTICATED (code=16) is returned.
service BotRegistryService {
    rpc RegisterWebhook(RegisterWebhookRequest) returns (RegisterWebhookResponse);
    rpc GetStatus(GetStatusRequest) returns (GetStatusResponse);
}

message RegisterWebhookRequest {
    // public key of the bot
    bytes bot_id = 1;

    // public key of the bot owner
    bytes bot_owner_id = 2;

    // Webhook for sending requests to the bot service
    string webhook_url = 3;
}

message RegisterWebhookResponse { }

message GetStatusRequest {
    // public key of the bot
    bytes bot_id = 1;
}

message GetStatusResponse {
    // is_registered describes if the bot is registered with a webhook
    bool is_registered = 1;

    // valid_response is set to true if calling the webhook results in a 200 with version
    // info included in the response body.
    bool valid_response = 2;

    // version info returned by the webhook
    string version_info = 3;
}
