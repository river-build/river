syntax = "proto3";
package mls_tools;
option go_package = "./mls_tools";

enum ValidationResult {
    UNKNOWN = 0;
    VALID = 1;
    INVALID_GROUP_INFO = 2;
    INVALID_EXTERNAL_GROUP = 3;
    INVALID_EXTERNAL_GROUP_EPOCH = 4;
    INVALID_EXTERNAL_GROUP_MISSING_TREE = 5;
    INVALID_GROUP_INFO_EPOCH = 6;
    INVALID_GROUP_INFO_MISSING_PUB_KEY_EXTENSION = 7;
    INVALID_COMMIT = 8;
    INVALID_GROUP_INFO_GROUP_ID_MISMATCH = 9;
    INVALID_EXTERNAL_GROUP_TOO_MANY_MEMBERS = 10;
    INVALID_PUBLIC_SIGNATURE_KEY = 11;
    INVALID_KEY_PACKAGE = 12;
}

message MlsRequest {
    oneof content {
        InitialGroupInfoRequest initial_group_info = 1;
        ExternalJoinRequest external_join = 2;
        SnapshotExternalGroupRequest snapshot_external_group = 3;
        KeyPackageRequest key_package = 4;
    }
}

message MlsGroupState {
    bytes external_group_snapshot = 1;
    repeated bytes commits = 2;
}

message InitialGroupInfoRequest {
    bytes signature_public_key = 1;
    bytes group_info_message = 2;
    bytes external_group_snapshot = 3;
}

message InitialGroupInfoResponse {
    ValidationResult result = 1;
}

message ExternalJoinRequest {
    MlsGroupState group_state = 1;
    bytes proposed_external_join_info_message = 2;
    bytes proposed_external_join_commit = 3;
    bytes signature_public_key = 4;
}

message ExternalJoinResponse {
    ValidationResult result = 1;
}

message KeyPackageRequest {
    MlsGroupState group_state = 1;
    bytes key_package = 2;
    bytes signature_public_key = 3;
}

message KeyPackageResponse {
    ValidationResult result = 1;
}

message SnapshotExternalGroupRequest {
    // commits may or may not be accompanied by a new group_info_message
    message CommitInfo {
        bytes commit = 1;
        optional bytes group_info_message = 2;
    }
    bytes external_group_snapshot = 1;
    bytes group_info_message = 2;
    repeated CommitInfo commits = 3;
}

message SnapshotExternalGroupResponse {
    bytes external_group_snapshot = 1;
    bytes group_info_message = 2;
}

message InfoRequest {}
message InfoResponse {
    string graffiti = 1;
    string git = 2;
}
