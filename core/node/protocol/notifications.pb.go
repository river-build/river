// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: notifications.proto

package protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DmChannelSettingValue specifies if the user wants to receive notifications for DM streams.
// This can be overwritten with DM channel specific configuration.
type DmChannelSettingValue int32

const (
	// DM_UNSPECIFIED not set, assumes DM_MESSAGES_YES as a default.
	DmChannelSettingValue_DM_UNSPECIFIED DmChannelSettingValue = 0
	// DM_MESSAGES_YES indicates that the user wants to receive notifications for DM channels.
	DmChannelSettingValue_DM_MESSAGES_YES DmChannelSettingValue = 1
	// DM_MESSAGES_NO indicates that the user doesn't want to receive notifications for DM channels.
	DmChannelSettingValue_DM_MESSAGES_NO DmChannelSettingValue = 2
	// DM_MESSAGES_NO_AND_MUTE indicates that the user doesn't want to receive notifications for DM channels
	// and the UI should not render any feedback that a message was received.
	DmChannelSettingValue_DM_MESSAGES_NO_AND_MUTE DmChannelSettingValue = 3
)

// Enum value maps for DmChannelSettingValue.
var (
	DmChannelSettingValue_name = map[int32]string{
		0: "DM_UNSPECIFIED",
		1: "DM_MESSAGES_YES",
		2: "DM_MESSAGES_NO",
		3: "DM_MESSAGES_NO_AND_MUTE",
	}
	DmChannelSettingValue_value = map[string]int32{
		"DM_UNSPECIFIED":          0,
		"DM_MESSAGES_YES":         1,
		"DM_MESSAGES_NO":          2,
		"DM_MESSAGES_NO_AND_MUTE": 3,
	}
)

func (x DmChannelSettingValue) Enum() *DmChannelSettingValue {
	p := new(DmChannelSettingValue)
	*p = x
	return p
}

func (x DmChannelSettingValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DmChannelSettingValue) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_proto_enumTypes[0].Descriptor()
}

func (DmChannelSettingValue) Type() protoreflect.EnumType {
	return &file_notifications_proto_enumTypes[0]
}

func (x DmChannelSettingValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DmChannelSettingValue.Descriptor instead.
func (DmChannelSettingValue) EnumDescriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{0}
}

// GdmChannelSettingValue is a default setting that is applied to all GDM streams a user is in and can be
// overwritten by GDM channel specific settings.
type GdmChannelSettingValue int32

const (
	// GDM_UNSPECIFIED not set, assumes GDM_MESSAGES_ALL as a default.
	GdmChannelSettingValue_GDM_UNSPECIFIED GdmChannelSettingValue = 0
	// GDM_MESSAGES_NO indicates that the user will not receive notifications for GDM channels.
	GdmChannelSettingValue_GDM_MESSAGES_NO GdmChannelSettingValue = 1
	// GDM_MESSAGES_NO_AND_MUTE indicates that the user doesn't want to receive notifications for GDM channels
	// and the UI should not render any feedback that a message was received.
	GdmChannelSettingValue_GDM_MESSAGES_NO_AND_MUTE GdmChannelSettingValue = 2
	// GDM_ONLY_MENTIONS_REPLIES_REACTIONS indicates that the user receives notifications for messages added to
	// GDM channels that are either a direct reply or a reaction to his own messages.
	GdmChannelSettingValue_GDM_ONLY_MENTIONS_REPLIES_REACTIONS GdmChannelSettingValue = 3
	// GDM_MESSAGES_ALL indicates that the user receives notifications for all messages in GDM channels.
	// This is the default.
	GdmChannelSettingValue_GDM_MESSAGES_ALL GdmChannelSettingValue = 4
)

// Enum value maps for GdmChannelSettingValue.
var (
	GdmChannelSettingValue_name = map[int32]string{
		0: "GDM_UNSPECIFIED",
		1: "GDM_MESSAGES_NO",
		2: "GDM_MESSAGES_NO_AND_MUTE",
		3: "GDM_ONLY_MENTIONS_REPLIES_REACTIONS",
		4: "GDM_MESSAGES_ALL",
	}
	GdmChannelSettingValue_value = map[string]int32{
		"GDM_UNSPECIFIED":                     0,
		"GDM_MESSAGES_NO":                     1,
		"GDM_MESSAGES_NO_AND_MUTE":            2,
		"GDM_ONLY_MENTIONS_REPLIES_REACTIONS": 3,
		"GDM_MESSAGES_ALL":                    4,
	}
)

func (x GdmChannelSettingValue) Enum() *GdmChannelSettingValue {
	p := new(GdmChannelSettingValue)
	*p = x
	return p
}

func (x GdmChannelSettingValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GdmChannelSettingValue) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_proto_enumTypes[1].Descriptor()
}

func (GdmChannelSettingValue) Type() protoreflect.EnumType {
	return &file_notifications_proto_enumTypes[1]
}

func (x GdmChannelSettingValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GdmChannelSettingValue.Descriptor instead.
func (GdmChannelSettingValue) EnumDescriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{1}
}

// SpaceSettingValue is a user specified setting that is applied to all channels in a space by default and can be
// overwritten with channel specific settings.
type SpaceChannelSettingValue int32

const (
	// SPACE_CHANNEL_SETTING_UNSPECIFIED not set, assumes SPACE_SETTING_ONLY_MENTIONS_REPLIES_REACTIONS as default.
	SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_UNSPECIFIED SpaceChannelSettingValue = 0
	// SPACE_CHANNEL_SETTING_NO_MESSAGES indicates that the user won't receive notifications of any channel in the space.
	SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_NO_MESSAGES SpaceChannelSettingValue = 1
	// SPACE_CHANNEL_SETTING_NO_MESSAGES_AND_MUTE indicates that the user won't receive notifications of any channel in
	// the space and the UI must not render any feedback that a message was received.
	SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_NO_MESSAGES_AND_MUTE SpaceChannelSettingValue = 2
	// SPACE_CHANNEL_SETTING_ONLY_MENTIONS_REPLIES_REACTIONS indicates that the user will receive notifications for
	// messages that either the user is mentioned in or are a direct reply/reaction to his own message. This is the
	// default.
	SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_ONLY_MENTIONS_REPLIES_REACTIONS SpaceChannelSettingValue = 3
	// SPACE_CHANNEL_SETTING_MESSAGES_ALL indicates that the user will receive notifications for all types of
	// messages/reactions for all channels in the space.
	SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_MESSAGES_ALL SpaceChannelSettingValue = 4
)

// Enum value maps for SpaceChannelSettingValue.
var (
	SpaceChannelSettingValue_name = map[int32]string{
		0: "SPACE_CHANNEL_SETTING_UNSPECIFIED",
		1: "SPACE_CHANNEL_SETTING_NO_MESSAGES",
		2: "SPACE_CHANNEL_SETTING_NO_MESSAGES_AND_MUTE",
		3: "SPACE_CHANNEL_SETTING_ONLY_MENTIONS_REPLIES_REACTIONS",
		4: "SPACE_CHANNEL_SETTING_MESSAGES_ALL",
	}
	SpaceChannelSettingValue_value = map[string]int32{
		"SPACE_CHANNEL_SETTING_UNSPECIFIED":                     0,
		"SPACE_CHANNEL_SETTING_NO_MESSAGES":                     1,
		"SPACE_CHANNEL_SETTING_NO_MESSAGES_AND_MUTE":            2,
		"SPACE_CHANNEL_SETTING_ONLY_MENTIONS_REPLIES_REACTIONS": 3,
		"SPACE_CHANNEL_SETTING_MESSAGES_ALL":                    4,
	}
)

func (x SpaceChannelSettingValue) Enum() *SpaceChannelSettingValue {
	p := new(SpaceChannelSettingValue)
	*p = x
	return p
}

func (x SpaceChannelSettingValue) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceChannelSettingValue) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_proto_enumTypes[2].Descriptor()
}

func (SpaceChannelSettingValue) Type() protoreflect.EnumType {
	return &file_notifications_proto_enumTypes[2]
}

func (x SpaceChannelSettingValue) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceChannelSettingValue.Descriptor instead.
func (SpaceChannelSettingValue) EnumDescriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2}
}

type APNEnvironment int32

const (
	// APN_ENVIRONMENT_UNSPECIFIED is invalid.
	APNEnvironment_APN_ENVIRONMENT_UNSPECIFIED APNEnvironment = 0
	// APN_ENVIRONMENT_PRODUCTION uses Apple's APN service to deliver notifications.
	APNEnvironment_APN_ENVIRONMENT_PRODUCTION APNEnvironment = 1
	// APN_ENVIRONMENT_SANDBOX uses Apple's sandbox environment to send notifications.
	// Only used for development purposes.
	APNEnvironment_APN_ENVIRONMENT_SANDBOX APNEnvironment = 2
)

// Enum value maps for APNEnvironment.
var (
	APNEnvironment_name = map[int32]string{
		0: "APN_ENVIRONMENT_UNSPECIFIED",
		1: "APN_ENVIRONMENT_PRODUCTION",
		2: "APN_ENVIRONMENT_SANDBOX",
	}
	APNEnvironment_value = map[string]int32{
		"APN_ENVIRONMENT_UNSPECIFIED": 0,
		"APN_ENVIRONMENT_PRODUCTION":  1,
		"APN_ENVIRONMENT_SANDBOX":     2,
	}
)

func (x APNEnvironment) Enum() *APNEnvironment {
	p := new(APNEnvironment)
	*p = x
	return p
}

func (x APNEnvironment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APNEnvironment) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_proto_enumTypes[3].Descriptor()
}

func (APNEnvironment) Type() protoreflect.EnumType {
	return &file_notifications_proto_enumTypes[3]
}

func (x APNEnvironment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APNEnvironment.Descriptor instead.
func (APNEnvironment) EnumDescriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{3}
}

// NotificationPushVersion specifies the notification format version.
type NotificationPushVersion int32

const (
	NotificationPushVersion_NOTIFICATION_PUSH_VERSION_UNSPECIFIED NotificationPushVersion = 0
	NotificationPushVersion_NOTIFICATION_PUSH_VERSION_1           NotificationPushVersion = 1
	NotificationPushVersion_NOTIFICATION_PUSH_VERSION_2           NotificationPushVersion = 2
)

// Enum value maps for NotificationPushVersion.
var (
	NotificationPushVersion_name = map[int32]string{
		0: "NOTIFICATION_PUSH_VERSION_UNSPECIFIED",
		1: "NOTIFICATION_PUSH_VERSION_1",
		2: "NOTIFICATION_PUSH_VERSION_2",
	}
	NotificationPushVersion_value = map[string]int32{
		"NOTIFICATION_PUSH_VERSION_UNSPECIFIED": 0,
		"NOTIFICATION_PUSH_VERSION_1":           1,
		"NOTIFICATION_PUSH_VERSION_2":           2,
	}
)

func (x NotificationPushVersion) Enum() *NotificationPushVersion {
	p := new(NotificationPushVersion)
	*p = x
	return p
}

func (x NotificationPushVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationPushVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_notifications_proto_enumTypes[4].Descriptor()
}

func (NotificationPushVersion) Type() protoreflect.EnumType {
	return &file_notifications_proto_enumTypes[4]
}

func (x NotificationPushVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationPushVersion.Descriptor instead.
func (NotificationPushVersion) EnumDescriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{4}
}

type GetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetSettingsRequest) Reset() {
	*x = GetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsRequest) ProtoMessage() {}

func (x *GetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsRequest.ProtoReflect.Descriptor instead.
func (*GetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{0}
}

type GetSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user id for which to retrieve settings
	UserId []byte `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// space holds specific settings for spaces and channels within a space
	Space []*SpaceSetting `protobuf:"bytes,2,rep,name=space,proto3" json:"space,omitempty"`
	// dm_global is the default setting that is applied to all DM channels and can be overwritten by channel specific
	// settings with dm_gdm_channels.
	DmGlobal DmChannelSettingValue `protobuf:"varint,3,opt,name=dm_global,json=dmGlobal,proto3,enum=river.DmChannelSettingValue" json:"dm_global,omitempty"`
	// gdm_global is the default setting that is applied to all GDM channels and can be overwritten by channel specific
	// settings with dm_gdm_channels.
	GdmGlobal GdmChannelSettingValue `protobuf:"varint,4,opt,name=gdm_global,json=gdmGlobal,proto3,enum=river.GdmChannelSettingValue" json:"gdm_global,omitempty"`
	// dm_channels holds specific settings for DM channels
	DmChannels []*DmChannelSetting `protobuf:"bytes,5,rep,name=dm_channels,json=dmChannels,proto3" json:"dm_channels,omitempty"`
	// gdm_channels holds specific settings for GDM channels
	GdmChannels []*GdmChannelSetting `protobuf:"bytes,6,rep,name=gdm_channels,json=gdmChannels,proto3" json:"gdm_channels,omitempty"`
	// web_subscriptions is the list of web push subscriptions
	WebSubscriptions []*WebPushSubscriptionObject `protobuf:"bytes,7,rep,name=web_subscriptions,json=webSubscriptions,proto3" json:"web_subscriptions,omitempty"`
	// apn_subscriptions is the list of APN push subscriptions
	ApnSubscriptions []*APNSubscription `protobuf:"bytes,8,rep,name=apn_subscriptions,json=apnSubscriptions,proto3" json:"apn_subscriptions,omitempty"`
}

func (x *GetSettingsResponse) Reset() {
	*x = GetSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSettingsResponse) ProtoMessage() {}

func (x *GetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSettingsResponse.ProtoReflect.Descriptor instead.
func (*GetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{1}
}

func (x *GetSettingsResponse) GetUserId() []byte {
	if x != nil {
		return x.UserId
	}
	return nil
}

func (x *GetSettingsResponse) GetSpace() []*SpaceSetting {
	if x != nil {
		return x.Space
	}
	return nil
}

func (x *GetSettingsResponse) GetDmGlobal() DmChannelSettingValue {
	if x != nil {
		return x.DmGlobal
	}
	return DmChannelSettingValue_DM_UNSPECIFIED
}

func (x *GetSettingsResponse) GetGdmGlobal() GdmChannelSettingValue {
	if x != nil {
		return x.GdmGlobal
	}
	return GdmChannelSettingValue_GDM_UNSPECIFIED
}

func (x *GetSettingsResponse) GetDmChannels() []*DmChannelSetting {
	if x != nil {
		return x.DmChannels
	}
	return nil
}

func (x *GetSettingsResponse) GetGdmChannels() []*GdmChannelSetting {
	if x != nil {
		return x.GdmChannels
	}
	return nil
}

func (x *GetSettingsResponse) GetWebSubscriptions() []*WebPushSubscriptionObject {
	if x != nil {
		return x.WebSubscriptions
	}
	return nil
}

func (x *GetSettingsResponse) GetApnSubscriptions() []*APNSubscription {
	if x != nil {
		return x.ApnSubscriptions
	}
	return nil
}

type SetSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dm_global holds the default config setting that is applied to all DM channels unless overwritten by a DM specif
	// preference.
	DmGlobal DmChannelSettingValue `protobuf:"varint,1,opt,name=dm_global,json=dmGlobal,proto3,enum=river.DmChannelSettingValue" json:"dm_global,omitempty"`
	// dm_channels holds DM channel specific preferences that overwrite dm_global.
	DmChannels []*DmChannelSetting `protobuf:"bytes,2,rep,name=dm_channels,json=dmChannels,proto3" json:"dm_channels,omitempty"`
	// gdm_global is the default setting that is applied to all GDM channels and can be overwritten by channel specific
	// settings with dm_gdm_channels.
	GdmGlobal GdmChannelSettingValue `protobuf:"varint,3,opt,name=gdm_global,json=gdmGlobal,proto3,enum=river.GdmChannelSettingValue" json:"gdm_global,omitempty"`
	// dm_gdm_channels holds settings for GDM channels that overwrite the default setting in gdm_global.
	GdmChannels []*GdmChannelSetting `protobuf:"bytes,4,rep,name=gdm_channels,json=gdmChannels,proto3" json:"gdm_channels,omitempty"`
	// spaces holds specific settings for spaces and their channels.
	Spaces []*SpaceSetting `protobuf:"bytes,5,rep,name=spaces,proto3" json:"spaces,omitempty"`
}

func (x *SetSettingsRequest) Reset() {
	*x = SetSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingsRequest) ProtoMessage() {}

func (x *SetSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetSettingsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{2}
}

func (x *SetSettingsRequest) GetDmGlobal() DmChannelSettingValue {
	if x != nil {
		return x.DmGlobal
	}
	return DmChannelSettingValue_DM_UNSPECIFIED
}

func (x *SetSettingsRequest) GetDmChannels() []*DmChannelSetting {
	if x != nil {
		return x.DmChannels
	}
	return nil
}

func (x *SetSettingsRequest) GetGdmGlobal() GdmChannelSettingValue {
	if x != nil {
		return x.GdmGlobal
	}
	return GdmChannelSettingValue_GDM_UNSPECIFIED
}

func (x *SetSettingsRequest) GetGdmChannels() []*GdmChannelSetting {
	if x != nil {
		return x.GdmChannels
	}
	return nil
}

func (x *SetSettingsRequest) GetSpaces() []*SpaceSetting {
	if x != nil {
		return x.Spaces
	}
	return nil
}

type SetSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSettingsResponse) Reset() {
	*x = SetSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSettingsResponse) ProtoMessage() {}

func (x *SetSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetSettingsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{3}
}

// DmChannelSetting hold settings specific for a DM.
type DmChannelSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel_id points to the channel for which this setting applies.
	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// setting indicates if the user wants to receive notifications for the channel within the space.
	Value DmChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.DmChannelSettingValue" json:"value,omitempty"`
}

func (x *DmChannelSetting) Reset() {
	*x = DmChannelSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DmChannelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DmChannelSetting) ProtoMessage() {}

func (x *DmChannelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DmChannelSetting.ProtoReflect.Descriptor instead.
func (*DmChannelSetting) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{4}
}

func (x *DmChannelSetting) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *DmChannelSetting) GetValue() DmChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return DmChannelSettingValue_DM_UNSPECIFIED
}

// GdmChannelSetting hold settings specific for a GDM.
type GdmChannelSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel_id points to the channel for which this setting applies.
	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// setting indicates if the user wants to receive notifications for the channel.
	Value GdmChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.GdmChannelSettingValue" json:"value,omitempty"`
}

func (x *GdmChannelSetting) Reset() {
	*x = GdmChannelSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdmChannelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdmChannelSetting) ProtoMessage() {}

func (x *GdmChannelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdmChannelSetting.ProtoReflect.Descriptor instead.
func (*GdmChannelSetting) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{5}
}

func (x *GdmChannelSetting) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *GdmChannelSetting) GetValue() GdmChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return GdmChannelSettingValue_GDM_UNSPECIFIED
}

type SpaceChannelSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel_id points to the channel for which this setting applies.
	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// setting indicates if the user wants to receive notifications for the channel.
	Value SpaceChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.SpaceChannelSettingValue" json:"value,omitempty"`
}

func (x *SpaceChannelSetting) Reset() {
	*x = SpaceChannelSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceChannelSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceChannelSetting) ProtoMessage() {}

func (x *SpaceChannelSetting) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceChannelSetting.ProtoReflect.Descriptor instead.
func (*SpaceChannelSetting) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{6}
}

func (x *SpaceChannelSetting) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *SpaceChannelSetting) GetValue() SpaceChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_UNSPECIFIED
}

// SpaceSettings hold settings that applied to all streams within the space.
// These can be overwritten by channel specific settings.
type SpaceSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// space channel id
	SpaceId []byte `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// value is applied to all channels within the space unless overwritten by a channel specific setting.
	Value SpaceChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.SpaceChannelSettingValue" json:"value,omitempty"`
	// channels holds channel specific settings for channels within the space
	Channels []*SpaceChannelSetting `protobuf:"bytes,3,rep,name=channels,proto3" json:"channels,omitempty"`
}

func (x *SpaceSetting) Reset() {
	*x = SpaceSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceSetting) ProtoMessage() {}

func (x *SpaceSetting) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceSetting.ProtoReflect.Descriptor instead.
func (*SpaceSetting) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceSetting) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

func (x *SpaceSetting) GetValue() SpaceChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_UNSPECIFIED
}

func (x *SpaceSetting) GetChannels() []*SpaceChannelSetting {
	if x != nil {
		return x.Channels
	}
	return nil
}

type SetDmGdmSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dm_global is the default setting that is applied to all DM channels and can be overwritten by channel specific
	// settings
	DmGlobal DmChannelSettingValue `protobuf:"varint,1,opt,name=dm_global,json=dmGlobal,proto3,enum=river.DmChannelSettingValue" json:"dm_global,omitempty"`
	// gdm_global is the default setting that is applied to all GDM channels and can be overwritten by channel specific
	// settings
	GdmGlobal GdmChannelSettingValue `protobuf:"varint,2,opt,name=gdm_global,json=gdmGlobal,proto3,enum=river.GdmChannelSettingValue" json:"gdm_global,omitempty"`
}

func (x *SetDmGdmSettingsRequest) Reset() {
	*x = SetDmGdmSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDmGdmSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDmGdmSettingsRequest) ProtoMessage() {}

func (x *SetDmGdmSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDmGdmSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetDmGdmSettingsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{8}
}

func (x *SetDmGdmSettingsRequest) GetDmGlobal() DmChannelSettingValue {
	if x != nil {
		return x.DmGlobal
	}
	return DmChannelSettingValue_DM_UNSPECIFIED
}

func (x *SetDmGdmSettingsRequest) GetGdmGlobal() GdmChannelSettingValue {
	if x != nil {
		return x.GdmGlobal
	}
	return GdmChannelSettingValue_GDM_UNSPECIFIED
}

type SetDmGdmSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDmGdmSettingsResponse) Reset() {
	*x = SetDmGdmSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDmGdmSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDmGdmSettingsResponse) ProtoMessage() {}

func (x *SetDmGdmSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDmGdmSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetDmGdmSettingsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{9}
}

type SetDmChannelSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// dm channel id
	DmChannelId []byte `protobuf:"bytes,1,opt,name=dm_channel_id,json=dmChannelId,proto3" json:"dm_channel_id,omitempty"`
	// dm setting
	Value DmChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.DmChannelSettingValue" json:"value,omitempty"`
}

func (x *SetDmChannelSettingRequest) Reset() {
	*x = SetDmChannelSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDmChannelSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDmChannelSettingRequest) ProtoMessage() {}

func (x *SetDmChannelSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDmChannelSettingRequest.ProtoReflect.Descriptor instead.
func (*SetDmChannelSettingRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{10}
}

func (x *SetDmChannelSettingRequest) GetDmChannelId() []byte {
	if x != nil {
		return x.DmChannelId
	}
	return nil
}

func (x *SetDmChannelSettingRequest) GetValue() DmChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return DmChannelSettingValue_DM_UNSPECIFIED
}

type SetDmChannelSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDmChannelSettingResponse) Reset() {
	*x = SetDmChannelSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDmChannelSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDmChannelSettingResponse) ProtoMessage() {}

func (x *SetDmChannelSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDmChannelSettingResponse.ProtoReflect.Descriptor instead.
func (*SetDmChannelSettingResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{11}
}

type SetGdmChannelSettingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// gdm channel id
	GdmChannelId []byte `protobuf:"bytes,1,opt,name=gdm_channel_id,json=gdmChannelId,proto3" json:"gdm_channel_id,omitempty"`
	// dm setting
	Value GdmChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.GdmChannelSettingValue" json:"value,omitempty"`
}

func (x *SetGdmChannelSettingRequest) Reset() {
	*x = SetGdmChannelSettingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGdmChannelSettingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGdmChannelSettingRequest) ProtoMessage() {}

func (x *SetGdmChannelSettingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGdmChannelSettingRequest.ProtoReflect.Descriptor instead.
func (*SetGdmChannelSettingRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{12}
}

func (x *SetGdmChannelSettingRequest) GetGdmChannelId() []byte {
	if x != nil {
		return x.GdmChannelId
	}
	return nil
}

func (x *SetGdmChannelSettingRequest) GetValue() GdmChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return GdmChannelSettingValue_GDM_UNSPECIFIED
}

type SetGdmChannelSettingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetGdmChannelSettingResponse) Reset() {
	*x = SetGdmChannelSettingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetGdmChannelSettingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetGdmChannelSettingResponse) ProtoMessage() {}

func (x *SetGdmChannelSettingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetGdmChannelSettingResponse.ProtoReflect.Descriptor instead.
func (*SetGdmChannelSettingResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{13}
}

type SetSpaceSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// space channel id
	SpaceId []byte `protobuf:"bytes,1,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// value are applied to all channels within the space.
	Value SpaceChannelSettingValue `protobuf:"varint,2,opt,name=value,proto3,enum=river.SpaceChannelSettingValue" json:"value,omitempty"`
}

func (x *SetSpaceSettingsRequest) Reset() {
	*x = SetSpaceSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceSettingsRequest) ProtoMessage() {}

func (x *SetSpaceSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetSpaceSettingsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{14}
}

func (x *SetSpaceSettingsRequest) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

func (x *SetSpaceSettingsRequest) GetValue() SpaceChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_UNSPECIFIED
}

type SetSpaceSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSpaceSettingsResponse) Reset() {
	*x = SetSpaceSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceSettingsResponse) ProtoMessage() {}

func (x *SetSpaceSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetSpaceSettingsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{15}
}

type SetSpaceChannelSettingsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// channel_id points to the channel for which this setting applies.
	ChannelId []byte `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	// space_id this channel is part of
	SpaceId []byte `protobuf:"bytes,2,opt,name=space_id,json=spaceId,proto3" json:"space_id,omitempty"`
	// value indicates the user overwritten value or a channel default must be used.
	Value SpaceChannelSettingValue `protobuf:"varint,3,opt,name=value,proto3,enum=river.SpaceChannelSettingValue" json:"value,omitempty"`
}

func (x *SetSpaceChannelSettingsRequest) Reset() {
	*x = SetSpaceChannelSettingsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceChannelSettingsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceChannelSettingsRequest) ProtoMessage() {}

func (x *SetSpaceChannelSettingsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceChannelSettingsRequest.ProtoReflect.Descriptor instead.
func (*SetSpaceChannelSettingsRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{16}
}

func (x *SetSpaceChannelSettingsRequest) GetChannelId() []byte {
	if x != nil {
		return x.ChannelId
	}
	return nil
}

func (x *SetSpaceChannelSettingsRequest) GetSpaceId() []byte {
	if x != nil {
		return x.SpaceId
	}
	return nil
}

func (x *SetSpaceChannelSettingsRequest) GetValue() SpaceChannelSettingValue {
	if x != nil {
		return x.Value
	}
	return SpaceChannelSettingValue_SPACE_CHANNEL_SETTING_UNSPECIFIED
}

type SetSpaceChannelSettingsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSpaceChannelSettingsResponse) Reset() {
	*x = SetSpaceChannelSettingsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpaceChannelSettingsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpaceChannelSettingsResponse) ProtoMessage() {}

func (x *SetSpaceChannelSettingsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpaceChannelSettingsResponse.ProtoReflect.Descriptor instead.
func (*SetSpaceChannelSettingsResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{17}
}

type WebPushSubscriptionObjectKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An Elliptic curve Diffie–Hellman public key on the P-256 curve (that is, the NIST
	// secp256r1 elliptic curve) and obtained from the browser when subscribing.
	P256Dh string `protobuf:"bytes,1,opt,name=p256dh,proto3" json:"p256dh,omitempty"`
	// An authentication secret and obtained from the browser when subscribing.
	Auth string `protobuf:"bytes,2,opt,name=auth,proto3" json:"auth,omitempty"`
}

func (x *WebPushSubscriptionObjectKeys) Reset() {
	*x = WebPushSubscriptionObjectKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPushSubscriptionObjectKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPushSubscriptionObjectKeys) ProtoMessage() {}

func (x *WebPushSubscriptionObjectKeys) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPushSubscriptionObjectKeys.ProtoReflect.Descriptor instead.
func (*WebPushSubscriptionObjectKeys) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{18}
}

func (x *WebPushSubscriptionObjectKeys) GetP256Dh() string {
	if x != nil {
		return x.P256Dh
	}
	return ""
}

func (x *WebPushSubscriptionObjectKeys) GetAuth() string {
	if x != nil {
		return x.Auth
	}
	return ""
}

type WebPushSubscriptionObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A string containing the endpoint associated with the push subscription.
	Endpoint string `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	// keys obtained from the browser when subscribing for notifications. The notifications
	// service uses these details to protect the notifications content.
	Keys *WebPushSubscriptionObjectKeys `protobuf:"bytes,2,opt,name=keys,proto3" json:"keys,omitempty"`
}

func (x *WebPushSubscriptionObject) Reset() {
	*x = WebPushSubscriptionObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebPushSubscriptionObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebPushSubscriptionObject) ProtoMessage() {}

func (x *WebPushSubscriptionObject) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebPushSubscriptionObject.ProtoReflect.Descriptor instead.
func (*WebPushSubscriptionObject) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{19}
}

func (x *WebPushSubscriptionObject) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *WebPushSubscriptionObject) GetKeys() *WebPushSubscriptionObjectKeys {
	if x != nil {
		return x.Keys
	}
	return nil
}

type SubscribeWebPushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subscription holds the subscribe data that is returned by the browser when subscribing
	Subscription *WebPushSubscriptionObject `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *SubscribeWebPushRequest) Reset() {
	*x = SubscribeWebPushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeWebPushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeWebPushRequest) ProtoMessage() {}

func (x *SubscribeWebPushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeWebPushRequest.ProtoReflect.Descriptor instead.
func (*SubscribeWebPushRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{20}
}

func (x *SubscribeWebPushRequest) GetSubscription() *WebPushSubscriptionObject {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type SubscribeWebPushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeWebPushResponse) Reset() {
	*x = SubscribeWebPushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeWebPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeWebPushResponse) ProtoMessage() {}

func (x *SubscribeWebPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeWebPushResponse.ProtoReflect.Descriptor instead.
func (*SubscribeWebPushResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{21}
}

type UnsubscribeWebPushRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// subscription holds the subscribe data that is returned by the browser when subscribing
	Subscription *WebPushSubscriptionObject `protobuf:"bytes,1,opt,name=subscription,proto3" json:"subscription,omitempty"`
}

func (x *UnsubscribeWebPushRequest) Reset() {
	*x = UnsubscribeWebPushRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeWebPushRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeWebPushRequest) ProtoMessage() {}

func (x *UnsubscribeWebPushRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeWebPushRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeWebPushRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{22}
}

func (x *UnsubscribeWebPushRequest) GetSubscription() *WebPushSubscriptionObject {
	if x != nil {
		return x.Subscription
	}
	return nil
}

type UnsubscribeWebPushResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeWebPushResponse) Reset() {
	*x = UnsubscribeWebPushResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeWebPushResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeWebPushResponse) ProtoMessage() {}

func (x *UnsubscribeWebPushResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeWebPushResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeWebPushResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{23}
}

type SubscribeAPNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APN device token
	DeviceToken []byte `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	// environment indicates what type of environment the subscription is target.
	Environment APNEnvironment `protobuf:"varint,2,opt,name=environment,proto3,enum=river.APNEnvironment" json:"environment,omitempty"`
	// Requested push notification version (default=NOTIFICATION_PUSH_VERSION_1)
	PushVersion NotificationPushVersion `protobuf:"varint,3,opt,name=push_version,json=pushVersion,proto3,enum=river.NotificationPushVersion" json:"push_version,omitempty"`
}

func (x *SubscribeAPNRequest) Reset() {
	*x = SubscribeAPNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeAPNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeAPNRequest) ProtoMessage() {}

func (x *SubscribeAPNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeAPNRequest.ProtoReflect.Descriptor instead.
func (*SubscribeAPNRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{24}
}

func (x *SubscribeAPNRequest) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

func (x *SubscribeAPNRequest) GetEnvironment() APNEnvironment {
	if x != nil {
		return x.Environment
	}
	return APNEnvironment_APN_ENVIRONMENT_UNSPECIFIED
}

func (x *SubscribeAPNRequest) GetPushVersion() NotificationPushVersion {
	if x != nil {
		return x.PushVersion
	}
	return NotificationPushVersion_NOTIFICATION_PUSH_VERSION_UNSPECIFIED
}

type APNSubscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APN device token
	DeviceToken []byte `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
	// environment indicates what type of environment the subscription is target.
	Environment APNEnvironment `protobuf:"varint,2,opt,name=environment,proto3,enum=river.APNEnvironment" json:"environment,omitempty"`
}

func (x *APNSubscription) Reset() {
	*x = APNSubscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APNSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APNSubscription) ProtoMessage() {}

func (x *APNSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APNSubscription.ProtoReflect.Descriptor instead.
func (*APNSubscription) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{25}
}

func (x *APNSubscription) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

func (x *APNSubscription) GetEnvironment() APNEnvironment {
	if x != nil {
		return x.Environment
	}
	return APNEnvironment_APN_ENVIRONMENT_UNSPECIFIED
}

type SubscribeAPNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SubscribeAPNResponse) Reset() {
	*x = SubscribeAPNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeAPNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeAPNResponse) ProtoMessage() {}

func (x *SubscribeAPNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeAPNResponse.ProtoReflect.Descriptor instead.
func (*SubscribeAPNResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{26}
}

type UnsubscribeAPNRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// APN device token
	DeviceToken []byte `protobuf:"bytes,1,opt,name=device_token,json=deviceToken,proto3" json:"device_token,omitempty"`
}

func (x *UnsubscribeAPNRequest) Reset() {
	*x = UnsubscribeAPNRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeAPNRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeAPNRequest) ProtoMessage() {}

func (x *UnsubscribeAPNRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeAPNRequest.ProtoReflect.Descriptor instead.
func (*UnsubscribeAPNRequest) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{27}
}

func (x *UnsubscribeAPNRequest) GetDeviceToken() []byte {
	if x != nil {
		return x.DeviceToken
	}
	return nil
}

type UnsubscribeAPNResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnsubscribeAPNResponse) Reset() {
	*x = UnsubscribeAPNResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notifications_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnsubscribeAPNResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnsubscribeAPNResponse) ProtoMessage() {}

func (x *UnsubscribeAPNResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notifications_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnsubscribeAPNResponse.ProtoReflect.Descriptor instead.
func (*UnsubscribeAPNResponse) Descriptor() ([]byte, []int) {
	return file_notifications_proto_rawDescGZIP(), []int{28}
}

var File_notifications_proto protoreflect.FileDescriptor

var file_notifications_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x72, 0x69, 0x76, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0xdd, 0x03, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x39,
	0x0a, 0x09, 0x64, 0x6d, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x08, 0x64, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0a, 0x67, 0x64, 0x6d,
	0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x67, 0x64,
	0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x6d, 0x5f, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x12, 0x3b, 0x0a, 0x0c, 0x67, 0x64, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x52, 0x0b, 0x67, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x4d,
	0x0a, 0x11, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x10, 0x77, 0x65, 0x62,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a,
	0x11, 0x61, 0x70, 0x6e, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x2e, 0x41, 0x50, 0x4e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x61, 0x70, 0x6e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0xb1, 0x02, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x6d, 0x5f,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x64, 0x6d, 0x47, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x12, 0x38, 0x0a, 0x0b, 0x64, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x0a, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x3c,
	0x0a, 0x0a, 0x67, 0x64, 0x6d, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x64, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x09, 0x67, 0x64, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x0c,
	0x67, 0x64, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x64, 0x6d, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x0b, 0x67, 0x64,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x06,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x22, 0x15, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x65, 0x0a,
	0x10, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a, 0x11, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a,
	0x13, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x98, 0x01, 0x0a, 0x0c, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x36, 0x0a,
	0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x6d, 0x47,
	0x64, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x39, 0x0a, 0x09, 0x64, 0x6d, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x44, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x08, 0x64, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0a,
	0x67, 0x64, 0x6d, 0x5f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x09, 0x67, 0x64, 0x6d, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65,
	0x74, 0x44, 0x6d, 0x47, 0x64, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x74, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x44, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1d, 0x0a, 0x1b,
	0x53, 0x65, 0x74, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x1b, 0x53,
	0x65, 0x74, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x64,
	0x6d, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x67, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1e, 0x0a, 0x1c, 0x53, 0x65, 0x74, 0x47, 0x64, 0x6d, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6b, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x91,
	0x01, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x21, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x1d, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x32, 0x35, 0x36, 0x64, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x61, 0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75,
	0x74, 0x68, 0x22, 0x71, 0x0a, 0x19, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x2e, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x44, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x57,
	0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x61, 0x0a, 0x19, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x57, 0x65,
	0x62, 0x50, 0x75, 0x73, 0x68, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1c, 0x0a, 0x1a, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x37,
	0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x50, 0x4e, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x41, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70,
	0x75, 0x73, 0x68, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6d, 0x0a, 0x0f, 0x41, 0x50,
	0x4e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x37, 0x0a, 0x0b, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x50,
	0x4e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x65, 0x6e,
	0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x3a, 0x0a, 0x15, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x41, 0x50, 0x4e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x18, 0x0a,
	0x16, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x71, 0x0a, 0x15, 0x44, 0x6d, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x53, 0x5f, 0x59, 0x45, 0x53, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x44, 0x4d, 0x5f,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x10, 0x02, 0x12, 0x1b, 0x0a,
	0x17, 0x44, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x5f,
	0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x03, 0x2a, 0x9f, 0x01, 0x0a, 0x16, 0x47,
	0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x44, 0x4d, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x44,
	0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x4e, 0x4f, 0x10, 0x01, 0x12,
	0x1c, 0x0a, 0x18, 0x47, 0x44, 0x4d, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f,
	0x4e, 0x4f, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x02, 0x12, 0x27, 0x0a,
	0x23, 0x47, 0x44, 0x4d, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x54, 0x49, 0x4f,
	0x4e, 0x53, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x49, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x53, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x44, 0x4d, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x2a, 0xfb, 0x01, 0x0a,
	0x18, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x21, 0x53, 0x50, 0x41,
	0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x25, 0x0a, 0x21, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45,
	0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x01, 0x12, 0x2e, 0x0a, 0x2a, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4e, 0x4f, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x5f, 0x41, 0x4e, 0x44,
	0x5f, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x02, 0x12, 0x39, 0x0a, 0x35, 0x53, 0x50, 0x41, 0x43, 0x45,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x4e, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47,
	0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x5f, 0x4d, 0x45, 0x4e, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x49, 0x45, 0x53, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53,
	0x10, 0x03, 0x12, 0x26, 0x0a, 0x22, 0x53, 0x50, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x4e, 0x45, 0x4c, 0x5f, 0x53, 0x45, 0x54, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x04, 0x2a, 0x6e, 0x0a, 0x0e, 0x41, 0x50,
	0x4e, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x1b,
	0x41, 0x50, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1e, 0x0a,
	0x1a, 0x41, 0x50, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1b, 0x0a,
	0x17, 0x41, 0x50, 0x4e, 0x5f, 0x45, 0x4e, 0x56, 0x49, 0x52, 0x4f, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x41, 0x4e, 0x44, 0x42, 0x4f, 0x58, 0x10, 0x02, 0x2a, 0x86, 0x01, 0x0a, 0x17, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x75, 0x73, 0x68, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x25, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x56, 0x45, 0x52, 0x53,
	0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x31,
	0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x50, 0x55, 0x53, 0x48, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f,
	0x32, 0x10, 0x02, 0x32, 0xbc, 0x07, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x19, 0x2e, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x44, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x19, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x44, 0x6d,
	0x47, 0x64, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x1e, 0x2e, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6d, 0x47, 0x64, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x6d, 0x47, 0x64, 0x6d, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x13,
	0x53, 0x65, 0x74, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x21, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x44,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x44, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x14, 0x53, 0x65,
	0x74, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x12, 0x22, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x47, 0x64,
	0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x65, 0x74, 0x47, 0x64, 0x6d, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x53,
	0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x1e, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1f, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x68, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x25, 0x2e, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x12, 0x1e,
	0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x12, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65,
	0x62, 0x50, 0x75, 0x73, 0x68, 0x12, 0x20, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e,
	0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x57, 0x65, 0x62, 0x50, 0x75,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x12, 0x1a, 0x2e, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x41, 0x50, 0x4e, 0x12, 0x1c, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x6e,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2e, 0x55, 0x6e, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x41, 0x50, 0x4e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x72, 0x69, 0x76, 0x65, 0x72, 0x2d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notifications_proto_rawDescOnce sync.Once
	file_notifications_proto_rawDescData = file_notifications_proto_rawDesc
)

func file_notifications_proto_rawDescGZIP() []byte {
	file_notifications_proto_rawDescOnce.Do(func() {
		file_notifications_proto_rawDescData = protoimpl.X.CompressGZIP(file_notifications_proto_rawDescData)
	})
	return file_notifications_proto_rawDescData
}

var file_notifications_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_notifications_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_notifications_proto_goTypes = []interface{}{
	(DmChannelSettingValue)(0),              // 0: river.DmChannelSettingValue
	(GdmChannelSettingValue)(0),             // 1: river.GdmChannelSettingValue
	(SpaceChannelSettingValue)(0),           // 2: river.SpaceChannelSettingValue
	(APNEnvironment)(0),                     // 3: river.APNEnvironment
	(NotificationPushVersion)(0),            // 4: river.NotificationPushVersion
	(*GetSettingsRequest)(nil),              // 5: river.GetSettingsRequest
	(*GetSettingsResponse)(nil),             // 6: river.GetSettingsResponse
	(*SetSettingsRequest)(nil),              // 7: river.SetSettingsRequest
	(*SetSettingsResponse)(nil),             // 8: river.SetSettingsResponse
	(*DmChannelSetting)(nil),                // 9: river.DmChannelSetting
	(*GdmChannelSetting)(nil),               // 10: river.GdmChannelSetting
	(*SpaceChannelSetting)(nil),             // 11: river.SpaceChannelSetting
	(*SpaceSetting)(nil),                    // 12: river.SpaceSetting
	(*SetDmGdmSettingsRequest)(nil),         // 13: river.SetDmGdmSettingsRequest
	(*SetDmGdmSettingsResponse)(nil),        // 14: river.SetDmGdmSettingsResponse
	(*SetDmChannelSettingRequest)(nil),      // 15: river.SetDmChannelSettingRequest
	(*SetDmChannelSettingResponse)(nil),     // 16: river.SetDmChannelSettingResponse
	(*SetGdmChannelSettingRequest)(nil),     // 17: river.SetGdmChannelSettingRequest
	(*SetGdmChannelSettingResponse)(nil),    // 18: river.SetGdmChannelSettingResponse
	(*SetSpaceSettingsRequest)(nil),         // 19: river.SetSpaceSettingsRequest
	(*SetSpaceSettingsResponse)(nil),        // 20: river.SetSpaceSettingsResponse
	(*SetSpaceChannelSettingsRequest)(nil),  // 21: river.SetSpaceChannelSettingsRequest
	(*SetSpaceChannelSettingsResponse)(nil), // 22: river.SetSpaceChannelSettingsResponse
	(*WebPushSubscriptionObjectKeys)(nil),   // 23: river.WebPushSubscriptionObjectKeys
	(*WebPushSubscriptionObject)(nil),       // 24: river.WebPushSubscriptionObject
	(*SubscribeWebPushRequest)(nil),         // 25: river.SubscribeWebPushRequest
	(*SubscribeWebPushResponse)(nil),        // 26: river.SubscribeWebPushResponse
	(*UnsubscribeWebPushRequest)(nil),       // 27: river.UnsubscribeWebPushRequest
	(*UnsubscribeWebPushResponse)(nil),      // 28: river.UnsubscribeWebPushResponse
	(*SubscribeAPNRequest)(nil),             // 29: river.SubscribeAPNRequest
	(*APNSubscription)(nil),                 // 30: river.APNSubscription
	(*SubscribeAPNResponse)(nil),            // 31: river.SubscribeAPNResponse
	(*UnsubscribeAPNRequest)(nil),           // 32: river.UnsubscribeAPNRequest
	(*UnsubscribeAPNResponse)(nil),          // 33: river.UnsubscribeAPNResponse
}
var file_notifications_proto_depIdxs = []int32{
	12, // 0: river.GetSettingsResponse.space:type_name -> river.SpaceSetting
	0,  // 1: river.GetSettingsResponse.dm_global:type_name -> river.DmChannelSettingValue
	1,  // 2: river.GetSettingsResponse.gdm_global:type_name -> river.GdmChannelSettingValue
	9,  // 3: river.GetSettingsResponse.dm_channels:type_name -> river.DmChannelSetting
	10, // 4: river.GetSettingsResponse.gdm_channels:type_name -> river.GdmChannelSetting
	24, // 5: river.GetSettingsResponse.web_subscriptions:type_name -> river.WebPushSubscriptionObject
	30, // 6: river.GetSettingsResponse.apn_subscriptions:type_name -> river.APNSubscription
	0,  // 7: river.SetSettingsRequest.dm_global:type_name -> river.DmChannelSettingValue
	9,  // 8: river.SetSettingsRequest.dm_channels:type_name -> river.DmChannelSetting
	1,  // 9: river.SetSettingsRequest.gdm_global:type_name -> river.GdmChannelSettingValue
	10, // 10: river.SetSettingsRequest.gdm_channels:type_name -> river.GdmChannelSetting
	12, // 11: river.SetSettingsRequest.spaces:type_name -> river.SpaceSetting
	0,  // 12: river.DmChannelSetting.value:type_name -> river.DmChannelSettingValue
	1,  // 13: river.GdmChannelSetting.value:type_name -> river.GdmChannelSettingValue
	2,  // 14: river.SpaceChannelSetting.value:type_name -> river.SpaceChannelSettingValue
	2,  // 15: river.SpaceSetting.value:type_name -> river.SpaceChannelSettingValue
	11, // 16: river.SpaceSetting.channels:type_name -> river.SpaceChannelSetting
	0,  // 17: river.SetDmGdmSettingsRequest.dm_global:type_name -> river.DmChannelSettingValue
	1,  // 18: river.SetDmGdmSettingsRequest.gdm_global:type_name -> river.GdmChannelSettingValue
	0,  // 19: river.SetDmChannelSettingRequest.value:type_name -> river.DmChannelSettingValue
	1,  // 20: river.SetGdmChannelSettingRequest.value:type_name -> river.GdmChannelSettingValue
	2,  // 21: river.SetSpaceSettingsRequest.value:type_name -> river.SpaceChannelSettingValue
	2,  // 22: river.SetSpaceChannelSettingsRequest.value:type_name -> river.SpaceChannelSettingValue
	23, // 23: river.WebPushSubscriptionObject.keys:type_name -> river.WebPushSubscriptionObjectKeys
	24, // 24: river.SubscribeWebPushRequest.subscription:type_name -> river.WebPushSubscriptionObject
	24, // 25: river.UnsubscribeWebPushRequest.subscription:type_name -> river.WebPushSubscriptionObject
	3,  // 26: river.SubscribeAPNRequest.environment:type_name -> river.APNEnvironment
	4,  // 27: river.SubscribeAPNRequest.push_version:type_name -> river.NotificationPushVersion
	3,  // 28: river.APNSubscription.environment:type_name -> river.APNEnvironment
	5,  // 29: river.NotificationService.GetSettings:input_type -> river.GetSettingsRequest
	7,  // 30: river.NotificationService.SetSettings:input_type -> river.SetSettingsRequest
	13, // 31: river.NotificationService.SetDmGdmSettings:input_type -> river.SetDmGdmSettingsRequest
	15, // 32: river.NotificationService.SetDmChannelSetting:input_type -> river.SetDmChannelSettingRequest
	17, // 33: river.NotificationService.SetGdmChannelSetting:input_type -> river.SetGdmChannelSettingRequest
	19, // 34: river.NotificationService.SetSpaceSettings:input_type -> river.SetSpaceSettingsRequest
	21, // 35: river.NotificationService.SetSpaceChannelSettings:input_type -> river.SetSpaceChannelSettingsRequest
	25, // 36: river.NotificationService.SubscribeWebPush:input_type -> river.SubscribeWebPushRequest
	27, // 37: river.NotificationService.UnsubscribeWebPush:input_type -> river.UnsubscribeWebPushRequest
	29, // 38: river.NotificationService.SubscribeAPN:input_type -> river.SubscribeAPNRequest
	32, // 39: river.NotificationService.UnsubscribeAPN:input_type -> river.UnsubscribeAPNRequest
	6,  // 40: river.NotificationService.GetSettings:output_type -> river.GetSettingsResponse
	8,  // 41: river.NotificationService.SetSettings:output_type -> river.SetSettingsResponse
	14, // 42: river.NotificationService.SetDmGdmSettings:output_type -> river.SetDmGdmSettingsResponse
	16, // 43: river.NotificationService.SetDmChannelSetting:output_type -> river.SetDmChannelSettingResponse
	18, // 44: river.NotificationService.SetGdmChannelSetting:output_type -> river.SetGdmChannelSettingResponse
	20, // 45: river.NotificationService.SetSpaceSettings:output_type -> river.SetSpaceSettingsResponse
	22, // 46: river.NotificationService.SetSpaceChannelSettings:output_type -> river.SetSpaceChannelSettingsResponse
	26, // 47: river.NotificationService.SubscribeWebPush:output_type -> river.SubscribeWebPushResponse
	28, // 48: river.NotificationService.UnsubscribeWebPush:output_type -> river.UnsubscribeWebPushResponse
	31, // 49: river.NotificationService.SubscribeAPN:output_type -> river.SubscribeAPNResponse
	33, // 50: river.NotificationService.UnsubscribeAPN:output_type -> river.UnsubscribeAPNResponse
	40, // [40:51] is the sub-list for method output_type
	29, // [29:40] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_notifications_proto_init() }
func file_notifications_proto_init() {
	if File_notifications_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notifications_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DmChannelSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdmChannelSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceChannelSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDmGdmSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDmGdmSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDmChannelSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDmChannelSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGdmChannelSettingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetGdmChannelSettingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceChannelSettingsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpaceChannelSettingsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPushSubscriptionObjectKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebPushSubscriptionObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeWebPushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeWebPushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeWebPushRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeWebPushResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeAPNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APNSubscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeAPNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeAPNRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notifications_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnsubscribeAPNResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notifications_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notifications_proto_goTypes,
		DependencyIndexes: file_notifications_proto_depIdxs,
		EnumInfos:         file_notifications_proto_enumTypes,
		MessageInfos:      file_notifications_proto_msgTypes,
	}.Build()
	File_notifications_proto = out.File
	file_notifications_proto_rawDesc = nil
	file_notifications_proto_goTypes = nil
	file_notifications_proto_depIdxs = nil
}
