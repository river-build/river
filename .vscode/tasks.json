{
  "version": "2.0.0",
  "presentation": {
    "echo": false,
    "reveal": "always",
    "focus": false,
    "panel": "dedicated",
    "showReuseMessage": true
  },
  "tasks": [
    {
      // start local dev:
      //
      // 1. yarn install
      // 2. start blockchains
      // 3. configure nodes
      // 4. starts all servers and clients
      //
      // it's important to do in this order since the servers
      // and use the artifacts of the contracts in their builds
      "label": "~Start Local Dev~",
      "dependsOn": [
        "CheckVersions",
        "FoundryUp",
        "YarnInstall",
        "Stage 1",
      ],
      // Mark as the default build task so cmd/ctrl+shift+b will create them
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dependsOrder": "sequence"
    },
    {
      "label": "Stage 1",
      "dependsOn": [
        "BaseChain",
        "RiverChain",
        "Stage 2"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
    },
    {
      "label": "Stage 2",
      "dependsOn": [
        "CasablancaConfigureNodes",
        "BuildProtobufs",
        "Stage 3"
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "dependsOrder": "sequence"
    },
    {
      "label": "Stage 3",
      "dependsOn": [
        "Start Watches",
        "Casablanca DebugApp",
        "Casablanca",
        "Casablanca-No-Entitlements",
        "XChain-Single",
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": []
    },
    {
      "label": "Start Watches",
      "dependsOn": [
        "WatchCasablancaDlog",
        "WatchCasablancaEncryption",
        "WatchCasablancaProto",
        "WatchCasablancaWeb3",
        "WatchCasablancaSdk",
      ],
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": []
    },
    {
      "label": "Restart Watches",
      "dependsOn": [
        "Kill Watches",
        "DummyTask",
        "Start Watches",
      ],
      "dependsOrder": "sequence",
      "group": {
        "kind": "build",
        "isDefault": false
      },
      "problemMatcher": []
    },
    {
      "label": "FoundryUp",
      "type": "shell",
      "command": "./scripts/foundry-up.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "CheckVersions",
      "type": "shell",
      "command": "./scripts/check-node-version.sh && ./scripts/check-go-version.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "DummyTask",
      "type": "shell",
      "command": "sleep 1 && echo 'Dummy task... sometimes this is just needed.'",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "YarnInstall",
      "type": "shell",
      "command": "yarn",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "YarnClean & Cleanup",
      "type": "shell",
      "command": "./scripts/yarn-clean.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Start Load Testing Redis",
      "type": "shell",
      "command": "./scripts/start-load-testing-redis.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-servers"
      }
    },
    {
      "label": "Casablanca",
      "type": "shell",
      "command": "sleep 3 && yarn run --top-level csb:dev:entitlements -r",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-servers"
      }
    },
    {
      "label": "Casablanca-No-Entitlements",
      "type": "shell",
      "command": "sleep 5 && yarn run --top-level csb:start:no-entitlements -r",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-servers"
      }
    },
    {
      "label": "Configure Casablanca-Multinode ",
      "type": "shell",
      "command": "./scripts/configure-nodes.sh --multi",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Configure Casablanca-Multinode-No-Entitlements",
      "type": "shell",
      "command": "./scripts/configure-nodes.sh --multi_ne",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Casablanca-Multinode",
      "type": "shell",
      "command": "yarn run --top-level csb:multi -r",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-servers"
      }
    },
    {
      "label": "Casablanca-Multinode-No-Entitlements",
      "type": "shell",
      "command": "yarn run --top-level csb:multi:no-entitlements -r",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-servers"
      }
    },
    {
      "label": "Stop Casablanca",
      "type": "shell",
      "command": "./core/scripts/stop_node.sh && ./core/node/stop_multi.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Both Casablancas",
      "dependsOn": [
        "Casablanca",
        "Casablanca-No-Entitlements"
      ],
      "group": {
        "kind": "build",
      },
      "problemMatcher": [],
    },
    {
      "label": "Restart Casablanca",
      "dependsOn": [
        "Stop Casablanca",
        "DummyTask",
        "Both Casablancas"
      ],
      "group": {
        "kind": "build",
      },
      "dependsOrder": "sequence",
      "problemMatcher": [],
    },
    {
      "label": "CasablancaConfigureNodes",
      "type": "shell",
      "command": "./scripts/configure-nodes.sh --single && ./scripts/configure-nodes.sh --single_ne",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "XChain-Single",
      "type": "shell",
      "command": "sleep 1 && RUN_ENV=single ./core/xchain/launch_multi.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "xchain"
      }
    },
    {
      "label": "XChain-Multi",
      "type": "shell",
      "command": "sleep 1 && RUN_ENV=multi ./core/xchain/launch_multi.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "xchain"
      }
    },
    {
      "label": "BaseChain",
      "type": "shell",
      "command": "RIVER_BLOCK_TIME=1 ./scripts/start-local-basechain.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-blockchains"
      }
    },
    {
      "label": "RiverChain",
      "type": "shell",
      "command": "RIVER_BLOCK_TIME=1 ./scripts/start-local-riverchain.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-blockchains"
      }
    },
    {
      "label": "Build Contracts",
      "type": "shell",
      "command": "./scripts/build-contracts.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "BuildContractTypes",
      "type": "shell",
      "command": "./scripts/build-contract-types.sh localhost",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "BuildProtobufs",
      "type": "shell",
      "command": "yarn csb:build",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "WatchCasablancaSdk",
      "type": "shell",
      "command": "cd packages/sdk && yarn watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch"
      }
    },
    {
      "label": "WatchCasablancaEncryption",
      "type": "shell",
      "command": "cd packages/encryption && yarn watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch"
      }
    },
    {
      "label": "WatchCasablancaDlog",
      "type": "shell",
      "command": "cd packages/dlog && yarn watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch"
      }
    },
    {
      "label": "WatchCasablancaProto",
      "type": "shell",
      "command": "cd packages/proto && yarn watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch-proto"
      }
    },
    {
      "label": "WatchCasablancaWeb3",
      "type": "shell",
      "command": "cd packages/web3 && yarn watch",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch-proto"
      }
    },
    {
      "label": "WatchCasablancaProto_Go",
      "type": "shell",
      "command": "cd packages/proto && yarn watch:go",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-watch-proto"
      }
    },
    {
      "label": "Casablanca DebugApp",
      "type": "shell",
      "command": "./scripts/wait-for-core.sh && cd packages/debug-app && yarn dev",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-clients"
      }
    },
    {
      "label": "MITM - Casablanca",
      "type": "shell",
      "command": "mitmweb -p 7105 --mode reverse:http://localhost:7104/",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "local-mitm"
      }
    },
    {
      "label": "KillAllLocalDev",
      "type": "shell",
      "command": "./scripts/kill-all-local-dev.sh -y",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Kill Watches",
      "type": "shell",
      "command": "echo 'killing watches' && kill $(ps -ax | grep 'yarn watch' | awk '{print $1}') && return 0",
      "isBackground": false,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Start Local Blockscout",
      "type": "shell",
      "command": "./scripts/start-local-blockscout.sh",
      "isBackground": true,
      "problemMatcher": [],
      "presentation": {
        "group": "ephemeral",
        "focus": true,
        "panel": "shared",
      }
    },
    {
      "label": "Restart Local Dev",
      "dependsOn": [
        "KillAllLocalDev",
        "~Start Local Dev~",
      ],
      // Mark as the default build task so cmd/ctrl+shift+b will create them
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dependsOrder": "sequence"
    },
    {
      "label": "Kill All, Clean and Start Local Dev",
      "dependsOn": [
        "KillAllLocalDev",
        "YarnClean & Cleanup",
        "~Start Local Dev~",
      ],
      // Mark as the default build task so cmd/ctrl+shift+b will create them
      "group": {
        "kind": "build",
        "isDefault": true
      },
      "dependsOrder": "sequence"
    },
  ]
}
